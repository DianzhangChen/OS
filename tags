!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
-format	gun_backup/GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOCATE_SIZE	obj/user/sbrktest.asm	/^#define ALLOCATE_SIZE 4096$/;"	d
ALLOCATE_SIZE	user/sbrktest.c	3;"	d	file:
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AR	gun_backup/GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
AS	gun_backup/GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sbrktest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CC	gun_backup/GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CFLAGS	gun_backup/GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	18;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPUS	gun_backup/GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon6
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon6
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	13;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sbrktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon2
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon2
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon2
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon2
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon2
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCCPREFIX	gun_backup/GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GCC_LIB	gun_backup/GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GDBPORT	gun_backup/GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IMAGES	gun_backup/GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KERN_CFLAGS	gun_backup/GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LABSETUP	gun_backup/GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LD	gun_backup/GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LDFLAGS	gun_backup/GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	392;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NATIVE_CFLAGS	gun_backup/GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCC	gun_backup/GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	40;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NM	gun_backup/GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJCOPY	gun_backup/GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIR	gun_backup/GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDIRS	gun_backup/GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OBJDUMP	gun_backup/GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	93;"	d
O_CREAT	inc/lib.h	95;"	d
O_EXCL	inc/lib.h	97;"	d
O_MKDIR	inc/lib.h	98;"	d
O_RDONLY	inc/lib.h	90;"	d
O_RDWR	inc/lib.h	92;"	d
O_TRUNC	inc/lib.h	96;"	d
O_WRONLY	inc/lib.h	91;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 21 20:56:15 EDT 2013$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PERL	gun_backup/GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	135;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	79;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	conf/env.mk	/^QEMU=\/home\/oslab\/qemu-1.5.2\/dist\/bin\/qemu-system-i386$/;"	m
QEMU	gun_backup/GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QEMUOPTS	gun_backup/GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	inc/types.h	63;"	d
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STRING_SIZE	obj/user/sbrktest.asm	/^#define STRING_SIZE	  64$/;"	d
STRING_SIZE	user/sbrktest.c	4;"	d	file:
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_map_kernel_page	inc/syscall.h	/^	SYS_map_kernel_page,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_sbrk	inc/syscall.h	/^	SYS_sbrk,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TAR	gun_backup/GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TOP	gun_backup/GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/badsegment.asm	/^UDWtype$/;"	l
UDWtype	obj/user/breakpoint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/divzero.asm	/^UDWtype$/;"	l
UDWtype	obj/user/dumbfork.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/fairness.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultalloc.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultallocbad.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultbadhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultdie.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultevilhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultnostack.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultread.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultreadkernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultregs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwrite.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwritekernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/forktree.asm	/^UDWtype$/;"	l
UDWtype	obj/user/hello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/idle.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpong.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpongs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/primes.asm	/^UDWtype$/;"	l
UDWtype	obj/user/sbrktest.asm	/^UDWtype$/;"	l
UDWtype	obj/user/softint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/spin.asm	/^UDWtype$/;"	l
UDWtype	obj/user/stresssched.asm	/^UDWtype$/;"	l
UDWtype	obj/user/testbss.asm	/^UDWtype$/;"	l
UDWtype	obj/user/yield.asm	/^UDWtype$/;"	l
UENVS	inc/memlayout.h	114;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULDFLAGS	gun_backup/GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UPAGES	inc/memlayout.h	112;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USER_CFLAGS	gun_backup/GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	391;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/badsegment.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/breakpoint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/divzero.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/dumbfork.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/fairness.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultalloc.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultallocbad.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultbadhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultdie.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultevilhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultnostack.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultread.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultreadkernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultregs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwrite.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwritekernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/forktree.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/hello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/idle.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpong.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpongs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/primes.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/sbrktest.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/softint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/spin.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/stresssched.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/testbss.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/yield.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/badsegment.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/breakpoint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/divzero.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/dumbfork.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/fairness.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultalloc.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultallocbad.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultbadhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultdie.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultevilhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultnostack.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultread.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultreadkernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultregs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwrite.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwritekernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/forktree.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/hello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/idle.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpong.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpongs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/primes.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/sbrktest.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/softint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/spin.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/stresssched.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/testbss.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/yield.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/badsegment.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/breakpoint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/divzero.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/dumbfork.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/fairness.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultalloc.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultallocbad.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultbadhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultdie.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultevilhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultnostack.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultread.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultreadkernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultregs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwrite.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwritekernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/forktree.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/hello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/idle.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpong.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpongs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/primes.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/sbrktest.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/softint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/spin.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/stresssched.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/testbss.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/yield.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sbrktest.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	user/evilhello2.c	/^char addr[PGSIZE];$/;"	v
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
alloc_page_with_color	kern/pmap.c	/^struct Page *alloc_page_with_color(int alloc_flags, int color)$/;"	f
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sbrktest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sbrktest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sbrktest.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argv0	lib/panic.c	/^const char *argv0;$/;"	v
assert	inc/assert.h	14;"	d
atomic_return_and_add	kern/spinlock.c	/^unsigned atomic_return_and_add(unsigned *addr, unsigned value)$/;"	f
b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/badsegment.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/breakpoint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/divzero.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/dumbfork.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/fairness.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultalloc.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultallocbad.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultbadhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultdie.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultevilhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultnostack.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultread.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultreadkernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultregs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwrite.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwritekernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/forktree.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/hello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/idle.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpong.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpongs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/primes.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/sbrktest.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/softint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/spin.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/stresssched.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/testbss.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/yield.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 16;$/;"	d
base	obj/user/sbrktest.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sbrktest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef int bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_region_large	kern/pmap.c	/^boot_map_region_large(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sbrktest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sbrktest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char addr[PGSIZE];$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sbrktest.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab2.sh	/^check () {$/;"	f
check_continuous	kern/pmap.c	/^check_continuous(struct Page *pp, int num_page)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_n_pages	kern/pmap.c	/^check_n_pages(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_realloc_npages	kern/pmap.c	/^check_realloc_npages(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
check_va2pa_large	kern/pmap.c	/^check_va2pa_large(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
chunk_list	kern/pmap.c	/^static struct Page *chunk_list;$/;"	v	typeref:struct:Page	file:
chunk_list	obj/kern/kernel.asm	/^	chunk_list = NULL;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sbrktest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sbrktest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sbrktest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sbrktest.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/badsegment.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/badsegment.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/badsegment.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/breakpoint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/breakpoint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/breakpoint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/divzero.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/divzero.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/divzero.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/dumbfork.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/dumbfork.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/dumbfork.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/fairness.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/fairness.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/fairness.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultalloc.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultalloc.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultalloc.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultallocbad.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultallocbad.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultallocbad.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultbadhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultdie.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultdie.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultdie.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultevilhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultnostack.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultnostack.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultnostack.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultread.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultread.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultread.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultreadkernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultregs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultregs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultregs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwrite.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwrite.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwrite.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwritekernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/forktree.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/forktree.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/forktree.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/hello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/hello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/hello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/idle.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/idle.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/idle.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpong.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpong.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpong.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpongs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpongs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpongs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/primes.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/primes.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/primes.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/sbrktest.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/sbrktest.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/sbrktest.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/softint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/softint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/softint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/spin.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/spin.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/spin.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/stresssched.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/stresssched.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/stresssched.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/testbss.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/testbss.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/testbss.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/yield.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/yield.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/yield.asm	/^  d0 = dd.s.low;$/;"	d
d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/badsegment.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/badsegment.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/breakpoint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/breakpoint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/divzero.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/divzero.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/dumbfork.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/dumbfork.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/fairness.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/fairness.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultalloc.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultalloc.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultallocbad.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultallocbad.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultbadhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultbadhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultdie.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultdie.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultevilhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultevilhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultnostack.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultnostack.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultread.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultread.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultreadkernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultreadkernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultregs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultregs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwrite.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwrite.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwritekernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwritekernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/forktree.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/forktree.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/hello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/hello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/idle.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/idle.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpong.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpong.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpongs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpongs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/primes.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/primes.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/sbrktest.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/sbrktest.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/softint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/softint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/spin.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/spin.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/stresssched.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/stresssched.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/testbss.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/testbss.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/yield.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/yield.asm	/^  d1 = dd.s.high;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default: break;$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/evilhello2.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sbrktest.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
do_overflow	kern/monitor.c	/^do_overflow(void)$/;"	f
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sbrktest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end	obj/user/sbrktest.asm	/^	end = sys_sbrk(ALLOCATE_SIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	obj/user/evilhello2.asm	/^	entry = gdt + index;$/;"	d
entry	user/evilhello2.c	/^struct Segdesc* entry;$/;"	v	typeref:struct:Segdesc
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = NULL;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_id	obj/kern/kernel.asm	/^		env_id = ENVX(curenv->env_id);$/;"	d
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
env_va_end	inc/env.h	/^	uint32_t env_va_end;$/;"	m	struct:Env
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sbrktest.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sbrktest.asm	/^				err = -err;$/;"	d
err	obj/user/sbrktest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
evil	user/evilhello2.c	/^void evil()$/;"	f
evil_helper	user/evilhello2.c	/^void evil_helper(){$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/kern/kernel.asm	/^extern void region_alloc(struct Env *e, void *va, size_t len);$/;"	l
extern	obj/kern/kernel.asm	/^extern void sysenter_handler();$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 80 12 00       	mov    $0x128000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 80 12 f0       	mov    $0xf0128000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 f0 00 00 00       	call   f010012e <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d a0 ee 33 f0 00 	cmpl   $0x0,0xf033eea0$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 a0 ee 33 f0    	mov    %esi,0xf033eea0$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 28 69 00 00       	call   f010698c <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 80 70 10 f0 	movl   $0xf0107080,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 92 45 00 00       	call   f0104614 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 53 45 00 00       	call   f01045e1 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 ce 84 10 f0 	movl   $0xf01084ce,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 7a 45 00 00       	call   f0104614 <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 b4 11 00 00       	call   f010125a <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 46 71 10 f0 	movl   $0xf0107146,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 a5 68 00 00       	call   f010698c <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 52 71 10 f0 	movl   $0xf0107152,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 1d 45 00 00       	call   f0104614 <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 ab 68 00 00       	call   f01069a7 <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 98 3b 00 00       	call   f0103c99 <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 2a 45 00 00       	call   f0104630 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 81 68 00 00       	call   f010698c <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 f0 33 f0    	add    $0xf033f020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 0c 6b 00 00       	call   f0106c35 <spin_lock>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 5a 4e 00 00       	call   f0104f88 <sched_yield>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e <i386_init>:$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	55                   	push   %ebp$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	53                   	push   %ebx$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	b8 04 00 38 f0       	mov    $0xf0380004,%eax$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	2d 9d de 33 f0       	sub    $0xf033de9d,%eax$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	00 $/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	c7 04 24 9d de 33 f0 	movl   $0xf033de9d,(%esp)$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 99 61 00 00       	call   f01062f0 <memset>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	e8 df 06 00 00       	call   f010083b <cons_init>$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	00 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 68 71 10 f0 	movl   $0xf0107168,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 a4 44 00 00       	call   f0104614 <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 1d 1c 00 00       	call   f0101d92 <mem_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 49 3b 00 00       	call   f0103cc3 <env_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 79 45 00 00       	call   f01046f8 <trap_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	e8 ef 64 00 00       	call   f0106673 <mp_init>$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	e8 1e 68 00 00       	call   f01069a7 <lapic_init>$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	e8 cd 43 00 00       	call   f010455b <pic_init>$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	e8 9b 6a 00 00       	call   f0106c35 <spin_lock>$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	83 3d a8 ee 33 f0 07 	cmpl   $0x7,0xf033eea8$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	77 24                	ja     f01001c7 <i386_init+0x99>$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	00 $/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	f0 $/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	c7 44 24 04 7b 00 00 	movl   $0x7b,0x4(%esp)$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	00 $/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	c7 04 24 46 71 10 f0 	movl   $0xf0107146,(%esp)$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	e8 79 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	b8 82 65 10 f0       	mov    $0xf0106582,%eax$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	2d 08 65 10 f0       	sub    $0xf0106508,%eax$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	c7 44 24 04 08 65 10 	movl   $0xf0106508,0x4(%esp)$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	f0 $/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	e8 51 61 00 00       	call   f010633a <memmove>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	a1 c4 f3 33 f0       	mov    0xf033f3c4,%eax$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	29 c2                	sub    %eax,%edx$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	3d 20 f0 33 f0       	cmp    $0xf033f020,%eax$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	0f 86 95 00 00 00    	jbe    f01002a1 <i386_init+0x173>$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	bb 20 f0 33 f0       	mov    $0xf033f020,%ebx$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	e8 76 67 00 00       	call   f010698c <cpunum>$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	29 c2                	sub    %eax,%edx$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	39 c3                	cmp    %eax,%ebx$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	74 51                	je     f010027e <i386_init+0x150>$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	89 d8                	mov    %ebx,%eax$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	2d 20 f0 33 f0       	sub    $0xf033f020,%eax$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	8d 14 d0             	lea    (%eax,%edx,8),%edx$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	89 d1                	mov    %edx,%ecx$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	29 d1                	sub    %edx,%ecx$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	89 d1                	mov    %edx,%ecx$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	c1 e1 0e             	shl    $0xe,%ecx$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	29 d1                	sub    %edx,%ecx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	8d 44 90 01          	lea    0x1(%eax,%edx,4),%eax$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	05 00 00 34 f0       	add    $0xf0340000,%eax$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	a3 a4 ee 33 f0       	mov    %eax,0xf033eea4$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	00 $/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	31 c0                	xor    %eax,%eax$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	8a 03                	mov    (%ebx),%al$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	e8 72 68 00 00       	call   f0106ae8 <lapic_startap>$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	75 f8                	jne    f0100276 <i386_init+0x148>$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	a1 c4 f3 33 f0       	mov    0xf033f3c4,%eax$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	29 c2                	sub    %eax,%edx$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	39 c3                	cmp    %eax,%ebx$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	0f 82 70 ff ff ff    	jb     f0100211 <i386_init+0xe3>$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	00 $/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	c7 44 24 04 95 09 01 	movl   $0x10995,0x4(%esp)$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	00 $/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	c7 04 24 ca 34 22 f0 	movl   $0xf02234ca,(%esp)$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	e8 a1 3c 00 00       	call   f0103f63 <env_create>$/;"	l
f01002c2	obj/kern/kernel.asm	/^f01002c2:	4b                   	dec    %ebx$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	75 e1                	jne    f01002a6 <i386_init+0x178>$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	00 $/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	c7 44 24 04 96 09 01 	movl   $0x10996,0x4(%esp)$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	00 $/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	c7 04 24 5f 3e 23 f0 	movl   $0xf0233e5f,(%esp)$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	e8 82 3c 00 00       	call   f0103f63 <env_create>$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	00 $/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	c7 44 24 04 96 09 01 	movl   $0x10996,0x4(%esp)$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	00 $/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	c7 04 24 5f 3e 23 f0 	movl   $0xf0233e5f,(%esp)$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	e8 66 3c 00 00       	call   f0103f63 <env_create>$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	00 $/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	c7 44 24 04 96 09 01 	movl   $0x10996,0x4(%esp)$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	00 $/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	c7 04 24 5f 3e 23 f0 	movl   $0xf0233e5f,(%esp)$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	e8 4a 3c 00 00       	call   f0103f63 <env_create>$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	e8 6a 4c 00 00       	call   f0104f88 <sched_yield>$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e <spinlock_test>:$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	55                   	push   %ebp$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	56                   	push   %esi$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	53                   	push   %ebx$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	e8 5a 66 00 00       	call   f010698c <cpunum>$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	85 c0                	test   %eax,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	75 10                	jne    f0100346 <spinlock_test+0x28>$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	7e 0c                	jle    f0100352 <spinlock_test+0x34>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	bb 64 00 00 00       	mov    $0x64,%ebx$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	be ad 8b db 68       	mov    $0x68db8bad,%esi$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	eb 14                	jmp    f0100366 <spinlock_test+0x48>$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	f3 90                	pause  $/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	7e ee                	jle    f0100352 <spinlock_test+0x34>$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	eb e0                	jmp    f0100346 <spinlock_test+0x28>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	e8 c3 68 00 00       	call   f0106c35 <spin_lock>$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	8b 0d 00 e0 33 f0    	mov    0xf033e000,%ecx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	89 c8                	mov    %ecx,%eax$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	f7 ee                	imul   %esi$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	89 c8                	mov    %ecx,%eax$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	29 c2                	sub    %eax,%edx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	8d 04 92             	lea    (%edx,%edx,4),%eax$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	74 1c                	je     f01003b5 <spinlock_test+0x97>$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	c7 44 24 08 ec 70 10 	movl   $0xf01070ec,0x8(%esp)$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	f0 $/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	c7 44 24 04 24 00 00 	movl   $0x24,0x4(%esp)$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	00 $/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	c7 04 24 46 71 10 f0 	movl   $0xf0107146,(%esp)$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	e8 8b fc ff ff       	call   f0100040 <_panic>$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	7f 1b                	jg     f01003e7 <spinlock_test+0xc9>$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	a1 00 e0 33 f0       	mov    0xf033e000,%eax$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	40                   	inc    %eax$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	a3 00 e0 33 f0       	mov    %eax,0xf033e000$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	7e e5                	jle    f01003cc <spinlock_test+0xae>$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	e8 19 69 00 00       	call   f0106d0c <spin_unlock>$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	f3 90                	pause  $/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	4b                   	dec    %ebx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	0f 85 6a ff ff ff    	jne    f0100366 <spinlock_test+0x48>$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	e8 2d 68 00 00       	call   f0106c35 <spin_lock>$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	e8 7f 65 00 00       	call   f010698c <cpunum>$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	c7 04 24 20 71 10 f0 	movl   $0xf0107120,(%esp)$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	e8 f7 41 00 00       	call   f0104614 <cprintf>$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	e8 e3 68 00 00       	call   f0106d0c <spin_unlock>$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	f3 90                	pause  $/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	5b                   	pop    %ebx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	5e                   	pop    %esi$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	5d                   	pop    %ebp$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	c3                   	ret    $/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432 <_warn>:$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	55                   	push   %ebp$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	89 e5                	mov    %esp,%ebp$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	53                   	push   %ebx$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	c7 04 24 83 71 10 f0 	movl   $0xf0107183,(%esp)$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	e8 be 41 00 00       	call   f0104614 <cprintf>$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	e8 7c 41 00 00       	call   f01045e1 <vcprintf>$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	c7 04 24 ce 84 10 f0 	movl   $0xf01084ce,(%esp)$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	e8 a3 41 00 00       	call   f0104614 <cprintf>$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	5b                   	pop    %ebx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	5d                   	pop    %ebp$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	c3                   	ret    $/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478 <delay>:$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	55                   	push   %ebp$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	89 e5                	mov    %esp,%ebp$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	ec                   	in     (%dx),%al$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	ec                   	in     (%dx),%al$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	ec                   	in     (%dx),%al$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	ec                   	in     (%dx),%al$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	5d                   	pop    %ebp$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	c3                   	ret    $/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486 <serial_proc_data>:$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	55                   	push   %ebp$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	89 e5                	mov    %esp,%ebp$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	ec                   	in     (%dx),%al$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	a8 01                	test   $0x1,%al$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	74 0a                	je     f010049d <serial_proc_data+0x17>$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	ec                   	in     (%dx),%al$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	eb 05                	jmp    f01004a2 <serial_proc_data+0x1c>$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	5d                   	pop    %ebp$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	c3                   	ret    $/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4 <cons_intr>:$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	55                   	push   %ebp$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	53                   	push   %ebx$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	89 c3                	mov    %eax,%ebx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	eb 29                	jmp    f01004d8 <cons_intr+0x34>$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	85 c0                	test   %eax,%eax$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	74 25                	je     f01004d8 <cons_intr+0x34>$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	8b 15 44 e2 33 f0    	mov    0xf033e244,%edx$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	88 82 40 e0 33 f0    	mov    %al,-0xfcc1fc0(%edx)$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	a3 44 e2 33 f0       	mov    %eax,0xf033e244$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	75 0a                	jne    f01004d8 <cons_intr+0x34>$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	c7 05 44 e2 33 f0 00 	movl   $0x0,0xf033e244$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	00 00 00 $/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	ff d3                	call   *%ebx$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	75 d0                	jne    f01004af <cons_intr+0xb>$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	83 c4 04             	add    $0x4,%esp$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	5b                   	pop    %ebx$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	5d                   	pop    %ebp$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	c3                   	ret    $/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5 <cons_putc>:$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	55                   	push   %ebp$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	57                   	push   %edi$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	56                   	push   %esi$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	53                   	push   %ebx$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	89 c6                	mov    %eax,%esi$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	ec                   	in     (%dx),%al$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	a8 20                	test   $0x20,%al$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	75 19                	jne    f0100513 <cons_putc+0x2e>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	e8 6f ff ff ff       	call   f0100478 <delay>$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	89 fa                	mov    %edi,%edx$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	ec                   	in     (%dx),%al$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	a8 20                	test   $0x20,%al$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	75 03                	jne    f0100513 <cons_putc+0x2e>$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	4b                   	dec    %ebx$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	75 f1                	jne    f0100504 <cons_putc+0x1f>$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	89 f7                	mov    %esi,%edi$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	89 f0                	mov    %esi,%eax$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	ee                   	out    %al,(%dx)$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	b2 79                	mov    $0x79,%dl$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	ec                   	in     (%dx),%al$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	84 c0                	test   %al,%al$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	78 17                	js     f010053b <cons_putc+0x56>$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	e8 4a ff ff ff       	call   f0100478 <delay>$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	ec                   	in     (%dx),%al$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	84 c0                	test   %al,%al$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	78 03                	js     f010053b <cons_putc+0x56>$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	4b                   	dec    %ebx$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	75 ee                	jne    f0100529 <cons_putc+0x44>$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	89 f8                	mov    %edi,%eax$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	ee                   	out    %al,(%dx)$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	b0 0d                	mov    $0xd,%al$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	ee                   	out    %al,(%dx)$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	b0 08                	mov    $0x8,%al$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	ee                   	out    %al,(%dx)$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	75 06                	jne    f0100559 <cons_putc+0x74>$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	89 f0                	mov    %esi,%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	0f 84 8a 00 00 00    	je     f01005f3 <cons_putc+0x10e>$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	7f 0b                	jg     f0100579 <cons_putc+0x94>$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	0f 85 b0 00 00 00    	jne    f0100627 <cons_putc+0x142>$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	eb 10                	jmp    f0100589 <cons_putc+0xa4>$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	74 3e                	je     f01005bc <cons_putc+0xd7>$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	0f 85 a0 00 00 00    	jne    f0100627 <cons_putc+0x142>$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	eb 3b                	jmp    f01005c4 <cons_putc+0xdf>$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	66 a1 54 e2 33 f0    	mov    0xf033e254,%ax$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	66 85 c0             	test   %ax,%ax$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	0f 84 f9 00 00 00    	je     f0100691 <cons_putc+0x1ac>$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	48                   	dec    %eax$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	66 a3 54 e2 33 f0    	mov    %ax,0xf033e254$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 ce 20             	or     $0x20,%esi$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	8b 15 50 e2 33 f0    	mov    0xf033e250,%edx$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	e9 8a 00 00 00       	jmp    f0100646 <cons_putc+0x161>$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	66 83 05 54 e2 33 f0 	addw   $0x50,0xf033e254$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	50 $/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	66 a1 54 e2 33 f0    	mov    0xf033e254,%ax$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	8d 14 50             	lea    (%eax,%edx,2),%edx$/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	89 d1                	mov    %edx,%ecx$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	01 ca                	add    %ecx,%edx$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	66 a3 54 e2 33 f0    	mov    %ax,0xf033e254$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	eb 53                	jmp    f0100646 <cons_putc+0x161>$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	e8 e8 fe ff ff       	call   f01004e5 <cons_putc>$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	e8 de fe ff ff       	call   f01004e5 <cons_putc>$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	e8 d4 fe ff ff       	call   f01004e5 <cons_putc>$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	e8 ca fe ff ff       	call   f01004e5 <cons_putc>$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	e8 c0 fe ff ff       	call   f01004e5 <cons_putc>$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	eb 1f                	jmp    f0100646 <cons_putc+0x161>$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	66 a1 54 e2 33 f0    	mov    0xf033e254,%ax$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	89 c1                	mov    %eax,%ecx$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	81 e1 ff ff 00 00    	and    $0xffff,%ecx$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	8b 15 50 e2 33 f0    	mov    0xf033e250,%edx$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	40                   	inc    %eax$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	66 a3 54 e2 33 f0    	mov    %ax,0xf033e254$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	66 81 3d 54 e2 33 f0 	cmpw   $0x7cf,0xf033e254$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	cf 07 $/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	76 40                	jbe    f0100691 <cons_putc+0x1ac>$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	a1 50 e2 33 f0       	mov    0xf033e250,%eax$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	00 $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	e8 ca 5c 00 00       	call   f010633a <memmove>$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	8b 15 50 e2 33 f0    	mov    0xf033e250,%edx$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	40                   	inc    %eax$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	75 f2                	jne    f010067b <cons_putc+0x196>$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	66 83 2d 54 e2 33 f0 	subw   $0x50,0xf033e254$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	50 $/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	8b 0d 4c e2 33 f0    	mov    0xf033e24c,%ecx$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	b0 0e                	mov    $0xe,%al$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	89 ca                	mov    %ecx,%edx$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	ee                   	out    %al,(%dx)$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	66 8b 35 54 e2 33 f0 	mov    0xf033e254,%si$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	89 f0                	mov    %esi,%eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	89 da                	mov    %ebx,%edx$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	ee                   	out    %al,(%dx)$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	b0 0f                	mov    $0xf,%al$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	89 ca                	mov    %ecx,%edx$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	ee                   	out    %al,(%dx)$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	89 f0                	mov    %esi,%eax$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	89 da                	mov    %ebx,%edx$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	ee                   	out    %al,(%dx)$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	5b                   	pop    %ebx$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	5e                   	pop    %esi$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	5f                   	pop    %edi$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	5d                   	pop    %ebp$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	c3                   	ret    $/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1 <kbd_proc_data>:$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	55                   	push   %ebp$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	53                   	push   %ebx$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	ec                   	in     (%dx),%al$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	a8 01                	test   $0x1,%al$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	0f 84 e3 00 00 00    	je     f01007b9 <kbd_proc_data+0xf8>$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	b2 60                	mov    $0x60,%dl$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	ec                   	in     (%dx),%al$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	88 c2                	mov    %al,%dl$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	3c e0                	cmp    $0xe0,%al$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	75 11                	jne    f01006f0 <kbd_proc_data+0x2f>$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	83 0d 48 e2 33 f0 40 	orl    $0x40,0xf033e248$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	e9 ce 00 00 00       	jmp    f01007be <kbd_proc_data+0xfd>$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	84 c0                	test   %al,%al$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	79 38                	jns    f010072c <kbd_proc_data+0x6b>$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	8b 0d 48 e2 33 f0    	mov    0xf033e248,%ecx$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	75 05                	jne    f0100704 <kbd_proc_data+0x43>$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	88 c2                	mov    %al,%dl$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	8a 82 e0 71 10 f0    	mov    -0xfef8e20(%edx),%al$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	f7 d0                	not    %eax$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	21 c1                	and    %eax,%ecx$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	89 0d 48 e2 33 f0    	mov    %ecx,0xf033e248$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	e9 92 00 00 00       	jmp    f01007be <kbd_proc_data+0xfd>$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	8b 0d 48 e2 33 f0    	mov    0xf033e248,%ecx$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	74 0e                	je     f0100745 <kbd_proc_data+0x84>$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	88 c2                	mov    %al,%dl$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	89 0d 48 e2 33 f0    	mov    %ecx,0xf033e248$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	31 c0                	xor    %eax,%eax$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	8a 82 e0 71 10 f0    	mov    -0xfef8e20(%edx),%al$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	0b 05 48 e2 33 f0    	or     0xf033e248,%eax$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	31 c9                	xor    %ecx,%ecx$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	8a 8a e0 72 10 f0    	mov    -0xfef8d20(%edx),%cl$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	31 c8                	xor    %ecx,%eax$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	a3 48 e2 33 f0       	mov    %eax,0xf033e248$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	89 c1                	mov    %eax,%ecx$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	8b 0c 8d e0 73 10 f0 	mov    -0xfef8c20(,%ecx,4),%ecx$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	31 db                	xor    %ebx,%ebx$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	8a 1c 11             	mov    (%ecx,%edx,1),%bl$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	a8 08                	test   $0x8,%al$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	74 18                	je     f0100795 <kbd_proc_data+0xd4>$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	77 05                	ja     f010078a <kbd_proc_data+0xc9>$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	eb 0b                	jmp    f0100795 <kbd_proc_data+0xd4>$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	77 03                	ja     f0100795 <kbd_proc_data+0xd4>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	f7 d0                	not    %eax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	a8 06                	test   $0x6,%al$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	75 23                	jne    f01007be <kbd_proc_data+0xfd>$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	75 1b                	jne    f01007be <kbd_proc_data+0xfd>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	c7 04 24 9d 71 10 f0 	movl   $0xf010719d,(%esp)$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	e8 65 3e 00 00       	call   f0104614 <cprintf>$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	b0 03                	mov    $0x3,%al$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	ee                   	out    %al,(%dx)$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	eb 05                	jmp    f01007be <kbd_proc_data+0xfd>$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	89 d8                	mov    %ebx,%eax$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	83 c4 14             	add    $0x14,%esp$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	5b                   	pop    %ebx$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	5d                   	pop    %ebp$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	c3                   	ret    $/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6 <serial_intr>:$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	55                   	push   %ebp$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	83 3d 20 e0 33 f0 00 	cmpl   $0x0,0xf033e020$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	74 0a                	je     f01007df <serial_intr+0x19>$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	b8 86 04 10 f0       	mov    $0xf0100486,%eax$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	e8 c5 fc ff ff       	call   f01004a4 <cons_intr>$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	c9                   	leave  $/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	c3                   	ret    $/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1 <kbd_intr>:$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	55                   	push   %ebp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	b8 c1 06 10 f0       	mov    $0xf01006c1,%eax$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	e8 b3 fc ff ff       	call   f01004a4 <cons_intr>$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	c9                   	leave  $/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	c3                   	ret    $/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3 <cons_getc>:$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	55                   	push   %ebp$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	e8 c8 ff ff ff       	call   f01007c6 <serial_intr>$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	e8 de ff ff ff       	call   f01007e1 <kbd_intr>$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	8b 15 40 e2 33 f0    	mov    0xf033e240,%edx$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	3b 15 44 e2 33 f0    	cmp    0xf033e244,%edx$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	74 23                	je     f0100834 <cons_getc+0x41>$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	31 c0                	xor    %eax,%eax$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	8a 82 40 e0 33 f0    	mov    -0xfcc1fc0(%edx),%al$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	42                   	inc    %edx$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	89 15 40 e2 33 f0    	mov    %edx,0xf033e240$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	75 11                	jne    f0100839 <cons_getc+0x46>$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	c7 05 40 e2 33 f0 00 	movl   $0x0,0xf033e240$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	00 00 00 $/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	eb 05                	jmp    f0100839 <cons_getc+0x46>$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	c9                   	leave  $/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	c3                   	ret    $/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b <cons_init>:$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	55                   	push   %ebp$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	89 e5                	mov    %esp,%ebp$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	57                   	push   %edi$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	56                   	push   %esi$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	53                   	push   %ebx$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	5a a5 $/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	74 11                	je     f0100871 <cons_init+0x36>$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	c7 05 4c e2 33 f0 b4 	movl   $0x3b4,0xf033e24c$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	03 00 00 $/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	eb 16                	jmp    f0100887 <cons_init+0x4c>$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	c7 05 4c e2 33 f0 d4 	movl   $0x3d4,0xf033e24c$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	03 00 00 $/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	8b 0d 4c e2 33 f0    	mov    0xf033e24c,%ecx$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	b0 0e                	mov    $0xe,%al$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	ee                   	out    %al,(%dx)$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	89 da                	mov    %ebx,%edx$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	ec                   	in     (%dx),%al$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	89 c7                	mov    %eax,%edi$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	b0 0f                	mov    $0xf,%al$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	89 ca                	mov    %ecx,%edx$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	ee                   	out    %al,(%dx)$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	89 da                	mov    %ebx,%edx$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	ec                   	in     (%dx),%al$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	89 35 50 e2 33 f0    	mov    %esi,0xf033e250$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	31 db                	xor    %ebx,%ebx$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	88 c3                	mov    %al,%bl$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	09 df                	or     %ebx,%edi$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	66 89 3d 54 e2 33 f0 	mov    %di,0xf033e254$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	e8 1f ff ff ff       	call   f01007e1 <kbd_intr>$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	66 a1 88 a3 12 f0    	mov    0xf012a388,%ax$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	e8 0f 3c 00 00       	call   f01044e4 <irq_setmask_8259A>$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	b0 00                	mov    $0x0,%al$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	89 da                	mov    %ebx,%edx$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	ee                   	out    %al,(%dx)$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	b0 80                	mov    $0x80,%al$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	ee                   	out    %al,(%dx)$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	b0 0c                	mov    $0xc,%al$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	89 ca                	mov    %ecx,%edx$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	ee                   	out    %al,(%dx)$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	b0 00                	mov    $0x0,%al$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	ee                   	out    %al,(%dx)$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	b0 03                	mov    $0x3,%al$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	ee                   	out    %al,(%dx)$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	b0 00                	mov    $0x0,%al$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	ee                   	out    %al,(%dx)$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	b0 01                	mov    $0x1,%al$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	ee                   	out    %al,(%dx)$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	ec                   	in     (%dx),%al$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	3c ff                	cmp    $0xff,%al$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	0f 95 c0             	setne  %al$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	89 c6                	mov    %eax,%esi$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	a3 20 e0 33 f0       	mov    %eax,0xf033e020$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	89 da                	mov    %ebx,%edx$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	ec                   	in     (%dx),%al$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	89 ca                	mov    %ecx,%edx$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	ec                   	in     (%dx),%al$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	85 f6                	test   %esi,%esi$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	75 0c                	jne    f010092c <cons_init+0xf1>$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	c7 04 24 a9 71 10 f0 	movl   $0xf01071a9,(%esp)$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	e8 e8 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	5b                   	pop    %ebx$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	5e                   	pop    %esi$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	5f                   	pop    %edi$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	5d                   	pop    %ebp$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	c3                   	ret    $/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934 <cputchar>:$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	55                   	push   %ebp$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	89 e5                	mov    %esp,%ebp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	e8 a3 fb ff ff       	call   f01004e5 <cons_putc>$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	c9                   	leave  $/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	c3                   	ret    $/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944 <getchar>:$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	55                   	push   %ebp$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	89 e5                	mov    %esp,%ebp$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	e8 a4 fe ff ff       	call   f01007f3 <cons_getc>$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	85 c0                	test   %eax,%eax$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	74 f7                	je     f010094a <getchar+0x6>$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	c9                   	leave  $/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	c3                   	ret    $/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955 <iscons>:$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	55                   	push   %ebp$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	89 e5                	mov    %esp,%ebp$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	5d                   	pop    %ebp$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	c3                   	ret    $/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960 <do_overflow>:$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	55                   	push   %ebp$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	89 e5                	mov    %esp,%ebp$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	c7 04 24 f0 73 10 f0 	movl   $0xf01073f0,(%esp)$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	e8 a2 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	c9                   	leave  $/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	c3                   	ret    $/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974 <mon_kerninfo>:$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	55                   	push   %ebp$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	89 e5                	mov    %esp,%ebp$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	c7 04 24 02 74 10 f0 	movl   $0xf0107402,(%esp)$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	e8 8e 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	00 $/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	f0 $/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	c7 04 24 f8 75 10 f0 	movl   $0xf01075f8,(%esp)$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	e8 72 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	c7 44 24 08 6e 70 10 	movl   $0x10706e,0x8(%esp)$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	00 $/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	c7 44 24 04 6e 70 10 	movl   $0xf010706e,0x4(%esp)$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	f0 $/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	c7 04 24 1c 76 10 f0 	movl   $0xf010761c,(%esp)$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	e8 56 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	c7 44 24 08 9d de 33 	movl   $0x33de9d,0x8(%esp)$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	00 $/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	c7 44 24 04 9d de 33 	movl   $0xf033de9d,0x4(%esp)$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	f0 $/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	c7 04 24 40 76 10 f0 	movl   $0xf0107640,(%esp)$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	e8 3a 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	c7 44 24 08 04 00 38 	movl   $0x380004,0x8(%esp)$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	00 $/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	c7 44 24 04 04 00 38 	movl   $0xf0380004,0x4(%esp)$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	f0 $/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	c7 04 24 64 76 10 f0 	movl   $0xf0107664,(%esp)$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	e8 1e 3c 00 00       	call   f0104614 <cprintf>$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	b8 03 04 38 f0       	mov    $0xf0380403,%eax$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	89 c2                	mov    %eax,%edx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	85 c0                	test   %eax,%eax$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	79 06                	jns    f0100a0c <mon_kerninfo+0x98>$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	c7 04 24 88 76 10 f0 	movl   $0xf0107688,(%esp)$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	e8 f5 3b 00 00       	call   f0104614 <cprintf>$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	c9                   	leave  $/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	c3                   	ret    $/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26 <mon_help>:$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	55                   	push   %ebp$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	56                   	push   %esi$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	53                   	push   %ebx$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	bb 84 7a 10 f0       	mov    $0xf0107a84,%ebx$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	be fc 7a 10 f0       	mov    $0xf0107afc,%esi$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	c7 04 24 1b 74 10 f0 	movl   $0xf010741b,(%esp)$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	e8 c3 3b 00 00       	call   f0104614 <cprintf>$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	75 e0                	jne    f0100a38 <mon_help+0x12>$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	5b                   	pop    %ebx$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	5e                   	pop    %esi$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	5d                   	pop    %ebp$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	c3                   	ret    $/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64 <mon_time>:$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	55                   	push   %ebp$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	57                   	push   %edi$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	56                   	push   %esi$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	53                   	push   %ebx$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	75 11                	jne    f0100a87 <mon_time+0x23>$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	c7 04 24 24 74 10 f0 	movl   $0xf0107424,(%esp)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	e8 92 3b 00 00       	call   f0104614 <cprintf>$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	e9 87 00 00 00       	jmp    f0100b0e <mon_time+0xaa>$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	bb 80 7a 10 f0       	mov    $0xf0107a80,%ebx$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	e8 85 57 00 00       	call   f0106227 <strcmp>$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	85 c0                	test   %eax,%eax$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	75 4c                	jne    f0100af2 <mon_time+0x8e>$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	0f 31                	rdtsc  $/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	8d 57 04             	lea    0x4(%edi),%edx$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	4a                   	dec    %edx$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	ff 14 85 88 7a 10 f0 	call   *-0xfef8578(,%eax,4)$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	0f 31                	rdtsc  $/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	1b 55 e4             	sbb    -0x1c(%ebp),%edx$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	c7 04 24 3b 74 10 f0 	movl   $0xf010743b,(%esp)$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	e8 24 3b 00 00       	call   f0104614 <cprintf>$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	eb 1c                	jmp    f0100b0e <mon_time+0xaa>$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	46                   	inc    %esi$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	75 96                	jne    f0100a91 <mon_time+0x2d>$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	c7 04 24 4c 74 10 f0 	movl   $0xf010744c,(%esp)$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	e8 06 3b 00 00       	call   f0104614 <cprintf>$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	5b                   	pop    %ebx$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	5e                   	pop    %esi$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	5f                   	pop    %edi$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	5d                   	pop    %ebp$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	c3                   	ret    $/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b <mon_x>:$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	55                   	push   %ebp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	74 0e                	je     f0100b35 <mon_x+0x1a>$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	c7 04 24 5d 74 10 f0 	movl   $0xf010745d,(%esp)$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	e8 e1 3a 00 00       	call   f0104614 <cprintf>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	eb 34                	jmp    f0100b69 <mon_x+0x4e>$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	00 $/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	00 $/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	e8 e8 58 00 00       	call   f010643b <strtol>$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	8b 10                	mov    (%eax),%edx$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	c7 04 24 71 74 10 f0 	movl   $0xf0107471,(%esp)$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	e8 ab 3a 00 00       	call   f0104614 <cprintf>$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	c9                   	leave  $/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	c3                   	ret    $/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70 <mon_si>:$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	55                   	push   %ebp$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	53                   	push   %ebx$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	74 0c                	je     f0100b8c <mon_si+0x1c>$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	c7 04 24 7b 74 10 f0 	movl   $0xf010747b,(%esp)$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	e8 88 3a 00 00       	call   f0104614 <cprintf>$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	81 4b 38 00 01 00 00 	orl    $0x100,0x38(%ebx)$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	c7 04 24 86 74 10 f0 	movl   $0xf0107486,(%esp)$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	e8 6e 3a 00 00       	call   f0104614 <cprintf>$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	e8 e1 5d 00 00       	call   f010698c <cpunum>$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	29 c2                	sub    %eax,%edx$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	e8 ff 37 00 00       	call   f01043c5 <env_run>$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6 <mon_c>:$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	55                   	push   %ebp$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	53                   	push   %ebx$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	74 0c                	je     f0100be2 <mon_c+0x1c>$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	c7 04 24 93 74 10 f0 	movl   $0xf0107493,(%esp)$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	e8 32 3a 00 00       	call   f0104614 <cprintf>$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	81 63 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%ebx)$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	e8 9e 5d 00 00       	call   f010698c <cpunum>$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	29 c2                	sub    %eax,%edx$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	e8 bc 37 00 00       	call   f01043c5 <env_run>$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09 <strtoint>:$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	55                   	push   %ebp$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	56                   	push   %esi$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	53                   	push   %ebx$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	85 c9                	test   %ecx,%ecx$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	74 5f                	je     f0100c74 <strtoint+0x6b>$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	74 61                	je     f0100c7b <strtoint+0x72>$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	80 79 01 00          	cmpb   $0x0,0x1(%ecx)$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	74 62                	je     f0100c82 <strtoint+0x79>$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	8a 51 02             	mov    0x2(%ecx),%dl$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	84 d2                	test   %dl,%dl$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	74 62                	je     f0100c89 <strtoint+0x80>$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	89 d6                	mov    %edx,%esi$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	8d 5a 9f             	lea    -0x61(%edx),%ebx$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	80 fb 05             	cmp    $0x5,%bl$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	77 08                	ja     f0100c41 <strtoint+0x38>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	0f be d2             	movsbl %dl,%edx$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	eb 25                	jmp    f0100c66 <strtoint+0x5d>$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	8d 5a bf             	lea    -0x41(%edx),%ebx$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	80 fb 05             	cmp    $0x5,%bl$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	77 08                	ja     f0100c51 <strtoint+0x48>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	0f be d2             	movsbl %dl,%edx$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	eb 15                	jmp    f0100c66 <strtoint+0x5d>$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	8d 5e d0             	lea    -0x30(%esi),%ebx$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	77 08                	ja     f0100c61 <strtoint+0x58>$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	0f be d2             	movsbl %dl,%edx$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	eb 05                	jmp    f0100c66 <strtoint+0x5d>$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	01 d0                	add    %edx,%eax$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	41                   	inc    %ecx$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	8a 11                	mov    (%ecx),%dl$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	84 d2                	test   %dl,%dl$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	75 bd                	jne    f0100c2f <strtoint+0x26>$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	eb 1a                	jmp    f0100c8e <strtoint+0x85>$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	eb 13                	jmp    f0100c8e <strtoint+0x85>$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	eb 0c                	jmp    f0100c8e <strtoint+0x85>$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	eb 05                	jmp    f0100c8e <strtoint+0x85>$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	5b                   	pop    %ebx$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	5e                   	pop    %esi$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	5d                   	pop    %ebp$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	c3                   	ret    $/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92 <mon_dumpmem>:$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	55                   	push   %ebp$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	56                   	push   %esi$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	53                   	push   %ebx$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	74 1d                	je     f0100cc0 <mon_dumpmem+0x2e>$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c7 04 24 b4 76 10 f0 	movl   $0xf01076b4,(%esp)$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	e8 65 39 00 00       	call   f0104614 <cprintf>$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	c7 04 24 e8 76 10 f0 	movl   $0xf01076e8,(%esp)$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	e8 59 39 00 00       	call   f0104614 <cprintf>$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	e9 eb 00 00 00       	jmp    f0100dab <mon_dumpmem+0x119>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	8a 00                	mov    (%eax),%al$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	3c 50                	cmp    $0x50,%al$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	74 04                	je     f0100cd0 <mon_dumpmem+0x3e>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	3c 56                	cmp    $0x56,%al$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	75 20                	jne    f0100cf0 <mon_dumpmem+0x5e>$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	e8 2e ff ff ff       	call   f0100c09 <strtoint>$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	89 c3                	mov    %eax,%ebx$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	8b 46 0c             	mov    0xc(%esi),%eax$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	e8 21 ff ff ff       	call   f0100c09 <strtoint>$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	89 c6                	mov    %eax,%esi$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	72 1f                	jb     f0100d0d <mon_dumpmem+0x7b>$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	eb 23                	jmp    f0100d13 <mon_dumpmem+0x81>$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	c7 04 24 b4 76 10 f0 	movl   $0xf01076b4,(%esp)$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	e8 18 39 00 00       	call   f0104614 <cprintf>$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	c7 04 24 e8 76 10 f0 	movl   $0xf01076e8,(%esp)$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	e8 0c 39 00 00       	call   f0104614 <cprintf>$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	e9 9e 00 00 00       	jmp    f0100dab <mon_dumpmem+0x119>$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	09 d8                	or     %ebx,%eax$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	a8 03                	test   $0x3,%al$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	74 11                	je     f0100d24 <mon_dumpmem+0x92>$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	c7 04 24 9d 74 10 f0 	movl   $0xf010749d,(%esp)$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	e8 f5 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	e9 87 00 00 00       	jmp    f0100dab <mon_dumpmem+0x119>$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	80 7d f7 50          	cmpb   $0x50,-0x9(%ebp)$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	75 35                	jne    f0100d5f <mon_dumpmem+0xcd>$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	a1 a8 ee 33 f0       	mov    0xf033eea8,%eax$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	89 da                	mov    %ebx,%edx$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	39 c2                	cmp    %eax,%edx$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	73 09                	jae    f0100d41 <mon_dumpmem+0xaf>$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	89 f2                	mov    %esi,%edx$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	39 d0                	cmp    %edx,%eax$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	77 0e                	ja     f0100d4f <mon_dumpmem+0xbd>$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	c7 04 24 9d 74 10 f0 	movl   $0xf010749d,(%esp)$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	e8 c7 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	eb 5c                	jmp    f0100dab <mon_dumpmem+0x119>$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	77 4c                	ja     f0100dab <mon_dumpmem+0x119>$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	00 $/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	e8 e6 0c 00 00       	call   f0101a5e <pgdir_walk>$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	85 c0                	test   %eax,%eax$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	75 12                	jne    f0100d8e <mon_dumpmem+0xfc>$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	c7 04 24 b0 74 10 f0 	movl   $0xf01074b0,(%esp)$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	e8 88 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	eb 16                	jmp    f0100da4 <mon_dumpmem+0x112>$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	c7 04 24 be 74 10 f0 	movl   $0xf01074be,(%esp)$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	e8 70 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	39 de                	cmp    %ebx,%esi$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	73 b4                	jae    f0100d5f <mon_dumpmem+0xcd>$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	5b                   	pop    %ebx$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	5e                   	pop    %esi$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	5d                   	pop    %ebp$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	c3                   	ret    $/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7 <mon_changeperm>:$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	55                   	push   %ebp$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	57                   	push   %edi$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	56                   	push   %esi$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	53                   	push   %ebx$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	83 ff 03             	cmp    $0x3,%edi$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	7f 35                	jg     f0100e00 <mon_changeperm+0x49>$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	e8 3d 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	c7 04 24 80 77 10 f0 	movl   $0xf0107780,(%esp)$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	e8 31 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	c7 04 24 d0 77 10 f0 	movl   $0xf01077d0,(%esp)$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	e8 25 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	c7 04 24 20 78 10 f0 	movl   $0xf0107820,(%esp)$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	e8 19 38 00 00       	call   f0104614 <cprintf>$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	e9 1b 02 00 00       	jmp    f010101b <mon_changeperm+0x264>$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	e8 fe fd ff ff       	call   f0100c09 <strtoint>$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	89 c6                	mov    %eax,%esi$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	8a 10                	mov    (%eax),%dl$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	80 f9 02             	cmp    $0x2,%cl$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	77 16                	ja     f0100e30 <mon_changeperm+0x79>$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	75 10                	jne    f0100e30 <mon_changeperm+0x79>$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	0f be d2             	movsbl %dl,%edx$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	77 3c                	ja     f0100e6a <mon_changeperm+0xb3>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	eb 35                	jmp    f0100e65 <mon_changeperm+0xae>$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	e8 d8 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	c7 04 24 80 77 10 f0 	movl   $0xf0107780,(%esp)$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	e8 cc 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	c7 04 24 d0 77 10 f0 	movl   $0xf01077d0,(%esp)$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	e8 c0 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	c7 04 24 20 78 10 f0 	movl   $0xf0107820,(%esp)$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	e8 b4 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	e9 b6 01 00 00       	jmp    f010101b <mon_changeperm+0x264>$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	83 ff 05             	cmp    $0x5,%edi$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	75 0b                	jne    f0100e75 <mon_changeperm+0xbe>$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	83 7d e4 02          	cmpl   $0x2,-0x1c(%ebp)$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	75 3a                	jne    f0100eaa <mon_changeperm+0xf3>$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	83 ff 04             	cmp    $0x4,%edi$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	74 35                	je     f0100eaa <mon_changeperm+0xf3>$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	e8 93 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	c7 04 24 80 77 10 f0 	movl   $0xf0107780,(%esp)$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	e8 87 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	c7 04 24 d0 77 10 f0 	movl   $0xf01077d0,(%esp)$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	e8 7b 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	c7 04 24 20 78 10 f0 	movl   $0xf0107820,(%esp)$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	e8 6f 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	e9 71 01 00 00       	jmp    f010101b <mon_changeperm+0x264>$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	8d 57 d0             	lea    -0x30(%edi),%edx$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	80 fa 02             	cmp    $0x2,%dl$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	77 18                	ja     f0100ed0 <mon_changeperm+0x119>$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	75 12                	jne    f0100ed0 <mon_changeperm+0x119>$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	83 7d e4 02          	cmpl   $0x2,-0x1c(%ebp)$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	75 41                	jne    f0100f05 <mon_changeperm+0x14e>$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	e9 88 00 00 00       	jmp    f0100f58 <mon_changeperm+0x1a1>$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	e8 38 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	c7 04 24 80 77 10 f0 	movl   $0xf0107780,(%esp)$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	e8 2c 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	c7 04 24 d0 77 10 f0 	movl   $0xf01077d0,(%esp)$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	e8 20 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	c7 04 24 20 78 10 f0 	movl   $0xf0107820,(%esp)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	e8 14 37 00 00       	call   f0104614 <cprintf>$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	e9 16 01 00 00       	jmp    f010101b <mon_changeperm+0x264>$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	8a 10                	mov    (%eax),%dl$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	80 f9 02             	cmp    $0x2,%cl$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	77 11                	ja     f0100f23 <mon_changeperm+0x16c>$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	75 0b                	jne    f0100f23 <mon_changeperm+0x16c>$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	0f be d2             	movsbl %dl,%edx$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	eb 35                	jmp    f0100f58 <mon_changeperm+0x1a1>$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	c7 04 24 40 77 10 f0 	movl   $0xf0107740,(%esp)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	e8 e5 36 00 00       	call   f0104614 <cprintf>$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	c7 04 24 80 77 10 f0 	movl   $0xf0107780,(%esp)$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	e8 d9 36 00 00       	call   f0104614 <cprintf>$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	c7 04 24 d0 77 10 f0 	movl   $0xf01077d0,(%esp)$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	e8 cd 36 00 00       	call   f0104614 <cprintf>$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	c7 04 24 20 78 10 f0 	movl   $0xf0107820,(%esp)$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	e8 c1 36 00 00       	call   f0104614 <cprintf>$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	e9 c3 00 00 00       	jmp    f010101b <mon_changeperm+0x264>$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	00 $/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	e8 ed 0a 00 00       	call   f0101a5e <pgdir_walk>$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	89 c2                	mov    %eax,%edx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	89 c2                	mov    %eax,%edx$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	83 e2 02             	and    $0x2,%edx$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	d1 ea                	shr    %edx$/;"	d
f0100f88	obj/kern/kernel.asm	/^f0100f88:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	c7 04 24 54 78 10 f0 	movl   $0xf0107854,(%esp)$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	e8 71 36 00 00       	call   f0104614 <cprintf>$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	85 db                	test   %ebx,%ebx$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	74 74                	je     f010101b <mon_changeperm+0x264>$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	89 f8                	mov    %edi,%eax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	0f be f8             	movsbl %al,%edi$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	83 ef 30             	sub    $0x30,%edi$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	74 11                	je     f0100fc5 <mon_changeperm+0x20e>$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	83 ff 02             	cmp    $0x2,%edi$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	74 13                	je     f0100fcc <mon_changeperm+0x215>$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	85 ff                	test   %edi,%edi$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	0f 94 c0             	sete   %al$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	eb 0c                	jmp    f0100fd1 <mon_changeperm+0x21a>$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	eb 05                	jmp    f0100fd1 <mon_changeperm+0x21a>$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	75 04                	jne    f0100fdb <mon_changeperm+0x224>$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	09 03                	or     %eax,(%ebx)$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	eb 06                	jmp    f0100fe1 <mon_changeperm+0x22a>$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	89 c2                	mov    %eax,%edx$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	f7 d2                	not    %edx$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	21 13                	and    %edx,(%ebx)$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	83 7d e4 02          	cmpl   $0x2,-0x1c(%ebp)$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	75 04                	jne    f0100feb <mon_changeperm+0x234>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	f7 d0                	not    %eax$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	21 03                	and    %eax,(%ebx)$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	89 c2                	mov    %eax,%edx$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	89 c2                	mov    %eax,%edx$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 e2 02             	and    $0x2,%edx$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	d1 ea                	shr    %edx$/;"	d
f0101000	obj/kern/kernel.asm	/^f0101000:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	c7 04 24 8c 78 10 f0 	movl   $0xf010788c,(%esp)$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	e8 f9 35 00 00       	call   f0104614 <cprintf>$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	5b                   	pop    %ebx$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	5e                   	pop    %esi$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	5f                   	pop    %edi$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	5d                   	pop    %ebp$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	c3                   	ret    $/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028 <mon_showmappings>:$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	55                   	push   %ebp$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	89 e5                	mov    %esp,%ebp$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	56                   	push   %esi$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	53                   	push   %ebx$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	74 11                	je     f010104a <mon_showmappings+0x22>$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	c7 04 24 c0 78 10 f0 	movl   $0xf01078c0,(%esp)$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	e8 cf 35 00 00       	call   f0104614 <cprintf>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	e9 92 00 00 00       	jmp    f01010dc <mon_showmappings+0xb4>$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	e8 b4 fb ff ff       	call   f0100c09 <strtoint>$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	89 c3                	mov    %eax,%ebx$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	e8 a7 fb ff ff       	call   f0100c09 <strtoint>$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	89 c6                	mov    %eax,%esi$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	77 74                	ja     f01010dc <mon_showmappings+0xb4>$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	00 $/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	e8 dd 09 00 00       	call   f0101a5e <pgdir_walk>$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	85 c0                	test   %eax,%eax$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	75 0e                	jne    f0101093 <mon_showmappings+0x6b>$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	c7 04 24 f0 78 10 f0 	movl   $0xf01078f0,(%esp)$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	e8 83 35 00 00       	call   f0104614 <cprintf>$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	eb 3f                	jmp    f01010d2 <mon_showmappings+0xaa>$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	8b 00                	mov    (%eax),%eax$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	a8 01                	test   $0x1,%al$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	74 39                	je     f01010d2 <mon_showmappings+0xaa>$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	89 c2                	mov    %eax,%edx$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	83 e2 04             	and    $0x4,%edx$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	89 c2                	mov    %eax,%edx$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	83 e2 02             	and    $0x2,%edx$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	d1 ea                	shr    %edx$/;"	d
f01010ac	obj/kern/kernel.asm	/^f01010ac:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	89 c2                	mov    %eax,%edx$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	83 e2 01             	and    $0x1,%edx$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	c7 04 24 14 79 10 f0 	movl   $0xf0107914,(%esp)$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	e8 42 35 00 00       	call   f0104614 <cprintf>$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	39 de                	cmp    %ebx,%esi$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	73 8c                	jae    f0101068 <mon_showmappings+0x40>$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	83 c4 20             	add    $0x20,%esp$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	5b                   	pop    %ebx$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	5e                   	pop    %esi$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	5d                   	pop    %ebp$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	c3                   	ret    $/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8 <start_overflow>:$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	55                   	push   %ebp$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	57                   	push   %edi$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	56                   	push   %esi$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	53                   	push   %ebx$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	81 ec 3c 01 00 00    	sub    $0x13c,%esp$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	8d bd e8 fe ff ff    	lea    -0x118(%ebp),%edi$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	8d 45 04             	lea    0x4(%ebp),%eax$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	89 c7                	mov    %eax,%edi$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	c7 85 e4 fe ff ff 63 	movl   $0xf0100963,-0x11c(%ebp)$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	09 10 f0 $/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	89 95 d4 fe ff ff    	mov    %edx,-0x12c(%ebp)$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	8d 95 e4 fe ff ff    	lea    -0x11c(%ebp),%edx$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	29 c2                	sub    %eax,%edx$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	89 95 d0 fe ff ff    	mov    %edx,-0x130(%ebp)$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	8d b5 e8 fe ff ff    	lea    -0x118(%ebp),%esi$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	31 db                	xor    %ebx,%ebx$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	8a 1c 07             	mov    (%edi,%eax,1),%bl$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	00 $/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	e8 9f 51 00 00       	call   f01062f0 <memset>$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	c6 84 1d e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%ebx,1)$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	00 $/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c7 04 24 cc 74 10 f0 	movl   $0xf01074cc,(%esp)$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	e8 a7 34 00 00       	call   f0104614 <cprintf>$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	47                   	inc    %edi$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	3b bd d4 fe ff ff    	cmp    -0x12c(%ebp),%edi$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	75 bc                	jne    f0101132 <start_overflow+0x4a>$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	81 c4 3c 01 00 00    	add    $0x13c,%esp$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	5b                   	pop    %ebx$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	5e                   	pop    %esi$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	5f                   	pop    %edi$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	5d                   	pop    %ebp$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	c3                   	ret    $/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181 <overflow_me>:$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	55                   	push   %ebp$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	89 e5                	mov    %esp,%ebp$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	e8 5c ff ff ff       	call   f01010e8 <start_overflow>$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	c9                   	leave  $/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	c3                   	ret    $/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e <mon_backtrace>:$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	55                   	push   %ebp$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	57                   	push   %edi$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	56                   	push   %esi$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	53                   	push   %ebx$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	89 eb                	mov    %ebp,%ebx$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	89 de                	mov    %ebx,%esi$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	c7 04 24 d1 74 10 f0 	movl   $0xf01074d1,(%esp)$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	e8 6d 34 00 00       	call   f0104614 <cprintf>$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	85 db                	test   %ebx,%ebx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	0f 84 8d 00 00 00    	je     f010123c <mon_backtrace+0xae>$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	8b 7e 04             	mov    0x4(%esi),%edi$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	c7 04 24 e3 74 10 f0 	movl   $0xf01074e3,(%esp)$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	e8 4b 34 00 00       	call   f0104614 <cprintf>$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	89 f3                	mov    %esi,%ebx$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	83 c6 14             	add    $0x14,%esi$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	c7 04 24 fe 74 10 f0 	movl   $0xf01074fe,(%esp)$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	e8 33 34 00 00       	call   f0104614 <cprintf>$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	39 f3                	cmp    %esi,%ebx$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	75 e6                	jne    f01011ce <mon_backtrace+0x40>$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	c7 04 24 ce 84 10 f0 	movl   $0xf01084ce,(%esp)$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	e8 20 34 00 00       	call   f0104614 <cprintf>$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	e8 5d 42 00 00       	call   f0105460 <debuginfo_eip>$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	85 c0                	test   %eax,%eax$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	75 28                	jne    f010122f <mon_backtrace+0xa1>$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	2b 7d e0             	sub    -0x20(%ebp),%edi$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	c7 04 24 04 75 10 f0 	movl   $0xf0107504,(%esp)$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	e8 e5 33 00 00       	call   f0104614 <cprintf>$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	8b 30                	mov    (%eax),%esi$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	85 f6                	test   %esi,%esi$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	0f 85 73 ff ff ff    	jne    f01011af <mon_backtrace+0x21>$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	e8 40 ff ff ff       	call   f0101181 <overflow_me>$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	c7 04 24 14 75 10 f0 	movl   $0xf0107514,(%esp)$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	e8 c7 33 00 00       	call   f0104614 <cprintf>$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	5b                   	pop    %ebx$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	5e                   	pop    %esi$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	5f                   	pop    %edi$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	5d                   	pop    %ebp$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	c3                   	ret    $/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a <monitor>:$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	55                   	push   %ebp$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	89 e5                	mov    %esp,%ebp$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	57                   	push   %edi$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	56                   	push   %esi$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	53                   	push   %ebx$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	c7 04 24 5c 79 10 f0 	movl   $0xf010795c,(%esp)$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	e8 a5 33 00 00       	call   f0104614 <cprintf>$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	c7 04 24 80 79 10 f0 	movl   $0xf0107980,(%esp)$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	e8 99 33 00 00       	call   f0104614 <cprintf>$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	74 0b                	je     f010128c <monitor+0x32>$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	e8 49 38 00 00       	call   f0104ad5 <print_trapframe>$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	c7 04 24 27 75 10 f0 	movl   $0xf0107527,(%esp)$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	e8 b0 4d 00 00       	call   f0106048 <readline>$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	89 c3                	mov    %eax,%ebx$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	85 c0                	test   %eax,%eax$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	74 ee                	je     f010128c <monitor+0x32>$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	eb 04                	jmp    f01012b0 <monitor+0x56>$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	43                   	inc    %ebx$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	8a 03                	mov    (%ebx),%al$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	84 c0                	test   %al,%al$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	74 64                	je     f010131a <monitor+0xc0>$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	0f be c0             	movsbl %al,%eax$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	c7 04 24 2b 75 10 f0 	movl   $0xf010752b,(%esp)$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	e8 d6 4f 00 00       	call   f010629f <strchr>$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	85 c0                	test   %eax,%eax$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	75 df                	jne    f01012ac <monitor+0x52>$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	74 48                	je     f010131a <monitor+0xc0>$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	75 16                	jne    f01012ed <monitor+0x93>$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	00 $/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	c7 04 24 30 75 10 f0 	movl   $0xf0107530,(%esp)$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	e8 29 33 00 00       	call   f0104614 <cprintf>$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	eb 9f                	jmp    f010128c <monitor+0x32>$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	46                   	inc    %esi$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	8a 03                	mov    (%ebx),%al$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	84 c0                	test   %al,%al$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	75 09                	jne    f0101301 <monitor+0xa7>$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	eb b6                	jmp    f01012b0 <monitor+0x56>$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	43                   	inc    %ebx$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	8a 03                	mov    (%ebx),%al$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	84 c0                	test   %al,%al$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	74 af                	je     f01012b0 <monitor+0x56>$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	0f be c0             	movsbl %al,%eax$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	c7 04 24 2b 75 10 f0 	movl   $0xf010752b,(%esp)$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	e8 8b 4f 00 00       	call   f010629f <strchr>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	85 c0                	test   %eax,%eax$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	74 e2                	je     f01012fa <monitor+0xa0>$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	eb 96                	jmp    f01012b0 <monitor+0x56>$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	00 $/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	85 f6                	test   %esi,%esi$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	0f 84 62 ff ff ff    	je     f010128c <monitor+0x32>$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	bb 80 7a 10 f0       	mov    $0xf0107a80,%ebx$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	e8 e2 4e 00 00       	call   f0106227 <strcmp>$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	85 c0                	test   %eax,%eax$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	75 24                	jne    f010136d <monitor+0x113>$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	ff 14 85 88 7a 10 f0 	call   *-0xfef8578(,%eax,4)$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	85 c0                	test   %eax,%eax$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	78 26                	js     f010138e <monitor+0x134>$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	e9 1f ff ff ff       	jmp    f010128c <monitor+0x32>$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	47                   	inc    %edi$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	83 ff 0a             	cmp    $0xa,%edi$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	75 be                	jne    f0101334 <monitor+0xda>$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	c7 04 24 4d 75 10 f0 	movl   $0xf010754d,(%esp)$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	e8 8b 32 00 00       	call   f0104614 <cprintf>$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	e9 fe fe ff ff       	jmp    f010128c <monitor+0x32>$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	5b                   	pop    %ebx$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	5e                   	pop    %esi$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	5f                   	pop    %edi$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	5d                   	pop    %ebp$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	c3                   	ret    $/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396 <read_eip>:$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	55                   	push   %ebp$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	89 e5                	mov    %esp,%ebp$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	5d                   	pop    %ebp$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	c3                   	ret    $/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0 <boot_alloc>:$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	55                   	push   %ebp$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	83 3d 5c e2 33 f0 00 	cmpl   $0x0,0xf033e25c$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	75 11                	jne    f01013bd <boot_alloc+0x1d>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	ba 03 10 38 f0       	mov    $0xf0381003,%edx$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	89 15 5c e2 33 f0    	mov    %edx,0xf033e25c$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	8b 15 5c e2 33 f0    	mov    0xf033e25c,%edx$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	01 d0                	add    %edx,%eax$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	a3 5c e2 33 f0       	mov    %eax,0xf033e25c$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	89 d0                	mov    %edx,%eax$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	5d                   	pop    %ebp$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	c3                   	ret    $/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8 <check_va2pa_large>:$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	55                   	push   %ebp$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	8b 04 90             	mov    (%eax,%edx,4),%eax$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	89 c2                	mov    %eax,%edx$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	81 e2 81 00 00 00    	and    $0x81,%edx$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	81 fa 81 00 00 00    	cmp    $0x81,%edx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	75 07                	jne    f01013f8 <check_va2pa_large+0x20>$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	eb 05                	jmp    f01013fd <check_va2pa_large+0x25>$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	5d                   	pop    %ebp$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	c3                   	ret    $/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff <check_va2pa>:$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	55                   	push   %ebp$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	89 e5                	mov    %esp,%ebp$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	89 d1                	mov    %edx,%ecx$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	a8 01                	test   $0x1,%al$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	74 4d                	je     f010145e <check_va2pa+0x5f>$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	89 c1                	mov    %eax,%ecx$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	3b 0d a8 ee 33 f0    	cmp    0xf033eea8,%ecx$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	72 20                	jb     f0101443 <check_va2pa+0x44>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	f0 $/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	00 $/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	e8 fd eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	a8 01                	test   $0x1,%al$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	74 0e                	je     f0101465 <check_va2pa+0x66>$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	eb 0c                	jmp    f010146a <check_va2pa+0x6b>$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	eb 05                	jmp    f010146a <check_va2pa+0x6b>$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	c9                   	leave  $/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	c3                   	ret    $/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c <nvram_read>:$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	55                   	push   %ebp$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	89 e5                	mov    %esp,%ebp$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	56                   	push   %esi$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	53                   	push   %ebx$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	89 c3                	mov    %eax,%ebx$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	e8 3a 30 00 00       	call   f01044b8 <mc146818_read>$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	89 c6                	mov    %eax,%esi$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	43                   	inc    %ebx$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	e8 2f 30 00 00       	call   f01044b8 <mc146818_read>$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	09 f0                	or     %esi,%eax$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	5b                   	pop    %ebx$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	5e                   	pop    %esi$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	5d                   	pop    %ebp$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	c3                   	ret    $/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495 <check_page_free_list>:$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	55                   	push   %ebp$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	89 e5                	mov    %esp,%ebp$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	57                   	push   %edi$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	56                   	push   %esi$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	53                   	push   %ebx$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	19 f6                	sbb    %esi,%esi$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	46                   	inc    %esi$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	8b 1d 60 e2 33 f0    	mov    0xf033e260,%ebx$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	85 db                	test   %ebx,%ebx$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	75 1c                	jne    f01014d0 <check_page_free_list+0x3b>$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	c7 44 24 08 f8 7a 10 	movl   $0xf0107af8,0x8(%esp)$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	f0 $/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	c7 44 24 04 55 03 00 	movl   $0x355,0x4(%esp)$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	00 $/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	e8 70 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	85 c0                	test   %eax,%eax$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	74 52                	je     f0101526 <check_page_free_list+0x91>$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	39 f0                	cmp    %esi,%eax$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	0f 93 c0             	setae  %al$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	89 1a                	mov    %ebx,(%edx)$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	85 db                	test   %ebx,%ebx$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	75 d8                	jne    f01014e0 <check_page_free_list+0x4b>$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	89 10                	mov    %edx,(%eax)$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	89 1d 60 e2 33 f0    	mov    %ebx,0xf033e260$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	85 db                	test   %ebx,%ebx$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	74 67                	je     f010158d <check_page_free_list+0xf8>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	89 d8                	mov    %ebx,%eax$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	89 c2                	mov    %eax,%edx$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	39 f2                	cmp    %esi,%edx$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	73 4a                	jae    f0101587 <check_page_free_list+0xf2>$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	89 c2                	mov    %eax,%edx$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	72 20                	jb     f010156a <check_page_free_list+0xd5>$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	f0 $/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	00 $/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	e8 d6 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	00 $/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	00 $/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	e8 69 4d 00 00       	call   f01062f0 <memset>$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	85 db                	test   %ebx,%ebx$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	75 99                	jne    f0101526 <check_page_free_list+0x91>$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	e8 09 fe ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	8b 15 60 e2 33 f0    	mov    0xf033e260,%edx$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	85 d2                	test   %edx,%edx$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	0f 84 27 02 00 00    	je     f01017cf <check_page_free_list+0x33a>$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	8b 1d b0 ee 33 f0    	mov    0xf033eeb0,%ebx$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	39 da                	cmp    %ebx,%edx$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	72 4f                	jb     f0101601 <check_page_free_list+0x16c>$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	a1 a8 ee 33 f0       	mov    0xf033eea8,%eax$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	39 c2                	cmp    %eax,%edx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	73 66                	jae    f010162a <check_page_free_list+0x195>$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	89 d0                	mov    %edx,%eax$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	29 d8                	sub    %ebx,%eax$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	a8 07                	test   $0x7,%al$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	0f 85 84 00 00 00    	jne    f0101657 <check_page_free_list+0x1c2>$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	0f 84 a4 00 00 00    	je     f0101683 <check_page_free_list+0x1ee>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	0f 84 c4 00 00 00    	je     f01016ae <check_page_free_list+0x219>$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	e9 d6 00 00 00       	jmp    f01016d2 <check_page_free_list+0x23d>$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	73 24                	jae    f0101625 <check_page_free_list+0x190>$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	c7 44 24 0c 3b 82 10 	movl   $0xf010823b,0xc(%esp)$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	f0 $/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	f0 $/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	c7 44 24 04 70 03 00 	movl   $0x370,0x4(%esp)$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	00 $/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	e8 1b ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	72 24                	jb     f010164e <check_page_free_list+0x1b9>$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	c7 44 24 0c 5c 82 10 	movl   $0xf010825c,0xc(%esp)$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	f0 $/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	f0 $/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	00 $/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	e8 f2 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	89 d0                	mov    %edx,%eax$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	a8 07                	test   $0x7,%al$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	74 24                	je     f010167b <check_page_free_list+0x1e6>$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	c7 44 24 0c 1c 7b 10 	movl   $0xf0107b1c,0xc(%esp)$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	f0 $/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	f0 $/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	c7 44 24 04 72 03 00 	movl   $0x372,0x4(%esp)$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	00 $/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	e8 c5 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	75 24                	jne    f01016a7 <check_page_free_list+0x212>$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	c7 44 24 0c 70 82 10 	movl   $0xf0108270,0xc(%esp)$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	f0 $/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	f0 $/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	c7 44 24 04 75 03 00 	movl   $0x375,0x4(%esp)$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	00 $/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	e8 99 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	75 24                	jne    f01016d2 <check_page_free_list+0x23d>$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	c7 44 24 0c 81 82 10 	movl   $0xf0108281,0xc(%esp)$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	f0 $/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	f0 $/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	c7 44 24 04 76 03 00 	movl   $0x376,0x4(%esp)$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	00 $/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	e8 6e e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	75 24                	jne    f01016fd <check_page_free_list+0x268>$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	c7 44 24 0c 50 7b 10 	movl   $0xf0107b50,0xc(%esp)$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	f0 $/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	f0 $/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	c7 44 24 04 77 03 00 	movl   $0x377,0x4(%esp)$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	00 $/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	e8 43 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	75 24                	jne    f0101728 <check_page_free_list+0x293>$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	c7 44 24 0c 9a 82 10 	movl   $0xf010829a,0xc(%esp)$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	f0 $/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	f0 $/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	c7 44 24 04 78 03 00 	movl   $0x378,0x4(%esp)$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	00 $/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	e8 18 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	89 c1                	mov    %eax,%ecx$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	76 59                	jbe    f010178a <check_page_free_list+0x2f5>$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	89 c3                	mov    %eax,%ebx$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	77 20                	ja     f010175b <check_page_free_list+0x2c6>$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	f0 $/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	00 $/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	e8 e5 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	76 24                	jbe    f010178a <check_page_free_list+0x2f5>$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	c7 44 24 0c 74 7b 10 	movl   $0xf0107b74,0xc(%esp)$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	f0 $/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	f0 $/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	00 $/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	e8 b6 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	75 24                	jne    f01017b5 <check_page_free_list+0x320>$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	c7 44 24 0c b4 82 10 	movl   $0xf01082b4,0xc(%esp)$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	f0 $/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	f0 $/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	00 $/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	e8 8b e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	77 03                	ja     f01017c0 <check_page_free_list+0x32b>$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	47                   	inc    %edi$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	eb 01                	jmp    f01017c1 <check_page_free_list+0x32c>$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	46                   	inc    %esi$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	8b 12                	mov    (%edx),%edx$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	85 d2                	test   %edx,%edx$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	0f 85 31 fe ff ff    	jne    f01015fc <check_page_free_list+0x167>$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	85 ff                	test   %edi,%edi$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	7f 24                	jg     f01017f3 <check_page_free_list+0x35e>$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	c7 44 24 0c d1 82 10 	movl   $0xf01082d1,0xc(%esp)$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	f0 $/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	f0 $/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	c7 44 24 04 83 03 00 	movl   $0x383,0x4(%esp)$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	00 $/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	e8 4d e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	85 f6                	test   %esi,%esi$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	7f 24                	jg     f010181b <check_page_free_list+0x386>$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	c7 44 24 0c e3 82 10 	movl   $0xf01082e3,0xc(%esp)$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	f0 $/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	f0 $/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	c7 44 24 04 84 03 00 	movl   $0x384,0x4(%esp)$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	00 $/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	e8 25 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	5b                   	pop    %ebx$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	5e                   	pop    %esi$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	5f                   	pop    %edi$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	5d                   	pop    %ebp$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	c3                   	ret    $/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823 <page_init>:$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	55                   	push   %ebp$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	89 e5                	mov    %esp,%ebp$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	56                   	push   %esi$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	53                   	push   %ebx$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	e8 6b fb ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	77 20                	ja     f0101869 <page_init+0x46>$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	f0 $/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	00 $/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	e8 d7 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	83 3d a8 ee 33 f0 00 	cmpl   $0x0,0xf033eea8$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	74 68                	je     f01018e3 <page_init+0xc0>$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	8b 0d 60 e2 33 f0    	mov    0xf033e260,%ecx$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	85 c0                	test   %eax,%eax$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	74 10                	je     f010189a <page_init+0x77>$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	3d 9f 00 00 00       	cmp    $0x9f,%eax$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	76 04                	jbe    f0101895 <page_init+0x72>$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	73 05                	jae    f010189a <page_init+0x77>$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	75 1b                	jne    f01018b5 <page_init+0x92>$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	03 15 b0 ee 33 f0    	add    0xf033eeb0,%edx$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	66 c7 42 04 01 00    	movw   $0x1,0x4(%edx)$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	eb 1f                	jmp    f01018d4 <page_init+0xb1>$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	89 d6                	mov    %edx,%esi$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	03 35 b0 ee 33 f0    	add    0xf033eeb0,%esi$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	89 0e                	mov    %ecx,(%esi)$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	89 d1                	mov    %edx,%ecx$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	03 0d b0 ee 33 f0    	add    0xf033eeb0,%ecx$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	40                   	inc    %eax$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	39 05 a8 ee 33 f0    	cmp    %eax,0xf033eea8$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	77 a9                	ja     f0101886 <page_init+0x63>$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	89 0d 60 e2 33 f0    	mov    %ecx,0xf033e260$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	c7 05 64 e2 33 f0 00 	movl   $0x0,0xf033e264$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	00 00 00 $/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	5b                   	pop    %ebx$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	5e                   	pop    %esi$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	5d                   	pop    %ebp$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	c3                   	ret    $/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4 <page_alloc>:$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	55                   	push   %ebp$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	53                   	push   %ebx$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	8b 1d 60 e2 33 f0    	mov    0xf033e260,%ebx$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	85 db                	test   %ebx,%ebx$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	74 6b                	je     f0101970 <page_alloc+0x7c>$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	a3 60 e2 33 f0       	mov    %eax,0xf033e260$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	74 58                	je     f0101970 <page_alloc+0x7c>$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	89 d8                	mov    %ebx,%eax$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	89 c2                	mov    %eax,%edx$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	72 20                	jb     f0101953 <page_alloc+0x5f>$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	f0 $/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	00 $/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	e8 ed e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	00 $/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	00 $/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	e8 80 49 00 00       	call   f01062f0 <memset>$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	89 d8                	mov    %ebx,%eax$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	5b                   	pop    %ebx$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	5d                   	pop    %ebp$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	c3                   	ret    $/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978 <page_alloc_npages>:$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	55                   	push   %ebp$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	89 e5                	mov    %esp,%ebp$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	5d                   	pop    %ebp$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	c3                   	ret    $/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982 <page_free_npages>:$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	55                   	push   %ebp$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	89 e5                	mov    %esp,%ebp$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	5d                   	pop    %ebp$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	c3                   	ret    $/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c <alloc_page_with_color>:$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	55                   	push   %ebp$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	89 e5                	mov    %esp,%ebp$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	53                   	push   %ebx$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	8b 1d 60 e2 33 f0    	mov    0xf033e260,%ebx$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	85 db                	test   %ebx,%ebx$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	74 73                	je     f0101a10 <alloc_page_with_color+0x84>$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	75 67                	jne    f0101a0a <alloc_page_with_color+0x7e>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	8b 03                	mov    (%ebx),%eax$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	a3 60 e2 33 f0       	mov    %eax,0xf033e260$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	74 60                	je     f0101a10 <alloc_page_with_color+0x84>$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	89 d8                	mov    %ebx,%eax$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	89 c2                	mov    %eax,%edx$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	72 20                	jb     f01019eb <alloc_page_with_color+0x5f>$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	f0 $/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	00 $/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	e8 55 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	00 $/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	00 $/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	e8 e8 48 00 00       	call   f01062f0 <memset>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	eb 06                	jmp    f0101a10 <alloc_page_with_color+0x84>$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	85 db                	test   %ebx,%ebx$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	75 fa                	jne    f0101a0a <alloc_page_with_color+0x7e>$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	89 d8                	mov    %ebx,%eax$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	5b                   	pop    %ebx$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	5d                   	pop    %ebp$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	c3                   	ret    $/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18 <page_free>:$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	55                   	push   %ebp$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	75 0d                	jne    f0101a32 <page_free+0x1a>$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	8b 15 60 e2 33 f0    	mov    0xf033e260,%edx$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	89 10                	mov    %edx,(%eax)$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	a3 60 e2 33 f0       	mov    %eax,0xf033e260$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	5d                   	pop    %ebp$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	c3                   	ret    $/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34 <page_realloc_npages>:$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	55                   	push   %ebp$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	5d                   	pop    %ebp$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	c3                   	ret    $/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e <page_decref>:$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	55                   	push   %ebp$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	4a                   	dec    %edx$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	66 85 d2             	test   %dx,%dx$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	75 08                	jne    f0101a5c <page_decref+0x1e>$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	e8 bc ff ff ff       	call   f0101a18 <page_free>$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	c9                   	leave  $/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	c3                   	ret    $/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e <pgdir_walk>:$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	55                   	push   %ebp$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	56                   	push   %esi$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	53                   	push   %ebx$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	89 f3                	mov    %esi,%ebx$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	a8 01                	test   $0x1,%al$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	74 47                	je     f0101ac1 <pgdir_walk+0x63>$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	89 c2                	mov    %eax,%edx$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	72 20                	jb     f0101aac <pgdir_walk+0x4e>$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	f0 $/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	c7 44 24 04 4a 02 00 	movl   $0x24a,0x4(%esp)$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	00 $/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	e8 94 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	e9 86 00 00 00       	jmp    f0101b47 <pgdir_walk+0xe9>$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	75 74                	jne    f0101b3b <pgdir_walk+0xdd>$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	e8 21 fe ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	85 c0                	test   %eax,%eax$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	74 6b                	je     f0101b42 <pgdir_walk+0xe4>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	89 c2                	mov    %eax,%edx$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	89 c2                	mov    %eax,%edx$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	72 20                	jb     f0101b29 <pgdir_walk+0xcb>$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	f0 $/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	00 $/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	e8 17 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	eb 0c                	jmp    f0101b47 <pgdir_walk+0xe9>$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	eb 05                	jmp    f0101b47 <pgdir_walk+0xe9>$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	5b                   	pop    %ebx$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	5e                   	pop    %esi$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	5d                   	pop    %ebp$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	c3                   	ret    $/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e <boot_map_region>:$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	55                   	push   %ebp$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	57                   	push   %edi$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	56                   	push   %esi$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	53                   	push   %ebx$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	89 d3                	mov    %edx,%ebx$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	85 c9                	test   %ecx,%ecx$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	7e 42                	jle    f0101bab <boot_map_region+0x5d>$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b71	obj/kern/kernel.asm	/^f0101b71:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	00 $/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	e8 d0 fe ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	85 c0                	test   %eax,%eax$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	74 19                	je     f0101bab <boot_map_region+0x5d>$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	09 fa                	or     %edi,%edx$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	89 10                	mov    %edx,(%eax)$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	46                   	inc    %esi$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	39 75 e4             	cmp    %esi,-0x1c(%ebp)$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	75 cc                	jne    f0101b77 <boot_map_region+0x29>$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	5b                   	pop    %ebx$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	5e                   	pop    %esi$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	5f                   	pop    %edi$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	5d                   	pop    %ebp$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	c3                   	ret    $/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3 <page_lookup>:$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	55                   	push   %ebp$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	89 e5                	mov    %esp,%ebp$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	53                   	push   %ebx$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	00 $/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	e8 87 fe ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	85 db                	test   %ebx,%ebx$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	74 02                	je     f0101bdd <page_lookup+0x2a>$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	85 c0                	test   %eax,%eax$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	74 38                	je     f0101c19 <page_lookup+0x66>$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	8b 00                	mov    (%eax),%eax$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	a8 01                	test   $0x1,%al$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	74 39                	je     f0101c20 <page_lookup+0x6d>$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	72 1c                	jb     f0101c0e <page_lookup+0x5b>$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	c7 44 24 08 bc 7b 10 	movl   $0xf0107bbc,0x8(%esp)$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	f0 $/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	00 $/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	e8 32 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	03 05 b0 ee 33 f0    	add    0xf033eeb0,%eax$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	eb 0c                	jmp    f0101c25 <page_lookup+0x72>$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	eb 05                	jmp    f0101c25 <page_lookup+0x72>$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	5b                   	pop    %ebx$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	5d                   	pop    %ebp$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	c3                   	ret    $/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b <tlb_invalidate>:$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	55                   	push   %ebp$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	e8 56 4d 00 00       	call   f010698c <cpunum>$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	29 c2                	sub    %eax,%edx$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	83 3c 85 28 f0 33 f0 	cmpl   $0x0,-0xfcc0fd8(,%eax,4)$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	00 $/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	74 20                	je     f0101c6c <tlb_invalidate+0x41>$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	e8 3b 4d 00 00       	call   f010698c <cpunum>$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	29 c2                	sub    %eax,%edx$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	75 06                	jne    f0101c72 <tlb_invalidate+0x47>$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	0f 01 38             	invlpg (%eax)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	c9                   	leave  $/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	c3                   	ret    $/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74 <page_remove>:$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	55                   	push   %ebp$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	56                   	push   %esi$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	53                   	push   %ebx$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	e8 17 ff ff ff       	call   f0101bb3 <page_lookup>$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	85 c0                	test   %eax,%eax$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	74 1d                	je     f0101cbd <page_remove+0x49>$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	e8 96 fd ff ff       	call   f0101a3e <page_decref>$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	e8 6e ff ff ff       	call   f0101c2b <tlb_invalidate>$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	5b                   	pop    %ebx$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	5e                   	pop    %esi$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	5d                   	pop    %ebp$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	c3                   	ret    $/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4 <page_insert>:$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	55                   	push   %ebp$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	89 e5                	mov    %esp,%ebp$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	57                   	push   %edi$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	56                   	push   %esi$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	53                   	push   %ebx$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	00 $/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	e8 74 fd ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	89 c3                	mov    %eax,%ebx$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	85 c0                	test   %eax,%eax$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	0f 84 91 00 00 00    	je     f0101d85 <page_insert+0xc1>$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	00 $/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	e8 a8 fe ff ff       	call   f0101bb3 <page_lookup>$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	85 c0                	test   %eax,%eax$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	75 23                	jne    f0101d32 <page_insert+0x6e>$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	89 f0                	mov    %esi,%eax$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	09 d0                	or     %edx,%eax$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	eb 58                	jmp    f0101d8a <page_insert+0xc6>$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	39 f0                	cmp    %esi,%eax$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	75 1d                	jne    f0101d53 <page_insert+0x8f>$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	09 d0                	or     %edx,%eax$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	eb 37                	jmp    f0101d8a <page_insert+0xc6>$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	e8 12 ff ff ff       	call   f0101c74 <page_remove>$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	89 f0                	mov    %esi,%eax$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	09 d0                	or     %edx,%eax$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	eb 05                	jmp    f0101d8a <page_insert+0xc6>$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	5b                   	pop    %ebx$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	5e                   	pop    %esi$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	5f                   	pop    %edi$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	5d                   	pop    %ebp$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	c3                   	ret    $/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92 <mem_init>:$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	55                   	push   %ebp$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	89 e5                	mov    %esp,%ebp$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	57                   	push   %edi$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	56                   	push   %esi$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	53                   	push   %ebx$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	e8 c7 f6 ff ff       	call   f010146c <nvram_read>$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	89 c2                	mov    %eax,%edx$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	85 c0                	test   %eax,%eax$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	79 06                	jns    f0101db4 <mem_init+0x22>$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	89 15 58 e2 33 f0    	mov    %edx,0xf033e258$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	e8 a5 f6 ff ff       	call   f010146c <nvram_read>$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	89 c2                	mov    %eax,%edx$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	89 d0                	mov    %edx,%eax$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	85 d2                	test   %edx,%edx$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	79 06                	jns    f0101dd8 <mem_init+0x46>$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	74 0e                	je     f0101deb <mem_init+0x59>$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	89 15 a8 ee 33 f0    	mov    %edx,0xf033eea8$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	eb 0c                	jmp    f0101df7 <mem_init+0x65>$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	8b 15 58 e2 33 f0    	mov    0xf033e258,%edx$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	89 15 a8 ee 33 f0    	mov    %edx,0xf033eea8$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	a1 58 e2 33 f0       	mov    0xf033e258,%eax$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	a1 a8 ee 33 f0       	mov    0xf033eea8,%eax$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	c7 04 24 dc 7b 10 f0 	movl   $0xf0107bdc,(%esp)$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	e8 e9 27 00 00       	call   f0104614 <cprintf>$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	e8 6b f5 ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	a3 ac ee 33 f0       	mov    %eax,0xf033eeac$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	00 $/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	00 $/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	e8 9e 44 00 00       	call   f01062f0 <memset>$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	77 20                	ja     f0101e7e <mem_init+0xec>$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101e62	obj/kern/kernel.asm	/^f0101e62:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	f0 $/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	00 $/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	e8 c2 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	a1 a8 ee 33 f0       	mov    0xf033eea8,%eax$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	e8 06 f5 ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	a3 b0 ee 33 f0       	mov    %eax,0xf033eeb0$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	e8 f7 f4 ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	a3 6c e2 33 f0       	mov    %eax,0xf033e26c$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	e8 70 f9 ff ff       	call   f0101823 <page_init>$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	e8 d8 f5 ff ff       	call   f0101495 <check_page_free_list>$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	83 3d b0 ee 33 f0 00 	cmpl   $0x0,0xf033eeb0$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	75 1c                	jne    f0101ee2 <mem_init+0x150>$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	c7 44 24 08 f4 82 10 	movl   $0xf01082f4,0x8(%esp)$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	f0 $/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	c7 44 24 04 95 03 00 	movl   $0x395,0x4(%esp)$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	00 $/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	e8 5e e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	a1 60 e2 33 f0       	mov    0xf033e260,%eax$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	85 c0                	test   %eax,%eax$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	74 0e                	je     f0101ef9 <mem_init+0x167>$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	43                   	inc    %ebx$/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	85 c0                	test   %eax,%eax$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	75 f9                	jne    f0101ef0 <mem_init+0x15e>$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	eb 05                	jmp    f0101efe <mem_init+0x16c>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	e8 ea f9 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	89 c6                	mov    %eax,%esi$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	85 c0                	test   %eax,%eax$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	75 24                	jne    f0101f34 <mem_init+0x1a2>$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	c7 44 24 0c 0f 83 10 	movl   $0xf010830f,0xc(%esp)$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	f0 $/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	f0 $/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	00 $/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	e8 0c e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	e8 b4 f9 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	89 c7                	mov    %eax,%edi$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	85 c0                	test   %eax,%eax$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	75 24                	jne    f0101f6a <mem_init+0x1d8>$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	c7 44 24 0c 25 83 10 	movl   $0xf0108325,0xc(%esp)$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	f0 $/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	f0 $/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	c7 44 24 04 9e 03 00 	movl   $0x39e,0x4(%esp)$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	00 $/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	e8 d6 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	e8 7e f9 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	85 c0                	test   %eax,%eax$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	75 24                	jne    f0101fa1 <mem_init+0x20f>$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	c7 44 24 0c 3b 83 10 	movl   $0xf010833b,0xc(%esp)$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	f0 $/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	f0 $/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	00 $/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	e8 9f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	39 fe                	cmp    %edi,%esi$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	75 24                	jne    f0101fc9 <mem_init+0x237>$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	c7 44 24 0c 51 83 10 	movl   $0xf0108351,0xc(%esp)$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	f0 $/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	f0 $/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	00 $/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	e8 77 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	74 05                	je     f0101fd3 <mem_init+0x241>$/;"	l
f0101fce	obj/kern/kernel.asm	/^f0101fce:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	75 24                	jne    f0101ff7 <mem_init+0x265>$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	c7 44 24 0c 18 7c 10 	movl   $0xf0107c18,0xc(%esp)$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	f0 $/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	f0 $/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	00 $/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	e8 49 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	8b 15 b0 ee 33 f0    	mov    0xf033eeb0,%edx$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	a1 a8 ee 33 f0       	mov    0xf033eea8,%eax$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	89 f1                	mov    %esi,%ecx$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	29 d1                	sub    %edx,%ecx$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	72 24                	jb     f0102037 <mem_init+0x2a5>$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	c7 44 24 0c 63 83 10 	movl   $0xf0108363,0xc(%esp)$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	f0 $/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	f0 $/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	00 $/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	e8 09 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	89 f9                	mov    %edi,%ecx$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	29 d1                	sub    %edx,%ecx$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	77 24                	ja     f0102069 <mem_init+0x2d7>$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	c7 44 24 0c 80 83 10 	movl   $0xf0108380,0xc(%esp)$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	f0 $/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	f0 $/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	c7 44 24 04 a5 03 00 	movl   $0x3a5,0x4(%esp)$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	00 $/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	e8 d7 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	29 d1                	sub    %edx,%ecx$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	89 ca                	mov    %ecx,%edx$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	39 d0                	cmp    %edx,%eax$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	77 24                	ja     f010209e <mem_init+0x30c>$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	c7 44 24 0c 9d 83 10 	movl   $0xf010839d,0xc(%esp)$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	f0 $/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	f0 $/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	00 $/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	e8 a2 df ff ff       	call   f0100040 <_panic>$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	a1 60 e2 33 f0       	mov    0xf033e260,%eax$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	c7 05 60 e2 33 f0 00 	movl   $0x0,0xf033e260$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	00 00 00 $/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	e8 38 f8 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	85 c0                	test   %eax,%eax$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	74 24                	je     f01020e4 <mem_init+0x352>$/;"	l
f01020c0	obj/kern/kernel.asm	/^f01020c0:	c7 44 24 0c ba 83 10 	movl   $0xf01083ba,0xc(%esp)$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	f0 $/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	f0 $/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	00 $/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	e8 5c df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e4	obj/kern/kernel.asm	/^f01020e4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	e8 2c f9 ff ff       	call   f0101a18 <page_free>$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	e8 24 f9 ff ff       	call   f0101a18 <page_free>$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	e8 19 f9 ff ff       	call   f0101a18 <page_free>$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	e8 e9 f7 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	89 c6                	mov    %eax,%esi$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	85 c0                	test   %eax,%eax$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	75 24                	jne    f0102135 <mem_init+0x3a3>$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	c7 44 24 0c 0f 83 10 	movl   $0xf010830f,0xc(%esp)$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	f0 $/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	f0 $/;"	l
f0102121	obj/kern/kernel.asm	/^f0102121:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	00 $/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	e8 0b df ff ff       	call   f0100040 <_panic>$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	e8 b3 f7 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	89 c7                	mov    %eax,%edi$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	85 c0                	test   %eax,%eax$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	75 24                	jne    f010216b <mem_init+0x3d9>$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	c7 44 24 0c 25 83 10 	movl   $0xf0108325,0xc(%esp)$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	f0 $/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	f0 $/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	c7 44 24 04 b5 03 00 	movl   $0x3b5,0x4(%esp)$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	00 $/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	e8 d5 de ff ff       	call   f0100040 <_panic>$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	e8 7d f7 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	85 c0                	test   %eax,%eax$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	75 24                	jne    f01021a2 <mem_init+0x410>$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	c7 44 24 0c 3b 83 10 	movl   $0xf010833b,0xc(%esp)$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	f0 $/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	f0 $/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	00 $/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	e8 9e de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	39 fe                	cmp    %edi,%esi$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	75 24                	jne    f01021ca <mem_init+0x438>$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	c7 44 24 0c 51 83 10 	movl   $0xf0108351,0xc(%esp)$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	f0 $/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	f0 $/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	00 $/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	e8 76 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	74 05                	je     f01021d4 <mem_init+0x442>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	75 24                	jne    f01021f8 <mem_init+0x466>$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	c7 44 24 0c 18 7c 10 	movl   $0xf0107c18,0xc(%esp)$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	f0 $/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	f0 $/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	00 $/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	e8 48 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	e8 f0 f6 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	85 c0                	test   %eax,%eax$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	74 24                	je     f010222c <mem_init+0x49a>$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	c7 44 24 0c ba 83 10 	movl   $0xf01083ba,0xc(%esp)$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	f0 $/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	f0 $/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	00 $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	e8 14 de ff ff       	call   f0100040 <_panic>$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	89 f0                	mov    %esi,%eax$/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	89 c2                	mov    %eax,%edx$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	72 20                	jb     f0102267 <mem_init+0x4d5>$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	f0 $/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	00 $/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0102262	obj/kern/kernel.asm	/^f0102262:	e8 d9 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	00 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	00 $/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	e8 6c 40 00 00       	call   f01062f0 <memset>$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	e8 8c f7 ff ff       	call   f0101a18 <page_free>$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	e8 5c f6 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	85 c0                	test   %eax,%eax$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	75 24                	jne    f01022c0 <mem_init+0x52e>$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	c7 44 24 0c c9 83 10 	movl   $0xf01083c9,0xc(%esp)$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	f0 $/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	f0 $/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	00 $/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	e8 80 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	39 c6                	cmp    %eax,%esi$/;"	l
f01022c2	obj/kern/kernel.asm	/^f01022c2:	74 24                	je     f01022e8 <mem_init+0x556>$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	c7 44 24 0c e7 83 10 	movl   $0xf01083e7,0xc(%esp)$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	f0 $/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	f0 $/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	00 $/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	e8 58 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	89 f2                	mov    %esi,%edx$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	89 d0                	mov    %edx,%eax$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	72 20                	jb     f0102323 <mem_init+0x591>$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	f0 $/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	00 $/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	e8 1d dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	75 11                	jne    f010233d <mem_init+0x5ab>$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	74 24                	je     f0102361 <mem_init+0x5cf>$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	c7 44 24 0c f7 83 10 	movl   $0xf01083f7,0xc(%esp)$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	f0 $/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	f0 $/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	00 $/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	e8 df dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	40                   	inc    %eax$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	39 d0                	cmp    %edx,%eax$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	75 d2                	jne    f0102338 <mem_init+0x5a6>$/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	89 15 60 e2 33 f0    	mov    %edx,0xf033e260$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	e8 a1 f6 ff ff       	call   f0101a18 <page_free>$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	e8 99 f6 ff ff       	call   f0101a18 <page_free>$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	e8 8e f6 ff ff       	call   f0101a18 <page_free>$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	a1 60 e2 33 f0       	mov    0xf033e260,%eax$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	85 c0                	test   %eax,%eax$/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	74 07                	je     f010239a <mem_init+0x608>$/;"	l
f0102393	obj/kern/kernel.asm	/^f0102393:	4b                   	dec    %ebx$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	8b 00                	mov    (%eax),%eax$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	85 c0                	test   %eax,%eax$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	75 f9                	jne    f0102393 <mem_init+0x601>$/;"	l
f010239a	obj/kern/kernel.asm	/^f010239a:	85 db                	test   %ebx,%ebx$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	74 24                	je     f01023c2 <mem_init+0x630>$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	c7 44 24 0c 01 84 10 	movl   $0xf0108401,0xc(%esp)$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	f0 $/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	f0 $/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	00 $/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	e8 7e dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	c7 04 24 38 7c 10 f0 	movl   $0xf0107c38,(%esp)$/;"	l
f01023c9	obj/kern/kernel.asm	/^f01023c9:	e8 46 22 00 00       	call   f0104614 <cprintf>$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	e8 1a f5 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	89 c3                	mov    %eax,%ebx$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	85 c0                	test   %eax,%eax$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	75 24                	jne    f0102404 <mem_init+0x672>$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	c7 44 24 0c 0f 83 10 	movl   $0xf010830f,0xc(%esp)$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	f0 $/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	f0 $/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	c7 44 24 04 4c 04 00 	movl   $0x44c,0x4(%esp)$/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	00 $/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	e8 3c dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102404	obj/kern/kernel.asm	/^f0102404:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	e8 e4 f4 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	89 c7                	mov    %eax,%edi$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	85 c0                	test   %eax,%eax$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	75 24                	jne    f010243a <mem_init+0x6a8>$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	c7 44 24 0c 25 83 10 	movl   $0xf0108325,0xc(%esp)$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	f0 $/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	f0 $/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	c7 44 24 04 4d 04 00 	movl   $0x44d,0x4(%esp)$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	00 $/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	e8 06 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	e8 ae f4 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	89 c6                	mov    %eax,%esi$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	85 c0                	test   %eax,%eax$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	75 24                	jne    f0102470 <mem_init+0x6de>$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	c7 44 24 0c 3b 83 10 	movl   $0xf010833b,0xc(%esp)$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	f0 $/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	f0 $/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	c7 44 24 04 4e 04 00 	movl   $0x44e,0x4(%esp)$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	00 $/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	e8 d0 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	75 24                	jne    f0102498 <mem_init+0x706>$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	c7 44 24 0c 51 83 10 	movl   $0xf0108351,0xc(%esp)$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	f0 $/;"	l
f010247c	obj/kern/kernel.asm	/^f010247c:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	f0 $/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	c7 44 24 04 51 04 00 	movl   $0x451,0x4(%esp)$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	00 $/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	e8 a8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102498	obj/kern/kernel.asm	/^f0102498:	39 c7                	cmp    %eax,%edi$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	74 04                	je     f01024a0 <mem_init+0x70e>$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	75 24                	jne    f01024c4 <mem_init+0x732>$/;"	l
f01024a0	obj/kern/kernel.asm	/^f01024a0:	c7 44 24 0c 18 7c 10 	movl   $0xf0107c18,0xc(%esp)$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	f0 $/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	f0 $/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	00 $/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	e8 7c db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	8b 15 60 e2 33 f0    	mov    0xf033e260,%edx$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f01024cd	obj/kern/kernel.asm	/^f01024cd:	c7 05 60 e2 33 f0 00 	movl   $0x0,0xf033e260$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	00 00 00 $/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	e8 11 f4 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	85 c0                	test   %eax,%eax$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	74 24                	je     f010250b <mem_init+0x779>$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	c7 44 24 0c ba 83 10 	movl   $0xf01083ba,0xc(%esp)$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	f0 $/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	f0 $/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	c7 44 24 04 59 04 00 	movl   $0x459,0x4(%esp)$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	00 $/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	e8 35 db ff ff       	call   f0100040 <_panic>$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	00 $/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	e8 8c f6 ff ff       	call   f0101bb3 <page_lookup>$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	85 c0                	test   %eax,%eax$/;"	l
f0102529	obj/kern/kernel.asm	/^f0102529:	74 24                	je     f010254f <mem_init+0x7bd>$/;"	l
f010252b	obj/kern/kernel.asm	/^f010252b:	c7 44 24 0c 58 7c 10 	movl   $0xf0107c58,0xc(%esp)$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	f0 $/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	f0 $/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	c7 44 24 04 5c 04 00 	movl   $0x45c,0x4(%esp)$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	00 $/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	e8 f1 da ff ff       	call   f0100040 <_panic>$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	00 $/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010255e	obj/kern/kernel.asm	/^f010255e:	00 $/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	e8 54 f7 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	85 c0                	test   %eax,%eax$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	78 24                	js     f0102598 <mem_init+0x806>$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	c7 44 24 0c 90 7c 10 	movl   $0xf0107c90,0xc(%esp)$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	f0 $/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	f0 $/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	c7 44 24 04 5f 04 00 	movl   $0x45f,0x4(%esp)$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	00 $/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	e8 a8 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	e8 78 f4 ff ff       	call   f0101a18 <page_free>$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	00 $/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	00 $/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	e8 03 f7 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	85 c0                	test   %eax,%eax$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	74 24                	je     f01025e9 <mem_init+0x857>$/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	c7 44 24 0c c0 7c 10 	movl   $0xf0107cc0,0xc(%esp)$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	f0 $/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	f0 $/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	c7 44 24 04 63 04 00 	movl   $0x463,0x4(%esp)$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	00 $/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	e8 57 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	8b 0d ac ee 33 f0    	mov    0xf033eeac,%ecx$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	a1 b0 ee 33 f0       	mov    0xf033eeb0,%eax$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01025fa	obj/kern/kernel.asm	/^f01025fa:	8b 11                	mov    (%ecx),%edx$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	89 d8                	mov    %ebx,%eax$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	39 c2                	cmp    %eax,%edx$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	74 24                	je     f0102635 <mem_init+0x8a3>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	c7 44 24 0c f0 7c 10 	movl   $0xf0107cf0,0xc(%esp)$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	f0 $/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	f0 $/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	c7 44 24 04 64 04 00 	movl   $0x464,0x4(%esp)$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	00 $/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	e8 0b da ff ff       	call   f0100040 <_panic>$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	e8 bd ed ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	89 fa                	mov    %edi,%edx$/;"	l
f0102644	obj/kern/kernel.asm	/^f0102644:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	39 d0                	cmp    %edx,%eax$/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	74 24                	je     f0102675 <mem_init+0x8e3>$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	c7 44 24 0c 18 7d 10 	movl   $0xf0107d18,0xc(%esp)$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	f0 $/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	f0 $/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	c7 44 24 04 65 04 00 	movl   $0x465,0x4(%esp)$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	00 $/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	e8 cb d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	74 24                	je     f01026a0 <mem_init+0x90e>$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	c7 44 24 0c 0c 84 10 	movl   $0xf010840c,0xc(%esp)$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	f0 $/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	f0 $/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	c7 44 24 04 66 04 00 	movl   $0x466,0x4(%esp)$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	00 $/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	e8 a0 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	74 24                	je     f01026cb <mem_init+0x939>$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	c7 44 24 0c 1d 84 10 	movl   $0xf010841d,0xc(%esp)$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	f0 $/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	f0 $/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	c7 44 24 04 67 04 00 	movl   $0x467,0x4(%esp)$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	00 $/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	e8 75 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	00 $/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	00 $/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	e8 da f5 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	85 c0                	test   %eax,%eax$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	74 24                	je     f0102712 <mem_init+0x980>$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	c7 44 24 0c 48 7d 10 	movl   $0xf0107d48,0xc(%esp)$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	f0 $/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	f0 $/;"	l
f01026fe	obj/kern/kernel.asm	/^f01026fe:	c7 44 24 04 6a 04 00 	movl   $0x46a,0x4(%esp)$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	00 $/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	e8 2e d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	e8 de ec ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	89 f2                	mov    %esi,%edx$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	74 24                	je     f0102757 <mem_init+0x9c5>$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	c7 44 24 0c 84 7d 10 	movl   $0xf0107d84,0xc(%esp)$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	f0 $/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	f0 $/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	c7 44 24 04 6b 04 00 	movl   $0x46b,0x4(%esp)$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	00 $/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	e8 e9 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	74 24                	je     f0102782 <mem_init+0x9f0>$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	c7 44 24 0c 2e 84 10 	movl   $0xf010842e,0xc(%esp)$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	f0 $/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	f0 $/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	c7 44 24 04 6c 04 00 	movl   $0x46c,0x4(%esp)$/;"	l
f0102775	obj/kern/kernel.asm	/^f0102775:	00 $/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	e8 be d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	e8 66 f1 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	85 c0                	test   %eax,%eax$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	74 24                	je     f01027b6 <mem_init+0xa24>$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	c7 44 24 0c ba 83 10 	movl   $0xf01083ba,0xc(%esp)$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	f0 $/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	f0 $/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	c7 44 24 04 6f 04 00 	movl   $0x46f,0x4(%esp)$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	00 $/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	e8 8a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	00 $/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	00 $/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	e8 ed f4 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	85 c0                	test   %eax,%eax$/;"	l
f01027d9	obj/kern/kernel.asm	/^f01027d9:	74 24                	je     f01027ff <mem_init+0xa6d>$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c7 44 24 0c 48 7d 10 	movl   $0xf0107d48,0xc(%esp)$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	f0 $/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	f0 $/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	c7 44 24 04 72 04 00 	movl   $0x472,0x4(%esp)$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	00 $/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	e8 41 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ff	obj/kern/kernel.asm	/^f01027ff:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	e8 f1 eb ff ff       	call   f01013ff <check_va2pa>$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	89 f2                	mov    %esi,%edx$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	39 d0                	cmp    %edx,%eax$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	74 24                	je     f0102844 <mem_init+0xab2>$/;"	l
f0102820	obj/kern/kernel.asm	/^f0102820:	c7 44 24 0c 84 7d 10 	movl   $0xf0107d84,0xc(%esp)$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	f0 $/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	f0 $/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	c7 44 24 04 73 04 00 	movl   $0x473,0x4(%esp)$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	00 $/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	e8 fc d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	74 24                	je     f010286f <mem_init+0xadd>$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	c7 44 24 0c 2e 84 10 	movl   $0xf010842e,0xc(%esp)$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	f0 $/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	f0 $/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	c7 44 24 04 74 04 00 	movl   $0x474,0x4(%esp)$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	00 $/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	e8 d1 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	e8 79 f0 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	85 c0                	test   %eax,%eax$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	74 24                	je     f01028a3 <mem_init+0xb11>$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	c7 44 24 0c ba 83 10 	movl   $0xf01083ba,0xc(%esp)$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	f0 $/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f0 $/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	c7 44 24 04 78 04 00 	movl   $0x478,0x4(%esp)$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	00 $/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	e8 9d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	8b 15 ac ee 33 f0    	mov    0xf033eeac,%edx$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	8b 02                	mov    (%edx),%eax$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	89 c1                	mov    %eax,%ecx$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	3b 0d a8 ee 33 f0    	cmp    0xf033eea8,%ecx$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	72 20                	jb     f01028dd <mem_init+0xb4b>$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	f0 $/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	c7 44 24 04 7b 04 00 	movl   $0x47b,0x4(%esp)$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	00 $/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	e8 63 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	00 $/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	00 $/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	e8 61 f1 ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	83 c2 04             	add    $0x4,%edx$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	39 d0                	cmp    %edx,%eax$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	74 24                	je     f010292b <mem_init+0xb99>$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	c7 44 24 0c b4 7d 10 	movl   $0xf0107db4,0xc(%esp)$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	f0 $/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	f0 $/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	c7 44 24 04 7c 04 00 	movl   $0x47c,0x4(%esp)$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	00 $/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	e8 15 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	00 $/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	00 $/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	e8 78 f3 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	85 c0                	test   %eax,%eax$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	74 24                	je     f0102974 <mem_init+0xbe2>$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	c7 44 24 0c f4 7d 10 	movl   $0xf0107df4,0xc(%esp)$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	f0 $/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	f0 $/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	c7 44 24 04 7f 04 00 	movl   $0x47f,0x4(%esp)$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	00 $/;"	l
f0102968	obj/kern/kernel.asm	/^f0102968:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	e8 cc d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	8b 0d ac ee 33 f0    	mov    0xf033eeac,%ecx$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	89 c8                	mov    %ecx,%eax$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	e8 76 ea ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	89 f2                	mov    %esi,%edx$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	39 d0                	cmp    %edx,%eax$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	74 24                	je     f01029bf <mem_init+0xc2d>$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	c7 44 24 0c 84 7d 10 	movl   $0xf0107d84,0xc(%esp)$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	f0 $/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	f0 $/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	c7 44 24 04 80 04 00 	movl   $0x480,0x4(%esp)$/;"	l
f01029b2	obj/kern/kernel.asm	/^f01029b2:	00 $/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	e8 81 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	74 24                	je     f01029ea <mem_init+0xc58>$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	c7 44 24 0c 2e 84 10 	movl   $0xf010842e,0xc(%esp)$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	f0 $/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	f0 $/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	c7 44 24 04 81 04 00 	movl   $0x481,0x4(%esp)$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	00 $/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	e8 56 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	00 $/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	00 $/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	e8 59 f0 ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	75 24                	jne    f0102a2e <mem_init+0xc9c>$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	c7 44 24 0c 34 7e 10 	movl   $0xf0107e34,0xc(%esp)$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	f0 $/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	f0 $/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	c7 44 24 04 82 04 00 	movl   $0x482,0x4(%esp)$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	00 $/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	e8 12 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	75 24                	jne    f0102a5c <mem_init+0xcca>$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	c7 44 24 0c 3f 84 10 	movl   $0xf010843f,0xc(%esp)$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	f0 $/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102a47	obj/kern/kernel.asm	/^f0102a47:	f0 $/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	c7 44 24 04 83 04 00 	movl   $0x483,0x4(%esp)$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	00 $/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	e8 e4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	00 $/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	00 $/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	e8 4c f2 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	85 c0                	test   %eax,%eax$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	78 24                	js     f0102aa0 <mem_init+0xd0e>$/;"	l
f0102a7c	obj/kern/kernel.asm	/^f0102a7c:	c7 44 24 0c 68 7e 10 	movl   $0xf0107e68,0xc(%esp)$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	f0 $/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	f0 $/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	c7 44 24 04 86 04 00 	movl   $0x486,0x4(%esp)$/;"	l
f0102a93	obj/kern/kernel.asm	/^f0102a93:	00 $/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	e8 a0 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	00 $/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	00 $/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	e8 03 f2 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f0102ac1	obj/kern/kernel.asm	/^f0102ac1:	85 c0                	test   %eax,%eax$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	74 24                	je     f0102ae9 <mem_init+0xd57>$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	c7 44 24 0c a0 7e 10 	movl   $0xf0107ea0,0xc(%esp)$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	f0 $/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	f0 $/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	c7 44 24 04 89 04 00 	movl   $0x489,0x4(%esp)$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	00 $/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	e8 57 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	00 $/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	00 $/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	e8 58 ef ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	74 24                	je     f0102b2f <mem_init+0xd9d>$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	c7 44 24 0c dc 7e 10 	movl   $0xf0107edc,0xc(%esp)$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	f0 $/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	f0 $/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	c7 44 24 04 8a 04 00 	movl   $0x48a,0x4(%esp)$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	00 $/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	e8 11 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	e8 be e8 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	89 f8                	mov    %edi,%eax$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	74 24                	je     f0102b7b <mem_init+0xde9>$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	c7 44 24 0c 14 7f 10 	movl   $0xf0107f14,0xc(%esp)$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	f0 $/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	f0 $/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	c7 44 24 04 8d 04 00 	movl   $0x48d,0x4(%esp)$/;"	l
f0102b6e	obj/kern/kernel.asm	/^f0102b6e:	00 $/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	e8 c5 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	e8 77 e8 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	74 24                	je     f0102bb1 <mem_init+0xe1f>$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	c7 44 24 0c 40 7f 10 	movl   $0xf0107f40,0xc(%esp)$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	f0 $/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	f0 $/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	c7 44 24 04 8e 04 00 	movl   $0x48e,0x4(%esp)$/;"	l
f0102ba4	obj/kern/kernel.asm	/^f0102ba4:	00 $/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	e8 8f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	74 24                	je     f0102bdc <mem_init+0xe4a>$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	c7 44 24 0c 55 84 10 	movl   $0xf0108455,0xc(%esp)$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	f0 $/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	f0 $/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	c7 44 24 04 90 04 00 	movl   $0x490,0x4(%esp)$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	00 $/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	e8 64 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	74 24                	je     f0102c07 <mem_init+0xe75>$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	c7 44 24 0c 66 84 10 	movl   $0xf0108466,0xc(%esp)$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	f0 $/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	f0 $/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	c7 44 24 04 91 04 00 	movl   $0x491,0x4(%esp)$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	00 $/;"	l
f0102bfb	obj/kern/kernel.asm	/^f0102bfb:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	e8 39 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	e8 e1 ec ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	85 c0                	test   %eax,%eax$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	74 04                	je     f0102c1b <mem_init+0xe89>$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	39 c6                	cmp    %eax,%esi$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	74 24                	je     f0102c3f <mem_init+0xead>$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	c7 44 24 0c 70 7f 10 	movl   $0xf0107f70,0xc(%esp)$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	f0 $/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	f0 $/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	c7 44 24 04 94 04 00 	movl   $0x494,0x4(%esp)$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	00 $/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	e8 01 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	00 $/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	e8 20 f0 ff ff       	call   f0101c74 <page_remove>$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	8b 15 ac ee 33 f0    	mov    0xf033eeac,%edx$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	e8 95 e7 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	74 24                	je     f0102c93 <mem_init+0xf01>$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	c7 44 24 0c 94 7f 10 	movl   $0xf0107f94,0xc(%esp)$/;"	l
f0102c76	obj/kern/kernel.asm	/^f0102c76:	f0 $/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102c7e	obj/kern/kernel.asm	/^f0102c7e:	f0 $/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	c7 44 24 04 98 04 00 	movl   $0x498,0x4(%esp)$/;"	l
f0102c86	obj/kern/kernel.asm	/^f0102c86:	00 $/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102c8e	obj/kern/kernel.asm	/^f0102c8e:	e8 ad d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	e8 5f e7 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	89 fa                	mov    %edi,%edx$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	39 d0                	cmp    %edx,%eax$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	74 24                	je     f0102cd6 <mem_init+0xf44>$/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	c7 44 24 0c 40 7f 10 	movl   $0xf0107f40,0xc(%esp)$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	f0 $/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	f0 $/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	c7 44 24 04 99 04 00 	movl   $0x499,0x4(%esp)$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	00 $/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	e8 6a d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	74 24                	je     f0102d01 <mem_init+0xf6f>$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	c7 44 24 0c 0c 84 10 	movl   $0xf010840c,0xc(%esp)$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	f0 $/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	f0 $/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	c7 44 24 04 9a 04 00 	movl   $0x49a,0x4(%esp)$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	00 $/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	e8 3f d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	74 24                	je     f0102d2c <mem_init+0xf9a>$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	c7 44 24 0c 66 84 10 	movl   $0xf0108466,0xc(%esp)$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	f0 $/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	f0 $/;"	l
f0102d18	obj/kern/kernel.asm	/^f0102d18:	c7 44 24 04 9b 04 00 	movl   $0x49b,0x4(%esp)$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	00 $/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	e8 14 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	00 $/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	e8 35 ef ff ff       	call   f0101c74 <page_remove>$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	e8 ae e6 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	74 24                	je     f0102d7a <mem_init+0xfe8>$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	c7 44 24 0c 94 7f 10 	movl   $0xf0107f94,0xc(%esp)$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	f0 $/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	f0 $/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	c7 44 24 04 9f 04 00 	movl   $0x49f,0x4(%esp)$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	00 $/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	e8 c6 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	e8 78 e6 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	74 24                	je     f0102db0 <mem_init+0x101e>$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	c7 44 24 0c b8 7f 10 	movl   $0xf0107fb8,0xc(%esp)$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	f0 $/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	f0 $/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	c7 44 24 04 a0 04 00 	movl   $0x4a0,0x4(%esp)$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	00 $/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	e8 90 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	74 24                	je     f0102ddb <mem_init+0x1049>$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	c7 44 24 0c 77 84 10 	movl   $0xf0108477,0xc(%esp)$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	f0 $/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	f0 $/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	c7 44 24 04 a1 04 00 	movl   $0x4a1,0x4(%esp)$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	00 $/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	e8 65 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	74 24                	je     f0102e06 <mem_init+0x1074>$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	c7 44 24 0c 66 84 10 	movl   $0xf0108466,0xc(%esp)$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	f0 $/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	f0 $/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	c7 44 24 04 a2 04 00 	movl   $0x4a2,0x4(%esp)$/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	00 $/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	e8 3a d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	e8 e2 ea ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	85 c0                	test   %eax,%eax$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	74 04                	je     f0102e1a <mem_init+0x1088>$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	39 c7                	cmp    %eax,%edi$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	74 24                	je     f0102e3e <mem_init+0x10ac>$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	c7 44 24 0c e0 7f 10 	movl   $0xf0107fe0,0xc(%esp)$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	f0 $/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	f0 $/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	c7 44 24 04 a5 04 00 	movl   $0x4a5,0x4(%esp)$/;"	l
f0102e31	obj/kern/kernel.asm	/^f0102e31:	00 $/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	e8 02 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e45	obj/kern/kernel.asm	/^f0102e45:	e8 aa ea ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	85 c0                	test   %eax,%eax$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	74 24                	je     f0102e72 <mem_init+0x10e0>$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	c7 44 24 0c ba 83 10 	movl   $0xf01083ba,0xc(%esp)$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	f0 $/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	f0 $/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	c7 44 24 04 a8 04 00 	movl   $0x4a8,0x4(%esp)$/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	00 $/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	e8 ce d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	89 da                	mov    %ebx,%edx$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	74 24                	je     f0102eb5 <mem_init+0x1123>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	c7 44 24 0c f0 7c 10 	movl   $0xf0107cf0,0xc(%esp)$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	f0 $/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	f0 $/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	c7 44 24 04 ab 04 00 	movl   $0x4ab,0x4(%esp)$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	00 $/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	e8 8b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	74 24                	je     f0102ee6 <mem_init+0x1154>$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	c7 44 24 0c 1d 84 10 	movl   $0xf010841d,0xc(%esp)$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	f0 $/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	f0 $/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	c7 44 24 04 ad 04 00 	movl   $0x4ad,0x4(%esp)$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	00 $/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	e8 5a d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	e8 24 eb ff ff       	call   f0101a18 <page_free>$/;"	l
f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	00 $/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	00 $/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	e8 4d eb ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	8b 0d ac ee 33 f0    	mov    0xf033eeac,%ecx$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	8b 15 a8 ee 33 f0    	mov    0xf033eea8,%edx$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	72 23                	jb     f0102f63 <mem_init+0x11d1>$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	f0 $/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	c7 44 24 04 b4 04 00 	movl   $0x4b4,0x4(%esp)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	00 $/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	e8 dd d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	74 24                	je     f0102f94 <mem_init+0x1202>$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	c7 44 24 0c 88 84 10 	movl   $0xf0108488,0xc(%esp)$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	f0 $/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	f0 $/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	c7 44 24 04 b5 04 00 	movl   $0x4b5,0x4(%esp)$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	00 $/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	e8 ac d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	89 d8                	mov    %ebx,%eax$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	89 c1                	mov    %eax,%ecx$/;"	l
f0102fb1	obj/kern/kernel.asm	/^f0102fb1:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	77 20                	ja     f0102fd9 <mem_init+0x1247>$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	f0 $/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	00 $/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	e8 67 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	00 $/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	00 $/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102fee	obj/kern/kernel.asm	/^f0102fee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	e8 fa 32 00 00       	call   f01062f0 <memset>$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	e8 1a ea ff ff       	call   f0101a18 <page_free>$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	00 $/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010300d	obj/kern/kernel.asm	/^f010300d:	00 $/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	e8 43 ea ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	89 da                	mov    %ebx,%edx$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103026	obj/kern/kernel.asm	/^f0103026:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	89 d0                	mov    %edx,%eax$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	72 20                	jb     f0103056 <mem_init+0x12c4>$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010303a	obj/kern/kernel.asm	/^f010303a:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	f0 $/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	00 $/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0103051	obj/kern/kernel.asm	/^f0103051:	e8 ea cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010305c	obj/kern/kernel.asm	/^f010305c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	75 11                	jne    f0103079 <mem_init+0x12e7>$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	74 24                	je     f010309d <mem_init+0x130b>$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	c7 44 24 0c a0 84 10 	movl   $0xf01084a0,0xc(%esp)$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	f0 $/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	f0 $/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	c7 44 24 04 bf 04 00 	movl   $0x4bf,0x4(%esp)$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	00 $/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	e8 a3 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	83 c0 04             	add    $0x4,%eax$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	39 d0                	cmp    %edx,%eax$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	75 d0                	jne    f0103074 <mem_init+0x12e2>$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	89 0d 60 e2 33 f0    	mov    %ecx,0xf033e260$/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	e8 52 e9 ff ff       	call   f0101a18 <page_free>$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	e8 4a e9 ff ff       	call   f0101a18 <page_free>$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	e8 42 e9 ff ff       	call   f0101a18 <page_free>$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	c7 04 24 b7 84 10 f0 	movl   $0xf01084b7,(%esp)$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	e8 32 15 00 00       	call   f0104614 <cprintf>$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	a1 b0 ee 33 f0       	mov    0xf033eeb0,%eax$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	77 20                	ja     f010310e <mem_init+0x137c>$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	f0 $/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	00 $/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	e8 32 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	8b 15 a8 ee 33 f0    	mov    0xf033eea8,%edx$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	00 $/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	e8 0e ea ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	a1 6c e2 33 f0       	mov    0xf033e26c,%eax$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	77 20                	ja     f010316c <mem_init+0x13da>$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	f0 $/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	00 $/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	e8 d4 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	00 $/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	b9 00 00 02 00       	mov    $0x20000,%ecx$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	e8 be e9 ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	b8 00 00 12 f0       	mov    $0xf0120000,%eax$/;"	l
f0103195	obj/kern/kernel.asm	/^f0103195:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	77 20                	ja     f01031bc <mem_init+0x142a>$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	f0 $/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	00 $/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	e8 84 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	00 $/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	c7 04 24 00 00 12 00 	movl   $0x120000,(%esp)$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	e8 6f e9 ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	00 $/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	e8 4c e9 ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	00 $/;"	l
f010320a	obj/kern/kernel.asm	/^f010320a:	c7 04 24 00 00 00 fe 	movl   $0xfe000000,(%esp)$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	b9 00 00 00 02       	mov    $0x2000000,%ecx$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	ba 00 00 00 fe       	mov    $0xfe000000,%edx$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	e8 29 e9 ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	b8 00 00 34 f0       	mov    $0xf0340000,%eax$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	0f 87 79 08 00 00    	ja     f0103aae <mem_init+0x1d1c>$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	eb 0c                	jmp    f0103243 <mem_init+0x14b1>$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	89 d8                	mov    %ebx,%eax$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	77 27                	ja     f0103268 <mem_init+0x14d6>$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	eb 05                	jmp    f0103248 <mem_init+0x14b6>$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	b8 00 00 34 f0       	mov    $0xf0340000,%eax$/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	f0 $/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	c7 44 24 04 1f 01 00 	movl   $0x11f,0x4(%esp)$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	00 $/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	e8 d8 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	00 $/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	89 f2                	mov    %esi,%edx$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	e8 c4 e8 ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	81 fe 00 80 b7 ef    	cmp    $0xefb78000,%esi$/;"	l
f010329c	obj/kern/kernel.asm	/^f010329c:	75 99                	jne    f0103237 <mem_init+0x14a5>$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	8b 35 ac ee 33 f0    	mov    0xf033eeac,%esi$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	a1 a8 ee 33 f0       	mov    0xf033eea8,%eax$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	8d 3c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%edi$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	0f 84 80 00 00 00    	je     f010333f <mem_init+0x15ad>$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	89 f0                	mov    %esi,%eax$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	e8 2e e1 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	8b 15 b0 ee 33 f0    	mov    0xf033eeb0,%edx$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	77 20                	ja     f01032ff <mem_init+0x156d>$/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	f0 $/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	00 $/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	e8 41 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	39 d0                	cmp    %edx,%eax$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	74 24                	je     f010332e <mem_init+0x159c>$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	c7 44 24 0c 04 80 10 	movl   $0xf0108004,0xc(%esp)$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	f0 $/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	f0 $/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	00 $/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	e8 12 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	39 df                	cmp    %ebx,%edi$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	77 8c                	ja     f01032c4 <mem_init+0x1532>$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d:	eb 05                	jmp    f0103344 <mem_init+0x15b2>$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	89 f0                	mov    %esi,%eax$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	e8 ae e0 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	8b 15 6c e2 33 f0    	mov    0xf033e26c,%edx$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	77 20                	ja     f010337f <mem_init+0x15ed>$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	f0 $/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	00 $/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	e8 c1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	39 d0                	cmp    %edx,%eax$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	74 24                	je     f01033ae <mem_init+0x161c>$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	c7 44 24 0c 38 80 10 	movl   $0xf0108038,0xc(%esp)$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	f0 $/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	f0 $/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	00 $/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	e8 92 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	81 fb 00 00 02 00    	cmp    $0x20000,%ebx$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	75 88                	jne    f0103344 <mem_init+0x15b2>$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	89 f0                	mov    %esi,%eax$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	e8 10 e0 ff ff       	call   f01013d8 <check_va2pa_large>$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	85 c0                	test   %eax,%eax$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	74 0a                	je     f01033d6 <mem_init+0x1644>$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	75 61                	jne    f0103435 <mem_init+0x16a3>$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	eb 58                	jmp    f010342e <mem_init+0x169c>$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	74 44                	je     f0103422 <mem_init+0x1690>$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	89 f0                	mov    %esi,%eax$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	e8 e8 df ff ff       	call   f01013d8 <check_va2pa_large>$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	74 24                	je     f0103418 <mem_init+0x1686>$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	c7 44 24 0c 6c 80 10 	movl   $0xf010806c,0xc(%esp)$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	f0 $/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	f0 $/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	c7 44 24 04 f2 03 00 	movl   $0x3f2,0x4(%esp)$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	00 $/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	e8 28 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	72 c1                	jb     f01033e3 <mem_init+0x1651>$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	c7 04 24 d0 84 10 f0 	movl   $0xf01084d0,(%esp)$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	e8 e6 11 00 00       	call   f0104614 <cprintf>$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0103433	obj/kern/kernel.asm	/^f0103433:	eb 46                	jmp    f010347b <mem_init+0x16e9>$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	89 f0                	mov    %esi,%eax$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	e8 b8 df ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	74 24                	je     f010346f <mem_init+0x16dd>$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	c7 44 24 0c 98 80 10 	movl   $0xf0108098,0xc(%esp)$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	f0 $/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	f0 $/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	00 $/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	e8 d1 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	72 c1                	jb     f010343a <mem_init+0x16a8>$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	eb b3                	jmp    f010342e <mem_init+0x169c>$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	89 da                	mov    %ebx,%edx$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	89 f0                	mov    %esi,%eax$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	e8 7b df ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	74 24                	je     f01034ac <mem_init+0x171a>$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	c7 44 24 0c e7 84 10 	movl   $0xf01084e7,0xc(%esp)$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	f0 $/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	f0 $/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	00 $/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	e8 94 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	75 c1                	jne    f010347b <mem_init+0x16e9>$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	c7 45 cc 00 00 34 f0 	movl   $0xf0340000,-0x34(%ebp)$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	bf 00 00 bf ef       	mov    $0xefbf0000,%edi$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	8d 9f 00 80 00 00    	lea    0x8000(%edi),%ebx$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	89 d6                	mov    %edx,%esi$/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	8d 8f 00 00 01 00    	lea    0x10000(%edi),%ecx$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	89 da                	mov    %ebx,%edx$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	e8 0f df ff ff       	call   f01013ff <check_va2pa>$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	77 23                	ja     f010351c <mem_init+0x178a>$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	f0 $/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	00 $/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	e8 24 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	39 f0                	cmp    %esi,%eax$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	74 24                	je     f0103544 <mem_init+0x17b2>$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	c7 44 24 0c c0 80 10 	movl   $0xf01080c0,0xc(%esp)$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	f0 $/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	f0 $/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	00 $/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	e8 fc ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	0f 85 87 05 00 00    	jne    f0103ae0 <mem_init+0x1d4e>$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	89 f0                	mov    %esi,%eax$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	e8 94 de ff ff       	call   f01013ff <check_va2pa>$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	74 24                	je     f0103594 <mem_init+0x1802>$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	c7 44 24 0c 08 81 10 	movl   $0xf0108108,0xc(%esp)$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	f0 $/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	f0 $/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	00 $/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	e8 ac ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103594	obj/kern/kernel.asm	/^f0103594:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	75 bf                	jne    f0103561 <mem_init+0x17cf>$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	81 ef 00 00 01 00    	sub    $0x10000,%edi$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	81 45 cc 00 80 00 00 	addl   $0x8000,-0x34(%ebp)$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	81 ff 00 00 b7 ef    	cmp    $0xefb70000,%edi$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	0f 85 0e ff ff ff    	jne    f01034c9 <mem_init+0x1737>$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	77 2e                	ja     f01035fc <mem_init+0x186a>$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	0f 85 aa 00 00 00    	jne    f0103682 <mem_init+0x18f0>$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	c7 44 24 0c 02 85 10 	movl   $0xf0108502,0xc(%esp)$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	f0 $/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	f0 $/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	00 $/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	e8 44 ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	76 55                	jbe    f0103658 <mem_init+0x18c6>$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	75 24                	jne    f010362f <mem_init+0x189d>$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	c7 44 24 0c 02 85 10 	movl   $0xf0108502,0xc(%esp)$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	f0 $/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	f0 $/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	c7 44 24 04 18 04 00 	movl   $0x418,0x4(%esp)$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	00 $/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	e8 11 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010362f	obj/kern/kernel.asm	/^f010362f:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	75 4e                	jne    f0103682 <mem_init+0x18f0>$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	c7 44 24 0c 13 85 10 	movl   $0xf0108513,0xc(%esp)$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	f0 $/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	f0 $/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	00 $/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	e8 e8 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	74 24                	je     f0103682 <mem_init+0x18f0>$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	c7 44 24 0c 24 85 10 	movl   $0xf0108524,0xc(%esp)$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	f0 $/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	f0 $/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	00 $/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	e8 be c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	40                   	inc    %eax$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	0f 85 35 ff ff ff    	jne    f01035c3 <mem_init+0x1831>$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	c7 04 24 2c 81 10 f0 	movl   $0xf010812c,(%esp)$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	e8 7a 0f 00 00       	call   f0104614 <cprintf>$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	77 20                	ja     f01036c6 <mem_init+0x1934>$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	f0 $/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	00 $/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	e8 7a c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	e8 bd dd ff ff       	call   f0101495 <check_page_free_list>$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	e8 02 e2 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	89 c6                	mov    %eax,%esi$/;"	l
f01036f4	obj/kern/kernel.asm	/^f01036f4:	85 c0                	test   %eax,%eax$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	75 24                	jne    f010371c <mem_init+0x198a>$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	c7 44 24 0c 0f 83 10 	movl   $0xf010830f,0xc(%esp)$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	f0 $/;"	l
f0103700	obj/kern/kernel.asm	/^f0103700:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	f0 $/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	c7 44 24 04 47 05 00 	movl   $0x547,0x4(%esp)$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	00 $/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	e8 24 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	e8 cc e1 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	89 c7                	mov    %eax,%edi$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	85 c0                	test   %eax,%eax$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	75 24                	jne    f0103752 <mem_init+0x19c0>$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	c7 44 24 0c 25 83 10 	movl   $0xf0108325,0xc(%esp)$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	f0 $/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	f0 $/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	c7 44 24 04 48 05 00 	movl   $0x548,0x4(%esp)$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	00 $/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	e8 ee c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	e8 96 e1 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	89 c3                	mov    %eax,%ebx$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	85 c0                	test   %eax,%eax$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	75 24                	jne    f0103788 <mem_init+0x19f6>$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	c7 44 24 0c 3b 83 10 	movl   $0xf010833b,0xc(%esp)$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	f0 $/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	f0 $/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	c7 44 24 04 49 05 00 	movl   $0x549,0x4(%esp)$/;"	l
f010377b	obj/kern/kernel.asm	/^f010377b:	00 $/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	e8 b8 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	e8 88 e2 ff ff       	call   f0101a18 <page_free>$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	89 f8                	mov    %edi,%eax$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	89 c2                	mov    %eax,%edx$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	72 20                	jb     f01037cb <mem_init+0x1a39>$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	f0 $/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	00 $/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	e8 75 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	00 $/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	00 $/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	e8 08 2b 00 00       	call   f01062f0 <memset>$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	89 c2                	mov    %eax,%edx$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	72 20                	jb     f0103823 <mem_init+0x1a91>$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	f0 $/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	00 $/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	e8 1d c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	00 $/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	00 $/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	e8 b0 2a 00 00       	call   f01062f0 <memset>$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	00 $/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	00 $/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	e8 63 e4 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	74 24                	je     f010388c <mem_init+0x1afa>$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	c7 44 24 0c 0c 84 10 	movl   $0xf010840c,0xc(%esp)$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	f0 $/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	f0 $/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	c7 44 24 04 4e 05 00 	movl   $0x54e,0x4(%esp)$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	00 $/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	e8 b4 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	01 01 01 $/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	74 24                	je     f01038bc <mem_init+0x1b2a>$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	c7 44 24 0c 4c 81 10 	movl   $0xf010814c,0xc(%esp)$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	f0 $/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	f0 $/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	c7 44 24 04 4f 05 00 	movl   $0x54f,0x4(%esp)$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	00 $/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	e8 84 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	00 $/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	00 $/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	e8 e7 e3 ff ff       	call   f0101cc4 <page_insert>$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	02 02 02 $/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	74 24                	je     f010390d <mem_init+0x1b7b>$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	c7 44 24 0c 70 81 10 	movl   $0xf0108170,0xc(%esp)$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	f0 $/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	f0 $/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	c7 44 24 04 51 05 00 	movl   $0x551,0x4(%esp)$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	00 $/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	e8 33 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	74 24                	je     f0103938 <mem_init+0x1ba6>$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	c7 44 24 0c 2e 84 10 	movl   $0xf010842e,0xc(%esp)$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	f0 $/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	f0 $/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	c7 44 24 04 52 05 00 	movl   $0x552,0x4(%esp)$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	00 $/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	e8 08 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	74 24                	je     f0103963 <mem_init+0x1bd1>$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	c7 44 24 0c 77 84 10 	movl   $0xf0108477,0xc(%esp)$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	f0 $/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	f0 $/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	c7 44 24 04 53 05 00 	movl   $0x553,0x4(%esp)$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	00 $/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	e8 dd c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	03 03 03 $/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	89 d8                	mov    %ebx,%eax$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	2b 05 b0 ee 33 f0    	sub    0xf033eeb0,%eax$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	89 c2                	mov    %eax,%edx$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	3b 15 a8 ee 33 f0    	cmp    0xf033eea8,%edx$/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	72 20                	jb     f01039a8 <mem_init+0x1c16>$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	f0 $/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	00 $/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	e8 98 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	03 03 03 $/;"	l
f01039b2	obj/kern/kernel.asm	/^f01039b2:	74 24                	je     f01039d8 <mem_init+0x1c46>$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	c7 44 24 0c 94 81 10 	movl   $0xf0108194,0xc(%esp)$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	f0 $/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	f0 $/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	c7 44 24 04 55 05 00 	movl   $0x555,0x4(%esp)$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	00 $/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	e8 68 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	00 $/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	e8 87 e2 ff ff       	call   f0101c74 <page_remove>$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	74 24                	je     f0103a18 <mem_init+0x1c86>$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	c7 44 24 0c 66 84 10 	movl   $0xf0108466,0xc(%esp)$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	f0 $/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	f0 $/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	c7 44 24 04 57 05 00 	movl   $0x557,0x4(%esp)$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	00 $/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	e8 28 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	89 f2                	mov    %esi,%edx$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	74 24                	je     f0103a5b <mem_init+0x1cc9>$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	c7 44 24 0c f0 7c 10 	movl   $0xf0107cf0,0xc(%esp)$/;"	l
f0103a3e	obj/kern/kernel.asm	/^f0103a3e:	f0 $/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103a46	obj/kern/kernel.asm	/^f0103a46:	f0 $/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	c7 44 24 04 5a 05 00 	movl   $0x55a,0x4(%esp)$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	00 $/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	e8 e5 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	74 24                	je     f0103a8c <mem_init+0x1cfa>$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	c7 44 24 0c 1d 84 10 	movl   $0xf010841d,0xc(%esp)$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	f0 $/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	f0 $/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	c7 44 24 04 5c 05 00 	movl   $0x55c,0x4(%esp)$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	00 $/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	c7 04 24 21 82 10 f0 	movl   $0xf0108221,(%esp)$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	e8 b4 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	e8 7e df ff ff       	call   f0101a18 <page_free>$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	c7 04 24 c0 81 10 f0 	movl   $0xf01081c0,(%esp)$/;"	l
f0103aa1	obj/kern/kernel.asm	/^f0103aa1:	e8 6e 0b 00 00       	call   f0104614 <cprintf>$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	5b                   	pop    %ebx$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	5e                   	pop    %esi$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	5f                   	pop    %edi$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	5d                   	pop    %ebp$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	c3                   	ret    $/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	00 $/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	c7 04 24 00 00 34 00 	movl   $0x340000,(%esp)$/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	e8 7d e0 ff ff       	call   f0101b4e <boot_map_region>$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	bb 00 80 34 f0       	mov    $0xf0348000,%ebx$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	be 00 80 be ef       	mov    $0xefbe8000,%esi$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	e9 57 f7 ff ff       	jmp    f0103237 <mem_init+0x14a5>$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	89 da                	mov    %ebx,%edx$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	e8 15 d9 ff ff       	call   f01013ff <check_va2pa>$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	e9 2d fa ff ff       	jmp    f010351c <mem_init+0x178a>$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef <user_mem_check>:$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	55                   	push   %ebp$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	57                   	push   %edi$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	56                   	push   %esi$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	53                   	push   %ebx$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	89 d8                	mov    %ebx,%eax$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	48                   	dec    %eax$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	83 cf 05             	or     $0x5,%edi$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	77 67                	ja     f0103b78 <user_mem_check+0x89>$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	76 17                	jbe    f0103b30 <user_mem_check+0x41>$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	eb 08                	jmp    f0103b23 <user_mem_check+0x34>$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	76 0d                	jbe    f0103b30 <user_mem_check+0x41>$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	89 1d 68 e2 33 f0    	mov    %ebx,0xf033e268$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	eb 4d                	jmp    f0103b7d <user_mem_check+0x8e>$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	00 $/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	e8 17 df ff ff       	call   f0101a5e <pgdir_walk>$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	85 c0                	test   %eax,%eax$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	74 08                	je     f0103b53 <user_mem_check+0x64>$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	8b 00                	mov    (%eax),%eax$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	21 f8                	and    %edi,%eax$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	39 c7                	cmp    %eax,%edi$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	74 0d                	je     f0103b60 <user_mem_check+0x71>$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	89 1d 68 e2 33 f0    	mov    %ebx,0xf033e268$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	eb 1d                	jmp    f0103b7d <user_mem_check+0x8e>$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	73 aa                	jae    f0103b1b <user_mem_check+0x2c>$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	eb 05                	jmp    f0103b7d <user_mem_check+0x8e>$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	5b                   	pop    %ebx$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	5e                   	pop    %esi$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	5f                   	pop    %edi$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	5d                   	pop    %ebp$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	c3                   	ret    $/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85 <user_mem_assert>:$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	55                   	push   %ebp$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	53                   	push   %ebx$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	e8 40 ff ff ff       	call   f0103aef <user_mem_check>$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	85 c0                	test   %eax,%eax$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	79 24                	jns    f0103bd7 <user_mem_assert+0x52>$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	a1 68 e2 33 f0       	mov    0xf033e268,%eax$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	c7 04 24 ec 81 10 f0 	movl   $0xf01081ec,(%esp)$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	e8 45 0a 00 00       	call   f0104614 <cprintf>$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	e8 2f 07 00 00       	call   f0104306 <env_destroy>$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	5b                   	pop    %ebx$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	5d                   	pop    %ebp$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	c3                   	ret    $/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	00 00                	add    %al,(%eax)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0 <envid2env>:$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	55                   	push   %ebp$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	57                   	push   %edi$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	56                   	push   %esi$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	53                   	push   %ebx$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	85 c0                	test   %eax,%eax$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	75 21                	jne    f0103c14 <envid2env+0x34>$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	e8 94 2d 00 00       	call   f010698c <cpunum>$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	29 c2                	sub    %eax,%edx$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	89 06                	mov    %eax,(%esi)$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	eb 7d                	jmp    f0103c91 <envid2env+0xb1>$/;"	l
f0103c14	obj/kern/kernel.asm	/^f0103c14:	89 c3                	mov    %eax,%ebx$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	03 1d 6c e2 33 f0    	add    0xf033e26c,%ebx$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	74 05                	je     f0103c30 <envid2env+0x50>$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	74 0d                	je     f0103c3d <envid2env+0x5d>$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103c3b	obj/kern/kernel.asm	/^f0103c3b:	eb 54                	jmp    f0103c91 <envid2env+0xb1>$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	74 47                	je     f0103c8a <envid2env+0xaa>$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	e8 44 2d 00 00       	call   f010698c <cpunum>$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	29 c2                	sub    %eax,%edx$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	39 1c 85 28 f0 33 f0 	cmp    %ebx,-0xfcc0fd8(,%eax,4)$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	74 2d                	je     f0103c8a <envid2env+0xaa>$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	e8 27 2d 00 00       	call   f010698c <cpunum>$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	29 c2                	sub    %eax,%edx$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	74 0d                	je     f0103c8a <envid2env+0xaa>$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	eb 07                	jmp    f0103c91 <envid2env+0xb1>$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	5b                   	pop    %ebx$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	5e                   	pop    %esi$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	5f                   	pop    %edi$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	5d                   	pop    %ebp$/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	c3                   	ret    $/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99 <env_init_percpu>:$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	55                   	push   %ebp$/;"	l
f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	b8 00 a3 12 f0       	mov    $0xf012a300,%eax$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	8e e8                	mov    %eax,%gs$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	8e e0                	mov    %eax,%fs$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	b0 10                	mov    $0x10,%al$/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	8e c0                	mov    %eax,%es$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	8e d8                	mov    %eax,%ds$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	8e d0                	mov    %eax,%ss$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	ea bc 3c 10 f0 08 00 	ljmp   $0x8,$0xf0103cbc$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	b0 00                	mov    $0x0,%al$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	0f 00 d0             	lldt   %ax$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	5d                   	pop    %ebp$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	c3                   	ret    $/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3 <env_init>:$/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3:	55                   	push   %ebp$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	56                   	push   %esi$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	53                   	push   %ebx$/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	8b 35 6c e2 33 f0    	mov    0xf033e26c,%esi$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	8d 86 80 ff 01 00    	lea    0x1ff80(%esi),%eax$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	eb 02                	jmp    f0103ce2 <env_init+0x1f>$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	89 c3                	mov    %eax,%ebx$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	4a                   	dec    %edx$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	75 e2                	jne    f0103ce0 <env_init+0x1d>$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	89 35 70 e2 33 f0    	mov    %esi,0xf033e270$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	e8 90 ff ff ff       	call   f0103c99 <env_init_percpu>$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	5b                   	pop    %ebx$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	5e                   	pop    %esi$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	5d                   	pop    %ebp$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	c3                   	ret    $/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d <env_alloc>:$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	55                   	push   %ebp$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	53                   	push   %ebx$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	8b 1d 70 e2 33 f0    	mov    0xf033e270,%ebx$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	85 db                	test   %ebx,%ebx$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	0f 84 9f 01 00 00    	je     f0103ec1 <env_alloc+0x1b4>$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	e8 c6 db ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	85 c0                	test   %eax,%eax$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	0f 84 92 01 00 00    	je     f0103ec8 <env_alloc+0x1bb>$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	89 c2                	mov    %eax,%edx$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	2b 15 b0 ee 33 f0    	sub    0xf033eeb0,%edx$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	89 d1                	mov    %edx,%ecx$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	3b 0d a8 ee 33 f0    	cmp    0xf033eea8,%ecx$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	72 20                	jb     f0103d71 <env_alloc+0x64>$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	f0 $/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	00 $/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	e8 cf c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	8b 15 ac ee 33 f0    	mov    0xf033eeac,%edx$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	75 e7                	jne    f0103d83 <env_alloc+0x76>$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	77 20                	ja     f0103dc6 <env_alloc+0xb9>$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	f0 $/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	00 $/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	e8 7a c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	7f 05                	jg     f0103de9 <env_alloc+0xdc>$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	89 da                	mov    %ebx,%edx$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	2b 15 6c e2 33 f0    	sub    0xf033e26c,%edx$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	09 d0                	or     %edx,%eax$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	00 $/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	00 $/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	e8 c4 24 00 00       	call   f01062f0 <memset>$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f0103e59	obj/kern/kernel.asm	/^f0103e59:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	a3 70 e2 33 f0       	mov    %eax,0xf033e270$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	e8 1e 2b 00 00       	call   f010698c <cpunum>$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	29 c2                	sub    %eax,%edx$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	83 3c 85 28 f0 33 f0 	cmpl   $0x0,-0xfcc0fd8(,%eax,4)$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	00 $/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	74 1d                	je     f0103ea1 <env_alloc+0x194>$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	e8 03 2b 00 00       	call   f010698c <cpunum>$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	29 c2                	sub    %eax,%edx$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	eb 05                	jmp    f0103ea6 <env_alloc+0x199>$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	c7 04 24 c1 85 10 f0 	movl   $0xf01085c1,(%esp)$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	e8 5a 07 00 00       	call   f0104614 <cprintf>$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	eb 0c                	jmp    f0103ecd <env_alloc+0x1c0>$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	eb 05                	jmp    f0103ecd <env_alloc+0x1c0>$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	5b                   	pop    %ebx$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	5d                   	pop    %ebp$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	c3                   	ret    $/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3 <region_alloc>:$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	55                   	push   %ebp$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	57                   	push   %edi$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	56                   	push   %esi$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	53                   	push   %ebx$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	89 c2                	mov    %eax,%edx$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	89 d3                	mov    %edx,%ebx$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	89 c7                	mov    %eax,%edi$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	03 7d 10             	add    0x10(%ebp),%edi$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	81 c7 ff 0f 00 00    	add    $0xfff,%edi$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	39 fa                	cmp    %edi,%edx$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	73 51                	jae    f0103f55 <region_alloc+0x82>$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	e8 e4 d9 ff ff       	call   f01018f4 <page_alloc>$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	85 c0                	test   %eax,%eax$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	75 1c                	jne    f0103f30 <region_alloc+0x5d>$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	c7 44 24 08 34 85 10 	movl   $0xf0108534,0x8(%esp)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	f0 $/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	c7 44 24 04 38 01 00 	movl   $0x138,0x4(%esp)$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	00 $/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f0103f2b	obj/kern/kernel.asm	/^f0103f2b:	e8 10 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	00 $/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	e8 79 dd ff ff       	call   f0101cc4 <page_insert>$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	39 df                	cmp    %ebx,%edi$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	77 af                	ja     f0103f04 <region_alloc+0x31>$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	89 46 7c             	mov    %eax,0x7c(%esi)$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	5b                   	pop    %ebx$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	5e                   	pop    %esi$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	5f                   	pop    %edi$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	5d                   	pop    %ebp$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	c3                   	ret    $/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63 <env_create>:$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	55                   	push   %ebp$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	57                   	push   %edi$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	56                   	push   %esi$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	53                   	push   %ebx$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	00 $/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	e8 8e fd ff ff       	call   f0103d0d <env_alloc>$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	85 c0                	test   %eax,%eax$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	0f 85 53 01 00 00    	jne    f01040da <env_create+0x177>$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	74 1c                	je     f0103fb1 <env_create+0x4e>$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	c7 44 24 08 60 85 10 	movl   $0xf0108560,0x8(%esp)$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	f0 $/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	c7 44 24 04 77 01 00 	movl   $0x177,0x4(%esp)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	00 $/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	e8 8f c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	8b 5a 1c             	mov    0x1c(%edx),%ebx$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	8b 72 2c             	mov    0x2c(%edx),%esi$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	77 20                	ja     f0103fe4 <env_create+0x81>$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	f0 $/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	c7 44 24 04 7a 01 00 	movl   $0x17a,0x4(%esp)$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	00 $/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	e8 5c c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	81 e6 ff ff 00 00    	and    $0xffff,%esi$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	01 de                	add    %ebx,%esi$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	73 7e                	jae    f010407c <env_create+0x119>$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	75 72                	jne    f0104075 <env_create+0x112>$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	39 43 10             	cmp    %eax,0x10(%ebx)$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	76 1c                	jbe    f0104027 <env_create+0xc4>$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	c7 44 24 08 84 85 10 	movl   $0xf0108584,0x8(%esp)$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	f0 $/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	c7 44 24 04 7f 01 00 	movl   $0x17f,0x4(%esp)$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	00 $/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	e8 19 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	e8 99 fe ff ff       	call   f0103ed3 <region_alloc>$/;"	l
f010403a	obj/kern/kernel.asm	/^f010403a:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	e8 e4 22 00 00       	call   f010633a <memmove>$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	29 c2                	sub    %eax,%edx$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	00 $/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	e8 7b 22 00 00       	call   f01062f0 <memset>$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	39 de                	cmp    %ebx,%esi$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	77 82                	ja     f0103ffe <env_create+0x9b>$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	77 20                	ja     f01040a8 <env_create+0x145>$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	f0 $/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	c7 44 24 04 86 01 00 	movl   $0x186,0x4(%esp)$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	00 $/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	e8 98 bf ff ff       	call   f0100040 <_panic>$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	8b 42 18             	mov    0x18(%edx),%eax$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	00 $/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	c7 44 24 04 00 d0 bf 	movl   $0xeebfd000,0x4(%esp)$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	ee $/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	e8 02 fe ff ff       	call   f0103ed3 <region_alloc>$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	5b                   	pop    %ebx$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	5e                   	pop    %esi$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	5f                   	pop    %edi$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	5d                   	pop    %ebp$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	c3                   	ret    $/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2 <env_free>:$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	55                   	push   %ebp$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	57                   	push   %edi$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	56                   	push   %esi$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	53                   	push   %ebx$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	e8 99 28 00 00       	call   f010698c <cpunum>$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	29 c2                	sub    %eax,%edx$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	39 3c 85 28 f0 33 f0 	cmp    %edi,-0xfcc0fd8(,%eax,4)$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	75 34                	jne    f010413c <env_free+0x5a>$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	a1 ac ee 33 f0       	mov    0xf033eeac,%eax$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	77 20                	ja     f0104134 <env_free+0x52>$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	f0 $/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	c7 44 24 04 b2 01 00 	movl   $0x1b2,0x4(%esp)$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	00 $/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	e8 0c bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	e8 48 28 00 00       	call   f010698c <cpunum>$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	29 c2                	sub    %eax,%edx$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	83 3c 85 28 f0 33 f0 	cmpl   $0x0,-0xfcc0fd8(,%eax,4)$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	00 $/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	74 1d                	je     f0104177 <env_free+0x95>$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	e8 2d 28 00 00       	call   f010698c <cpunum>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	29 c2                	sub    %eax,%edx$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	eb 05                	jmp    f010417c <env_free+0x9a>$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	c7 04 24 d6 85 10 f0 	movl   $0xf01085d6,(%esp)$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	e8 84 04 00 00       	call   f0104614 <cprintf>$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	0f 84 b6 00 00 00    	je     f010426b <env_free+0x189>$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	89 f0                	mov    %esi,%eax$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	72 20                	jb     f01041eb <env_free+0x109>$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	f0 $/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	c7 44 24 04 c1 01 00 	movl   $0x1c1,0x4(%esp)$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	00 $/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	e8 55 be ff ff       	call   f0100040 <_panic>$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	01 $/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	74 17                	je     f010421a <env_free+0x138>$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	89 d8                	mov    %ebx,%eax$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	e8 5a da ff ff       	call   f0101c74 <page_remove>$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	43                   	inc    %ebx$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	75 d6                	jne    f01041f9 <env_free+0x117>$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	72 1c                	jb     f0104257 <env_free+0x175>$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	c7 44 24 08 bc 7b 10 	movl   $0xf0107bbc,0x8(%esp)$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	f0 $/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	00 $/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	e8 e9 bd ff ff       	call   f0100040 <_panic>$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	03 05 b0 ee 33 f0    	add    0xf033eeb0,%eax$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	e8 d3 d7 ff ff       	call   f0101a3e <page_decref>$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	0f 85 1c ff ff ff    	jne    f0104197 <env_free+0xb5>$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	77 20                	ja     f01042a5 <env_free+0x1c3>$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	f0 $/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	c7 44 24 04 cf 01 00 	movl   $0x1cf,0x4(%esp)$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	00 $/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	e8 9b bd ff ff       	call   f0100040 <_panic>$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	72 1c                	jb     f01042d8 <env_free+0x1f6>$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	c7 44 24 08 bc 7b 10 	movl   $0xf0107bbc,0x8(%esp)$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	f0 $/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	00 $/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	e8 68 bd ff ff       	call   f0100040 <_panic>$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	03 05 b0 ee 33 f0    	add    0xf033eeb0,%eax$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	e8 55 d7 ff ff       	call   f0101a3e <page_decref>$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	a1 70 e2 33 f0       	mov    0xf033e270,%eax$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	89 3d 70 e2 33 f0    	mov    %edi,0xf033e270$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	5b                   	pop    %ebx$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	5e                   	pop    %esi$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	5f                   	pop    %edi$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	5d                   	pop    %ebp$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	c3                   	ret    $/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306 <env_destroy>:$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	55                   	push   %ebp$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	89 e5                	mov    %esp,%ebp$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	53                   	push   %ebx$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	75 23                	jne    f0104339 <env_destroy+0x33>$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	e8 71 26 00 00       	call   f010698c <cpunum>$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	29 c2                	sub    %eax,%edx$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	39 1c 85 28 f0 33 f0 	cmp    %ebx,-0xfcc0fd8(,%eax,4)$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	74 09                	je     f0104339 <env_destroy+0x33>$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	eb 39                	jmp    f0104372 <env_destroy+0x6c>$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	e8 a1 fd ff ff       	call   f01040e2 <env_free>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	e8 46 26 00 00       	call   f010698c <cpunum>$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	29 c2                	sub    %eax,%edx$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	39 1c 85 28 f0 33 f0 	cmp    %ebx,-0xfcc0fd8(,%eax,4)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	75 17                	jne    f0104372 <env_destroy+0x6c>$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	e8 2c 26 00 00       	call   f010698c <cpunum>$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	c7 80 28 f0 33 f0 00 	movl   $0x0,-0xfcc0fd8(%eax)$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	00 00 00 $/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	e8 16 0c 00 00       	call   f0104f88 <sched_yield>$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	5b                   	pop    %ebx$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	5d                   	pop    %ebp$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	c3                   	ret    $/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378 <env_pop_tf>:$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	55                   	push   %ebp$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	89 e5                	mov    %esp,%ebp$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	53                   	push   %ebx$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	e8 08 26 00 00       	call   f010698c <cpunum>$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	29 c2                	sub    %eax,%edx$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	8b 1c 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%ebx$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	e8 f0 25 00 00       	call   f010698c <cpunum>$/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	61                   	popa   $/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	07                   	pop    %es$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	1f                   	pop    %ds$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	83 c4 08             	add    $0x8,%esp$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	cf                   	iret   $/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	c7 44 24 08 ec 85 10 	movl   $0xf01085ec,0x8(%esp)$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	f0 $/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	c7 44 24 04 05 02 00 	movl   $0x205,0x4(%esp)$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	00 $/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	e8 7b bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5 <env_run>:$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	55                   	push   %ebp$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	53                   	push   %ebx$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	e8 b8 25 00 00       	call   f010698c <cpunum>$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	29 c2                	sub    %eax,%edx$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	83 3c 85 28 f0 33 f0 	cmpl   $0x0,-0xfcc0fd8(,%eax,4)$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	00 $/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	74 33                	je     f010441d <env_run+0x58>$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	e8 9d 25 00 00       	call   f010698c <cpunum>$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	29 c2                	sub    %eax,%edx$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01043fb	obj/kern/kernel.asm	/^f01043fb:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	75 15                	jne    f010441d <env_run+0x58>$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	e8 7f 25 00 00       	call   f010698c <cpunum>$/;"	l
f010440d	obj/kern/kernel.asm	/^f010440d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	e8 6a 25 00 00       	call   f010698c <cpunum>$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	29 c2                	sub    %eax,%edx$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	89 1c 85 28 f0 33 f0 	mov    %ebx,-0xfcc0fd8(,%eax,4)$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	e8 52 25 00 00       	call   f010698c <cpunum>$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	29 c2                	sub    %eax,%edx$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	e8 33 25 00 00       	call   f010698c <cpunum>$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	29 c2                	sub    %eax,%edx$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	ff 40 58             	incl   0x58(%eax)$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	77 20                	ja     f0104499 <env_run+0xd4>$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	f0 $/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	c7 44 24 04 2b 02 00 	movl   $0x22b,0x4(%esp)$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	00 $/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	c7 04 24 b6 85 10 f0 	movl   $0xf01085b6,(%esp)$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	e8 a7 bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01044a1	obj/kern/kernel.asm	/^f01044a1:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	e8 5f 28 00 00       	call   f0106d0c <spin_unlock>$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	f3 90                	pause  $/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	e8 c1 fe ff ff       	call   f0104378 <env_pop_tf>$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8 <mc146818_read>:$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	55                   	push   %ebp$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	ee                   	out    %al,(%dx)$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	b2 71                	mov    $0x71,%dl$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	ec                   	in     (%dx),%al$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	5d                   	pop    %ebp$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	c3                   	ret    $/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce <mc146818_write>:$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	55                   	push   %ebp$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	ee                   	out    %al,(%dx)$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	b2 71                	mov    $0x71,%dl$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	ee                   	out    %al,(%dx)$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	5d                   	pop    %ebp$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	c3                   	ret    $/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4 <irq_setmask_8259A>:$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	55                   	push   %ebp$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	56                   	push   %esi$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	53                   	push   %ebx$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	89 c6                	mov    %eax,%esi$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	66 a3 88 a3 12 f0    	mov    %ax,0xf012a388$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	83 3d 74 e2 33 f0 00 	cmpl   $0x0,0xf033e274$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	74 54                	je     f0104554 <irq_setmask_8259A+0x70>$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	ee                   	out    %al,(%dx)$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	89 f0                	mov    %esi,%eax$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	ee                   	out    %al,(%dx)$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	c7 04 24 f8 85 10 f0 	movl   $0xf01085f8,(%esp)$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516:	e8 f9 00 00 00       	call   f0104614 <cprintf>$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	81 e6 ff ff 00 00    	and    $0xffff,%esi$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	f7 d6                	not    %esi$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	89 f0                	mov    %esi,%eax$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	88 d9                	mov    %bl,%cl$/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	d3 f8                	sar    %cl,%eax$/;"	d
f010452e	obj/kern/kernel.asm	/^f010452e:	a8 01                	test   $0x1,%al$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	74 10                	je     f0104542 <irq_setmask_8259A+0x5e>$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	c7 04 24 0f 8b 10 f0 	movl   $0xf0108b0f,(%esp)$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	e8 d2 00 00 00       	call   f0104614 <cprintf>$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	43                   	inc    %ebx$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	75 e0                	jne    f0104528 <irq_setmask_8259A+0x44>$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	c7 04 24 ce 84 10 f0 	movl   $0xf01084ce,(%esp)$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	e8 c0 00 00 00       	call   f0104614 <cprintf>$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	5b                   	pop    %ebx$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	5e                   	pop    %esi$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	5d                   	pop    %ebp$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	c3                   	ret    $/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b <pic_init>:$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	55                   	push   %ebp$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	89 e5                	mov    %esp,%ebp$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	c7 05 74 e2 33 f0 01 	movl   $0x1,0xf033e274$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	00 00 00 $/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	b0 ff                	mov    $0xff,%al$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	ee                   	out    %al,(%dx)$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	ee                   	out    %al,(%dx)$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	b2 20                	mov    $0x20,%dl$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	b0 11                	mov    $0x11,%al$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	ee                   	out    %al,(%dx)$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	b2 21                	mov    $0x21,%dl$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	b0 20                	mov    $0x20,%al$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	ee                   	out    %al,(%dx)$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	b0 04                	mov    $0x4,%al$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	ee                   	out    %al,(%dx)$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	b0 03                	mov    $0x3,%al$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	ee                   	out    %al,(%dx)$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104588	obj/kern/kernel.asm	/^f0104588:	b0 11                	mov    $0x11,%al$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	ee                   	out    %al,(%dx)$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	b0 28                	mov    $0x28,%al$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	ee                   	out    %al,(%dx)$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	b0 02                	mov    $0x2,%al$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	ee                   	out    %al,(%dx)$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	b0 01                	mov    $0x1,%al$/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	ee                   	out    %al,(%dx)$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	b2 20                	mov    $0x20,%dl$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	b0 68                	mov    $0x68,%al$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	ee                   	out    %al,(%dx)$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	b0 0a                	mov    $0xa,%al$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	ee                   	out    %al,(%dx)$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	b0 68                	mov    $0x68,%al$/;"	l
f01045a2	obj/kern/kernel.asm	/^f01045a2:	ee                   	out    %al,(%dx)$/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	b0 0a                	mov    $0xa,%al$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	ee                   	out    %al,(%dx)$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	66 a1 88 a3 12 f0    	mov    0xf012a388,%ax$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	74 0d                	je     f01045bf <pic_init+0x64>$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	e8 25 ff ff ff       	call   f01044e4 <irq_setmask_8259A>$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	c9                   	leave  $/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	c3                   	ret    $/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	00 00                	add    %al,(%eax)$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4 <putch>:$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	55                   	push   %ebp$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	53                   	push   %ebx$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	e8 5b c3 ff ff       	call   f0100934 <cputchar>$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	ff 03                	incl   (%ebx)$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	83 c4 14             	add    $0x14,%esp$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	5b                   	pop    %ebx$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	5d                   	pop    %ebp$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	c3                   	ret    $/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1 <vcprintf>:$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	55                   	push   %ebp$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	c7 04 24 c4 45 10 f0 	movl   $0xf01045c4,(%esp)$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	e8 f2 14 00 00       	call   f0105b01 <vprintfmt>$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	c9                   	leave  $/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	c3                   	ret    $/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614 <cprintf>:$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	55                   	push   %ebp$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	89 e5                	mov    %esp,%ebp$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	e8 b5 ff ff ff       	call   f01045e1 <vcprintf>$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	c9                   	leave  $/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	c3                   	ret    $/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630 <trap_init_percpu>:$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	55                   	push   %ebp$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	89 e5                	mov    %esp,%ebp$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	57                   	push   %edi$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	56                   	push   %esi$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	53                   	push   %ebx$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	e8 4e 23 00 00       	call   f010698c <cpunum>$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	29 c2                	sub    %eax,%edx$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	8d 34 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%esi$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	8d 7e 0c             	lea    0xc(%esi),%edi$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	e8 33 23 00 00       	call   f010698c <cpunum>$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	29 c2                	sub    %eax,%edx$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	31 db                	xor    %ebx,%ebx$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	8a 1c 85 20 f0 33 f0 	mov    -0xfcc0fe0(,%eax,4),%bl$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	0f 30                	wrmsr  $/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	89 d8                	mov    %ebx,%eax$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	f7 d8                	neg    %eax$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	2d 00 00 40 10       	sub    $0x10400000,%eax$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	b1 75                	mov    $0x75,%cl$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	0f 30                	wrmsr  $/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	b8 52 4f 10 f0       	mov    $0xf0104f52,%eax$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	b1 76                	mov    $0x76,%cl$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	0f 30                	wrmsr  $/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	66 c7 46 14 10 00    	movw   $0x10,0x14(%esi)$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	8d 43 05             	lea    0x5(%ebx),%eax$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	66 c7 04 c5 20 a3 12 	movw   $0x68,-0xfed5ce0(,%eax,8)$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	f0 68 00 $/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	66 89 3c c5 22 a3 12 	mov    %di,-0xfed5cde(,%eax,8)$/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	f0 $/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	89 fa                	mov    %edi,%edx$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	88 14 c5 24 a3 12 f0 	mov    %dl,-0xfed5cdc(,%eax,8)$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	c6 04 c5 26 a3 12 f0 	movb   $0x40,-0xfed5cda(,%eax,8)$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	40 $/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	89 fa                	mov    %edi,%edx$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	88 14 c5 27 a3 12 f0 	mov    %dl,-0xfed5cd9(,%eax,8)$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	c6 04 c5 25 a3 12 f0 	movb   $0x89,-0xfed5cdb(,%eax,8)$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	89 $/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	8d 1c dd 28 00 00 00 	lea    0x28(,%ebx,8),%ebx$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	0f 00 db             	ltr    %bx$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	b8 8c a3 12 f0       	mov    $0xf012a38c,%eax$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	0f 01 18             	lidtl  (%eax)$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	5b                   	pop    %ebx$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	5e                   	pop    %esi$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	5f                   	pop    %edi$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	5d                   	pop    %ebp$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	c3                   	ret    $/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8 <trap_init>:$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	55                   	push   %ebp$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	b8 f4 4e 10 f0       	mov    $0xf0104ef4,%eax$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	66 a3 80 e2 33 f0    	mov    %ax,0xf033e280$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	66 c7 05 82 e2 33 f0 	movw   $0x8,0xf033e282$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	08 00 $/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	c6 05 84 e2 33 f0 00 	movb   $0x0,0xf033e284$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	c6 05 85 e2 33 f0 8e 	movb   $0x8e,0xf033e285$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	66 a3 86 e2 33 f0    	mov    %ax,0xf033e286$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	b8 fa 4e 10 f0       	mov    $0xf0104efa,%eax$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	66 a3 88 e2 33 f0    	mov    %ax,0xf033e288$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	66 c7 05 8a e2 33 f0 	movw   $0x8,0xf033e28a$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	08 00 $/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	c6 05 8c e2 33 f0 00 	movb   $0x0,0xf033e28c$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	c6 05 8d e2 33 f0 8e 	movb   $0x8e,0xf033e28d$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	66 a3 8e e2 33 f0    	mov    %ax,0xf033e28e$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	b8 00 4f 10 f0       	mov    $0xf0104f00,%eax$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	66 a3 90 e2 33 f0    	mov    %ax,0xf033e290$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	66 c7 05 92 e2 33 f0 	movw   $0x8,0xf033e292$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	08 00 $/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	c6 05 94 e2 33 f0 00 	movb   $0x0,0xf033e294$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	c6 05 95 e2 33 f0 8e 	movb   $0x8e,0xf033e295$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	66 a3 96 e2 33 f0    	mov    %ax,0xf033e296$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	b8 06 4f 10 f0       	mov    $0xf0104f06,%eax$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	66 a3 98 e2 33 f0    	mov    %ax,0xf033e298$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	66 c7 05 9a e2 33 f0 	movw   $0x8,0xf033e29a$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	08 00 $/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	c6 05 9c e2 33 f0 00 	movb   $0x0,0xf033e29c$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	c6 05 9d e2 33 f0 ee 	movb   $0xee,0xf033e29d$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	66 a3 9e e2 33 f0    	mov    %ax,0xf033e29e$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	b8 0c 4f 10 f0       	mov    $0xf0104f0c,%eax$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	66 a3 a0 e2 33 f0    	mov    %ax,0xf033e2a0$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	66 c7 05 a2 e2 33 f0 	movw   $0x8,0xf033e2a2$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	08 00 $/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	c6 05 a4 e2 33 f0 00 	movb   $0x0,0xf033e2a4$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	c6 05 a5 e2 33 f0 8e 	movb   $0x8e,0xf033e2a5$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	66 a3 a6 e2 33 f0    	mov    %ax,0xf033e2a6$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	b8 12 4f 10 f0       	mov    $0xf0104f12,%eax$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	66 a3 a8 e2 33 f0    	mov    %ax,0xf033e2a8$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	66 c7 05 aa e2 33 f0 	movw   $0x8,0xf033e2aa$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	08 00 $/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	c6 05 ac e2 33 f0 00 	movb   $0x0,0xf033e2ac$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	c6 05 ad e2 33 f0 8e 	movb   $0x8e,0xf033e2ad$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	66 a3 ae e2 33 f0    	mov    %ax,0xf033e2ae$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	b8 18 4f 10 f0       	mov    $0xf0104f18,%eax$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	66 a3 b0 e2 33 f0    	mov    %ax,0xf033e2b0$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	66 c7 05 b2 e2 33 f0 	movw   $0x8,0xf033e2b2$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	08 00 $/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	c6 05 b4 e2 33 f0 00 	movb   $0x0,0xf033e2b4$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	c6 05 b5 e2 33 f0 8e 	movb   $0x8e,0xf033e2b5$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	66 a3 b6 e2 33 f0    	mov    %ax,0xf033e2b6$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	b8 1e 4f 10 f0       	mov    $0xf0104f1e,%eax$/;"	l
f0104830	obj/kern/kernel.asm	/^f0104830:	66 a3 b8 e2 33 f0    	mov    %ax,0xf033e2b8$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	66 c7 05 ba e2 33 f0 	movw   $0x8,0xf033e2ba$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	08 00 $/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	c6 05 bc e2 33 f0 00 	movb   $0x0,0xf033e2bc$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	c6 05 bd e2 33 f0 8e 	movb   $0x8e,0xf033e2bd$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104850	obj/kern/kernel.asm	/^f0104850:	66 a3 be e2 33 f0    	mov    %ax,0xf033e2be$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	b8 24 4f 10 f0       	mov    $0xf0104f24,%eax$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	66 a3 c0 e2 33 f0    	mov    %ax,0xf033e2c0$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	66 c7 05 c2 e2 33 f0 	movw   $0x8,0xf033e2c2$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	08 00 $/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	c6 05 c4 e2 33 f0 00 	movb   $0x0,0xf033e2c4$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	c6 05 c5 e2 33 f0 8e 	movb   $0x8e,0xf033e2c5$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	66 a3 c6 e2 33 f0    	mov    %ax,0xf033e2c6$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	b8 28 4f 10 f0       	mov    $0xf0104f28,%eax$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	66 a3 d0 e2 33 f0    	mov    %ax,0xf033e2d0$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	66 c7 05 d2 e2 33 f0 	movw   $0x8,0xf033e2d2$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	08 00 $/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	c6 05 d4 e2 33 f0 00 	movb   $0x0,0xf033e2d4$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	c6 05 d5 e2 33 f0 8e 	movb   $0x8e,0xf033e2d5$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	66 a3 d6 e2 33 f0    	mov    %ax,0xf033e2d6$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	b8 2c 4f 10 f0       	mov    $0xf0104f2c,%eax$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	66 a3 d8 e2 33 f0    	mov    %ax,0xf033e2d8$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	66 c7 05 da e2 33 f0 	movw   $0x8,0xf033e2da$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	08 00 $/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	c6 05 dc e2 33 f0 00 	movb   $0x0,0xf033e2dc$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	c6 05 dd e2 33 f0 8e 	movb   $0x8e,0xf033e2dd$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	66 a3 de e2 33 f0    	mov    %ax,0xf033e2de$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	b8 30 4f 10 f0       	mov    $0xf0104f30,%eax$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	66 a3 e0 e2 33 f0    	mov    %ax,0xf033e2e0$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	66 c7 05 e2 e2 33 f0 	movw   $0x8,0xf033e2e2$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	08 00 $/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	c6 05 e4 e2 33 f0 00 	movb   $0x0,0xf033e2e4$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	c6 05 e5 e2 33 f0 8e 	movb   $0x8e,0xf033e2e5$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	66 a3 e6 e2 33 f0    	mov    %ax,0xf033e2e6$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	b8 34 4f 10 f0       	mov    $0xf0104f34,%eax$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	66 a3 e8 e2 33 f0    	mov    %ax,0xf033e2e8$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	66 c7 05 ea e2 33 f0 	movw   $0x8,0xf033e2ea$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	08 00 $/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	c6 05 ec e2 33 f0 00 	movb   $0x0,0xf033e2ec$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	c6 05 ed e2 33 f0 8e 	movb   $0x8e,0xf033e2ed$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	66 a3 ee e2 33 f0    	mov    %ax,0xf033e2ee$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	b8 38 4f 10 f0       	mov    $0xf0104f38,%eax$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	66 a3 f0 e2 33 f0    	mov    %ax,0xf033e2f0$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	66 c7 05 f2 e2 33 f0 	movw   $0x8,0xf033e2f2$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	08 00 $/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	c6 05 f4 e2 33 f0 00 	movb   $0x0,0xf033e2f4$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	c6 05 f5 e2 33 f0 8e 	movb   $0x8e,0xf033e2f5$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	66 a3 f6 e2 33 f0    	mov    %ax,0xf033e2f6$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	b8 3c 4f 10 f0       	mov    $0xf0104f3c,%eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	66 a3 00 e3 33 f0    	mov    %ax,0xf033e300$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	66 c7 05 02 e3 33 f0 	movw   $0x8,0xf033e302$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	08 00 $/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	c6 05 04 e3 33 f0 00 	movb   $0x0,0xf033e304$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	c6 05 05 e3 33 f0 8e 	movb   $0x8e,0xf033e305$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	66 a3 06 e3 33 f0    	mov    %ax,0xf033e306$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	b8 42 4f 10 f0       	mov    $0xf0104f42,%eax$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	66 a3 08 e3 33 f0    	mov    %ax,0xf033e308$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	66 c7 05 0a e3 33 f0 	movw   $0x8,0xf033e30a$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	08 00 $/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	c6 05 0c e3 33 f0 00 	movb   $0x0,0xf033e30c$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	c6 05 0d e3 33 f0 8e 	movb   $0x8e,0xf033e30d$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	66 a3 0e e3 33 f0    	mov    %ax,0xf033e30e$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	b8 46 4f 10 f0       	mov    $0xf0104f46,%eax$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	66 a3 10 e3 33 f0    	mov    %ax,0xf033e310$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	66 c7 05 12 e3 33 f0 	movw   $0x8,0xf033e312$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	08 00 $/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	c6 05 14 e3 33 f0 00 	movb   $0x0,0xf033e314$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	c6 05 15 e3 33 f0 8e 	movb   $0x8e,0xf033e315$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	66 a3 16 e3 33 f0    	mov    %ax,0xf033e316$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	b8 4c 4f 10 f0       	mov    $0xf0104f4c,%eax$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	66 a3 18 e3 33 f0    	mov    %ax,0xf033e318$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	66 c7 05 1a e3 33 f0 	movw   $0x8,0xf033e31a$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	08 00 $/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	c6 05 1c e3 33 f0 00 	movb   $0x0,0xf033e31c$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	c6 05 1d e3 33 f0 8e 	movb   $0x8e,0xf033e31d$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	66 a3 1e e3 33 f0    	mov    %ax,0xf033e31e$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	0f 30                	wrmsr  $/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	b8 00 00 c0 ef       	mov    $0xefc00000,%eax$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	b1 75                	mov    $0x75,%cl$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	0f 30                	wrmsr  $/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	b8 52 4f 10 f0       	mov    $0xf0104f52,%eax$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	b1 76                	mov    $0x76,%cl$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	0f 30                	wrmsr  $/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	e8 04 fc ff ff       	call   f0104630 <trap_init_percpu>$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	c9                   	leave  $/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	c3                   	ret    $/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e <print_regs>:$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	55                   	push   %ebp$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	53                   	push   %ebx$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	c7 04 24 0c 86 10 f0 	movl   $0xf010860c,(%esp)$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	e8 ca fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	c7 04 24 1b 86 10 f0 	movl   $0xf010861b,(%esp)$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	e8 b7 fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	c7 04 24 2a 86 10 f0 	movl   $0xf010862a,(%esp)$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	e8 a4 fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	c7 04 24 39 86 10 f0 	movl   $0xf0108639,(%esp)$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	e8 91 fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	c7 04 24 48 86 10 f0 	movl   $0xf0108648,(%esp)$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	e8 7e fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	c7 04 24 57 86 10 f0 	movl   $0xf0108657,(%esp)$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	e8 6b fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	c7 04 24 66 86 10 f0 	movl   $0xf0108666,(%esp)$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	e8 58 fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	c7 04 24 75 86 10 f0 	movl   $0xf0108675,(%esp)$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	e8 45 fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	5b                   	pop    %ebx$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	5d                   	pop    %ebp$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	c3                   	ret    $/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5 <print_trapframe>:$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	55                   	push   %ebp$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	53                   	push   %ebx$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	e8 a8 1e 00 00       	call   f010698c <cpunum>$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	c7 04 24 d9 86 10 f0 	movl   $0xf01086d9,(%esp)$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	e8 1c fb ff ff       	call   f0104614 <cprintf>$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	e8 2e ff ff ff       	call   f0104a2e <print_regs>$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	66 8b 43 20          	mov    0x20(%ebx),%ax$/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	c7 04 24 f7 86 10 f0 	movl   $0xf01086f7,(%esp)$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	e8 fb fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	66 8b 43 24          	mov    0x24(%ebx),%ax$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	c7 04 24 0a 87 10 f0 	movl   $0xf010870a,(%esp)$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	e8 e2 fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	77 09                	ja     f0104b43 <print_trapframe+0x6e>$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	8b 14 85 a0 89 10 f0 	mov    -0xfef7660(,%eax,4),%edx$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	eb 20                	jmp    f0104b63 <print_trapframe+0x8e>$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	74 0f                	je     f0104b57 <print_trapframe+0x82>$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	77 0e                	ja     f0104b5e <print_trapframe+0x89>$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	ba 90 86 10 f0       	mov    $0xf0108690,%edx$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	eb 0c                	jmp    f0104b63 <print_trapframe+0x8e>$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	ba 84 86 10 f0       	mov    $0xf0108684,%edx$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	eb 05                	jmp    f0104b63 <print_trapframe+0x8e>$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	ba a3 86 10 f0       	mov    $0xf01086a3,%edx$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	c7 04 24 1d 87 10 f0 	movl   $0xf010871d,(%esp)$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	e8 9d fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	3b 1d 80 ea 33 f0    	cmp    0xf033ea80,%ebx$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	75 19                	jne    f0104b98 <print_trapframe+0xc3>$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	75 13                	jne    f0104b98 <print_trapframe+0xc3>$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	c7 04 24 2f 87 10 f0 	movl   $0xf010872f,(%esp)$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	e8 7c fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	c7 04 24 3e 87 10 f0 	movl   $0xf010873e,(%esp)$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	e8 69 fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	75 4d                	jne    f0104bfe <print_trapframe+0x129>$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	a8 01                	test   $0x1,%al$/;"	l
f0104bb6	obj/kern/kernel.asm	/^f0104bb6:	74 07                	je     f0104bbf <print_trapframe+0xea>$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	b9 b2 86 10 f0       	mov    $0xf01086b2,%ecx$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	eb 05                	jmp    f0104bc4 <print_trapframe+0xef>$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	b9 bd 86 10 f0       	mov    $0xf01086bd,%ecx$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	a8 02                	test   $0x2,%al$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	74 07                	je     f0104bcf <print_trapframe+0xfa>$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	ba c9 86 10 f0       	mov    $0xf01086c9,%edx$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	eb 05                	jmp    f0104bd4 <print_trapframe+0xff>$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	ba cf 86 10 f0       	mov    $0xf01086cf,%edx$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	a8 04                	test   $0x4,%al$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	74 07                	je     f0104bdf <print_trapframe+0x10a>$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	b8 d4 86 10 f0       	mov    $0xf01086d4,%eax$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	eb 05                	jmp    f0104be4 <print_trapframe+0x10f>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	b8 22 88 10 f0       	mov    $0xf0108822,%eax$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	c7 04 24 4c 87 10 f0 	movl   $0xf010874c,(%esp)$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	e8 18 fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	eb 0c                	jmp    f0104c0a <print_trapframe+0x135>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	c7 04 24 ce 84 10 f0 	movl   $0xf01084ce,(%esp)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	e8 0a fa ff ff       	call   f0104614 <cprintf>$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	c7 04 24 5b 87 10 f0 	movl   $0xf010875b,(%esp)$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	e8 f7 f9 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	66 8b 43 34          	mov    0x34(%ebx),%ax$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	c7 04 24 6a 87 10 f0 	movl   $0xf010876a,(%esp)$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	e8 de f9 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	c7 04 24 7d 87 10 f0 	movl   $0xf010877d,(%esp)$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	e8 cb f9 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	74 2c                	je     f0104c7b <print_trapframe+0x1a6>$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	c7 04 24 8c 87 10 f0 	movl   $0xf010878c,(%esp)$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	e8 b2 f9 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	66 8b 43 40          	mov    0x40(%ebx),%ax$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	c7 04 24 9b 87 10 f0 	movl   $0xf010879b,(%esp)$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	e8 99 f9 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	5b                   	pop    %ebx$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	5d                   	pop    %ebp$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	c3                   	ret    $/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81 <page_fault_handler>:$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	55                   	push   %ebp$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	57                   	push   %edi$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	56                   	push   %esi$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	53                   	push   %ebx$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	75 1c                	jne    f0104cb2 <page_fault_handler+0x31>$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	c7 44 24 08 ae 87 10 	movl   $0xf01087ae,0x8(%esp)$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	f0 $/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	c7 44 24 04 56 01 00 	movl   $0x156,0x4(%esp)$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	00 $/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	c7 04 24 c7 87 10 f0 	movl   $0xf01087c7,(%esp)$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	e8 8e b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	8b 7e 30             	mov    0x30(%esi),%edi$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	e8 d2 1c 00 00       	call   f010698c <cpunum>$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	29 c2                	sub    %eax,%edx$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	c7 04 24 6c 89 10 f0 	movl   $0xf010896c,(%esp)$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	e8 2c f9 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	e8 e5 fd ff ff       	call   f0104ad5 <print_trapframe>$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	e8 97 1c 00 00       	call   f010698c <cpunum>$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	29 c2                	sub    %eax,%edx$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	e8 f6 f5 ff ff       	call   f0104306 <env_destroy>$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	5b                   	pop    %ebx$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	5e                   	pop    %esi$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	5f                   	pop    %edi$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	5d                   	pop    %ebp$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	c3                   	ret    $/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18 <trap>:$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	55                   	push   %ebp$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	57                   	push   %edi$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	56                   	push   %esi$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	fc                   	cld    $/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	83 3d a0 ee 33 f0 00 	cmpl   $0x0,0xf033eea0$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	74 01                	je     f0104d2e <trap+0x16>$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	f4                   	hlt    $/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	9c                   	pushf  $/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	58                   	pop    %eax$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	74 24                	je     f0104d59 <trap+0x41>$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	c7 44 24 0c d3 87 10 	movl   $0xf01087d3,0xc(%esp)$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	f0 $/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	f0 $/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	00 $/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	c7 04 24 c7 87 10 f0 	movl   $0xf01087c7,(%esp)$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	e8 e7 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	66 8b 46 34          	mov    0x34(%esi),%ax$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	0f 85 a7 00 00 00    	jne    f0104e10 <trap+0xf8>$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	e8 c0 1e 00 00       	call   f0106c35 <spin_lock>$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	e8 12 1c 00 00       	call   f010698c <cpunum>$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	83 b8 28 f0 33 f0 00 	cmpl   $0x0,-0xfcc0fd8(%eax)$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	75 24                	jne    f0104daa <trap+0x92>$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	c7 44 24 0c ec 87 10 	movl   $0xf01087ec,0xc(%esp)$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	f0 $/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	c7 44 24 08 47 82 10 	movl   $0xf0108247,0x8(%esp)$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	f0 $/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	00 $/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	c7 04 24 c7 87 10 f0 	movl   $0xf01087c7,(%esp)$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	e8 96 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	e8 dd 1b 00 00       	call   f010698c <cpunum>$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	75 2d                	jne    f0104deb <trap+0xd3>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	e8 c9 1b 00 00       	call   f010698c <cpunum>$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	e8 0e f3 ff ff       	call   f01040e2 <env_free>$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	e8 b3 1b 00 00       	call   f010698c <cpunum>$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	c7 80 28 f0 33 f0 00 	movl   $0x0,-0xfcc0fd8(%eax)$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	00 00 00 $/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	e8 9d 01 00 00       	call   f0104f88 <sched_yield>$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	e8 9c 1b 00 00       	call   f010698c <cpunum>$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	89 c7                	mov    %eax,%edi$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	e8 85 1b 00 00       	call   f010698c <cpunum>$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	8b b0 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%esi$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	89 35 80 ea 33 f0    	mov    %esi,0xf033ea80$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	74 18                	je     f0104e36 <trap+0x11e>$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	77 07                	ja     f0104e2a <trap+0x112>$/;"	l
f0104e23	obj/kern/kernel.asm	/^f0104e23:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	75 2c                	jne    f0104e54 <trap+0x13c>$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	eb 0c                	jmp    f0104e36 <trap+0x11e>$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	74 11                	je     f0104e40 <trap+0x128>$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	75 20                	jne    f0104e54 <trap+0x13c>$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	eb 14                	jmp    f0104e4a <trap+0x132>$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	e8 1c c4 ff ff       	call   f010125a <monitor>$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	eb 14                	jmp    f0104e54 <trap+0x13c>$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	e8 39 fe ff ff       	call   f0104c81 <page_fault_handler>$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	eb 0a                	jmp    f0104e54 <trap+0x13c>$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	e8 7c 1c 00 00       	call   f0106acb <lapic_eoi>$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	e8 34 01 00 00       	call   f0104f88 <sched_yield>$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	83 7e 28 27          	cmpl   $0x27,0x28(%esi)$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	75 16                	jne    f0104e70 <trap+0x158>$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	c7 04 24 f3 87 10 f0 	movl   $0xf01087f3,(%esp)$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	e8 ae f7 ff ff       	call   f0104614 <cprintf>$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	e8 67 fc ff ff       	call   f0104ad5 <print_trapframe>$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	eb 41                	jmp    f0104eb1 <trap+0x199>$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	e8 5d fc ff ff       	call   f0104ad5 <print_trapframe>$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	75 1c                	jne    f0104e9b <trap+0x183>$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	c7 44 24 08 10 88 10 	movl   $0xf0108810,0x8(%esp)$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	f0 $/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	00 $/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	c7 04 24 c7 87 10 f0 	movl   $0xf01087c7,(%esp)$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	e8 a5 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	e8 ec 1a 00 00       	call   f010698c <cpunum>$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	e8 55 f4 ff ff       	call   f0104306 <env_destroy>$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	e8 d6 1a 00 00       	call   f010698c <cpunum>$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	83 b8 28 f0 33 f0 00 	cmpl   $0x0,-0xfcc0fd8(%eax)$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	74 2a                	je     f0104eec <trap+0x1d4>$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	e8 c5 1a 00 00       	call   f010698c <cpunum>$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	75 16                	jne    f0104eec <trap+0x1d4>$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	e8 b1 1a 00 00       	call   f010698c <cpunum>$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	e8 d9 f4 ff ff       	call   f01043c5 <env_run>$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	e8 97 00 00 00       	call   f0104f88 <sched_yield>$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	00 00                	add    %al,(%eax)$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4 <entry0>:$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	6a 00                	push   $0x0$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	6a 00                	push   $0x0$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	eb 7a                	jmp    f0104f74 <_alltraps>$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa <entry1>:$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	6a 00                	push   $0x0$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	6a 01                	push   $0x1$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	eb 74                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00 <entry2>:$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	6a 00                	push   $0x0$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	6a 02                	push   $0x2$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	eb 6e                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06 <entry3>:$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	6a 00                	push   $0x0$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	6a 03                	push   $0x3$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	eb 68                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c <entry4>:$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	6a 00                	push   $0x0$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	6a 04                	push   $0x4$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	eb 62                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12 <entry5>:$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	6a 00                	push   $0x0$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	6a 05                	push   $0x5$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	eb 5c                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18 <entry6>:$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	6a 00                	push   $0x0$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	6a 06                	push   $0x6$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	eb 56                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e <entry7>:$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	6a 00                	push   $0x0$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	6a 07                	push   $0x7$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	eb 50                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24 <entry8>:$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	6a 08                	push   $0x8$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	eb 4c                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28 <entry10>:$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	6a 0a                	push   $0xa$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	eb 48                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c <entry11>:$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	6a 0b                	push   $0xb$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	eb 44                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30 <entry12>:$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	6a 0c                	push   $0xc$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	eb 40                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34 <entry13>:$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	6a 0d                	push   $0xd$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	eb 3c                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38 <entry14>:$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	6a 0e                	push   $0xe$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	eb 38                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c <entry16>:$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	6a 00                	push   $0x0$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	6a 10                	push   $0x10$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	eb 32                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42 <entry17>:$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	6a 11                	push   $0x11$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	eb 2e                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46 <entry18>:$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	6a 00                	push   $0x0$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	6a 12                	push   $0x12$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	eb 28                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c <entry19>:$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	6a 00                	push   $0x0$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	6a 13                	push   $0x13$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	eb 22                	jmp    f0104f74 <_alltraps>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52 <sysenter_handler>:$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	56                   	push   %esi$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	57                   	push   %edi$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	53                   	push   %ebx$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	51                   	push   %ecx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	52                   	push   %edx$/;"	l
f0104f57	obj/kern/kernel.asm	/^f0104f57:	50                   	push   %eax$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	8e d8                	mov    %eax,%ds$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	8e c0                	mov    %eax,%es$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	e8 67 01 00 00       	call   f01050cc <syscall>$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	66 ba 20 00          	mov    $0x20,%dx$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	8e da                	mov    %edx,%ds$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	8e c2                	mov    %edx,%es$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	8b 55 00             	mov    0x0(%ebp),%edx$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	0f 35                	sysexit $/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74 <_alltraps>:$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	1e                   	push   %ds$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	06                   	push   %es$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	60                   	pusha  $/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	8e d8                	mov    %eax,%ds$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	8e c0                	mov    %eax,%es$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	54                   	push   %esp$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	e8 93 fd ff ff       	call   f0104d18 <trap>$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	00 00                	add    %al,(%eax)$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88 <sched_yield>:$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	55                   	push   %ebp$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	56                   	push   %esi$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	53                   	push   %ebx$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	e8 f7 19 00 00       	call   f010698c <cpunum>$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	29 c2                	sub    %eax,%edx$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	83 3c 85 28 f0 33 f0 	cmpl   $0x0,-0xfcc0fd8(,%eax,4)$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	00 $/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	0f 84 8a 00 00 00    	je     f0105039 <sched_yield+0xb1>$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	e8 d8 19 00 00       	call   f010698c <cpunum>$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	89 d6                	mov    %edx,%esi$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	74 3a                	je     f010500f <sched_yield+0x87>$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	8b 1d 6c e2 33 f0    	mov    0xf033e26c,%ebx$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	89 f0                	mov    %esi,%eax$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	01 d8                	add    %ebx,%eax$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	75 0e                	jne    f0104ff6 <sched_yield+0x6e>$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	83 78 50 01          	cmpl   $0x1,0x50(%eax)$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	74 08                	je     f0104ff6 <sched_yield+0x6e>$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	e8 cf f3 ff ff       	call   f01043c5 <env_run>$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	25 ff 03 00 80       	and    $0x800003ff,%eax$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	79 07                	jns    f0105007 <sched_yield+0x7f>$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	48                   	dec    %eax$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	0d 00 fc ff ff       	or     $0xfffffc00,%eax$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	40                   	inc    %eax$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	89 c2                	mov    %eax,%edx$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	89 c6                	mov    %eax,%esi$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	39 c8                	cmp    %ecx,%eax$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	75 cc                	jne    f0104fdb <sched_yield+0x53>$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	e8 78 19 00 00       	call   f010698c <cpunum>$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	75 16                	jne    f0105039 <sched_yield+0xb1>$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	e8 64 19 00 00       	call   f010698c <cpunum>$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	8b 80 28 f0 33 f0    	mov    -0xfcc0fd8(%eax),%eax$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	e8 8c f3 ff ff       	call   f01043c5 <env_run>$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	8b 1d 6c e2 33 f0    	mov    0xf033e26c,%ebx$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	8d 43 50             	lea    0x50(%ebx),%eax$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	83 38 01             	cmpl   $0x1,(%eax)$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	74 0b                	je     f0105057 <sched_yield+0xcf>$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	76 0e                	jbe    f0105065 <sched_yield+0xdd>$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	42                   	inc    %edx$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	75 e4                	jne    f0105047 <sched_yield+0xbf>$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	eb 08                	jmp    f010506d <sched_yield+0xe5>$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	75 1a                	jne    f0105087 <sched_yield+0xff>$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	c7 04 24 f0 89 10 f0 	movl   $0xf01089f0,(%esp)$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	e8 9b f5 ff ff       	call   f0104614 <cprintf>$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	e8 d5 c1 ff ff       	call   f010125a <monitor>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	eb f2                	jmp    f0105079 <sched_yield+0xf1>$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	e8 00 19 00 00       	call   f010698c <cpunum>$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	01 c3                	add    %eax,%ebx$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	76 25                	jbe    f01050c1 <sched_yield+0x139>$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	e8 eb 18 00 00       	call   f010698c <cpunum>$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	c7 44 24 08 10 8a 10 	movl   $0xf0108a10,0x8(%esp)$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	f0 $/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	00 $/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	c7 04 24 2d 8a 10 f0 	movl   $0xf0108a2d,(%esp)$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	e8 7f af ff ff       	call   f0100040 <_panic>$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	e8 fc f2 ff ff       	call   f01043c5 <env_run>$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	00 00                	add    %al,(%eax)$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc <syscall>:$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	55                   	push   %ebp$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	56                   	push   %esi$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	53                   	push   %ebx$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	0f 87 3e 02 00 00    	ja     f0105324 <syscall+0x258>$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	ff 24 85 ac 8a 10 f0 	jmp    *-0xfef7554(,%eax,4)$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	e8 9a 18 00 00       	call   f010698c <cpunum>$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	00 $/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	29 c2                	sub    %eax,%edx$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	e8 68 ea ff ff       	call   f0103b85 <user_mem_assert>$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	c7 04 24 3a 8a 10 f0 	movl   $0xf0108a3a,(%esp)$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	e8 e3 f4 ff ff       	call   f0104614 <cprintf>$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	e9 ee 01 00 00       	jmp    f0105329 <syscall+0x25d>$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	e8 b3 b6 ff ff       	call   f01007f3 <cons_getc>$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	e9 e4 01 00 00       	jmp    f0105329 <syscall+0x25d>$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	e8 42 18 00 00       	call   f010698c <cpunum>$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	29 c2                	sub    %eax,%edx$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	e9 c4 01 00 00       	jmp    f0105329 <syscall+0x25d>$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	00 $/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	e8 64 ea ff ff       	call   f0103be0 <envid2env>$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	85 c0                	test   %eax,%eax$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	0f 88 a5 01 00 00    	js     f0105329 <syscall+0x25d>$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	e8 03 18 00 00       	call   f010698c <cpunum>$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	29 c1                	sub    %eax,%ecx$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	8d 04 88             	lea    (%eax,%ecx,4),%eax$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	39 14 85 28 f0 33 f0 	cmp    %edx,-0xfcc0fd8(,%eax,4)$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	75 2d                	jne    f01051ce <syscall+0x102>$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	e8 e6 17 00 00       	call   f010698c <cpunum>$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	29 c2                	sub    %eax,%edx$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	c7 04 24 3f 8a 10 f0 	movl   $0xf0108a3f,(%esp)$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	e8 48 f4 ff ff       	call   f0104614 <cprintf>$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	eb 32                	jmp    f0105200 <syscall+0x134>$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	e8 b6 17 00 00       	call   f010698c <cpunum>$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	29 c2                	sub    %eax,%edx$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	c7 04 24 5a 8a 10 f0 	movl   $0xf0108a5a,(%esp)$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	e8 14 f4 ff ff       	call   f0104614 <cprintf>$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105203	obj/kern/kernel.asm	/^f0105203:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	e8 fb f0 ff ff       	call   f0104306 <env_destroy>$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	e9 14 01 00 00       	jmp    f0105329 <syscall+0x25d>$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	77 20                	ja     f010523d <syscall+0x171>$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	c7 44 24 08 a4 70 10 	movl   $0xf01070a4,0x8(%esp)$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	f0 $/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	00 $/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	c7 04 24 72 8a 10 f0 	movl   $0xf0108a72,(%esp)$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	e8 03 ae ff ff       	call   f0100040 <_panic>$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	3b 1d a8 ee 33 f0    	cmp    0xf033eea8,%ebx$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	72 1c                	jb     f010526a <syscall+0x19e>$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	c7 44 24 08 bc 7b 10 	movl   $0xf0107bbc,0x8(%esp)$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	f0 $/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	00 $/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	c7 04 24 2d 82 10 f0 	movl   $0xf010822d,(%esp)$/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	e8 d6 ad ff ff       	call   f0100040 <_panic>$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	03 1d b0 ee 33 f0    	add    0xf033eeb0,%ebx$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	74 35                	je     f01052aa <syscall+0x1de>$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	e8 12 17 00 00       	call   f010698c <cpunum>$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	00 $/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	29 c2                	sub    %eax,%edx$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	e8 1c ca ff ff       	call   f0101cc4 <page_insert>$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	eb 7f                	jmp    f0105329 <syscall+0x25d>$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	eb 78                	jmp    f0105329 <syscall+0x25d>$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	c7 04 24 84 8a 10 f0 	movl   $0xf0108a84,(%esp)$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	e8 57 f3 ff ff       	call   f0104614 <cprintf>$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	e8 ca 16 00 00       	call   f010698c <cpunum>$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	29 c2                	sub    %eax,%edx$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	8b 70 7c             	mov    0x7c(%eax),%esi$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	29 de                	sub    %ebx,%esi$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	e8 ad 16 00 00       	call   f010698c <cpunum>$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	29 c2                	sub    %eax,%edx$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	e8 d1 eb ff ff       	call   f0103ed3 <region_alloc>$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	e8 85 16 00 00       	call   f010698c <cpunum>$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	29 c2                	sub    %eax,%edx$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	eb 0a                	jmp    f0105329 <syscall+0x25d>$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	e8 64 fc ff ff       	call   f0104f88 <sched_yield>$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	83 c4 20             	add    $0x20,%esp$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	5b                   	pop    %ebx$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	5e                   	pop    %esi$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	5d                   	pop    %ebp$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	c3                   	ret    $/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330 <stab_binsearch>:$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	55                   	push   %ebp$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	89 e5                	mov    %esp,%ebp$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	57                   	push   %edi$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	56                   	push   %esi$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	53                   	push   %ebx$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	0f 8f 9c 00 00 00    	jg     f01053f0 <stab_binsearch+0xc0>$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	01 d8                	add    %ebx,%eax$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	89 c7                	mov    %eax,%edi$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	01 c7                	add    %eax,%edi$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	d1 ff                	sar    %edi$/;"	d
f0105369	obj/kern/kernel.asm	/^f0105369:	39 df                	cmp    %ebx,%edi$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	7c 36                	jl     f01053a3 <stab_binsearch+0x73>$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	8a 44 82 04          	mov    0x4(%edx,%eax,4),%al$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	39 f0                	cmp    %esi,%eax$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	0f 84 ba 00 00 00    	je     f010543e <stab_binsearch+0x10e>$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	89 f8                	mov    %edi,%eax$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	48                   	dec    %eax$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	7c 10                	jl     f01053a3 <stab_binsearch+0x73>$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	31 c9                	xor    %ecx,%ecx$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	8a 0a                	mov    (%edx),%cl$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	39 f1                	cmp    %esi,%ecx$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	75 f0                	jne    f010538e <stab_binsearch+0x5e>$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	e9 9d 00 00 00       	jmp    f0105440 <stab_binsearch+0x110>$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	eb 39                	jmp    f01053e1 <stab_binsearch+0xb1>$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	89 02                	mov    %eax,(%edx)$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	eb 28                	jmp    f01053e1 <stab_binsearch+0xb1>$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	76 12                	jbe    f01053d0 <stab_binsearch+0xa0>$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	48                   	dec    %eax$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	89 01                	mov    %eax,(%ecx)$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	eb 11                	jmp    f01053e1 <stab_binsearch+0xb1>$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	89 02                	mov    %eax,(%edx)$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	89 c3                	mov    %eax,%ebx$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	0f 8d 71 ff ff ff    	jge    f010535b <stab_binsearch+0x2b>$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	75 0d                	jne    f01053fd <stab_binsearch+0xcd>$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	8b 02                	mov    (%edx),%eax$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	48                   	dec    %eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	89 01                	mov    %eax,(%ecx)$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	eb 5b                	jmp    f0105458 <stab_binsearch+0x128>$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105407	obj/kern/kernel.asm	/^f0105407:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	7d 2c                	jge    f0105437 <stab_binsearch+0x107>$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	8a 54 93 04          	mov    0x4(%ebx,%edx,4),%dl$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	39 f2                	cmp    %esi,%edx$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	74 18                	je     f0105437 <stab_binsearch+0x107>$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	48                   	dec    %eax$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	39 c1                	cmp    %eax,%ecx$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	7d 0b                	jge    f0105437 <stab_binsearch+0x107>$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	31 db                	xor    %ebx,%ebx$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	8a 1a                	mov    (%edx),%bl$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	75 f0                	jne    f0105427 <stab_binsearch+0xf7>$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	89 02                	mov    %eax,(%edx)$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	eb 1a                	jmp    f0105458 <stab_binsearch+0x128>$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	89 f8                	mov    %edi,%eax$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	0f 82 55 ff ff ff    	jb     f01053a8 <stab_binsearch+0x78>$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	e9 61 ff ff ff       	jmp    f01053b9 <stab_binsearch+0x89>$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	83 c4 14             	add    $0x14,%esp$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	5b                   	pop    %ebx$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	5e                   	pop    %esi$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	5f                   	pop    %edi$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	5d                   	pop    %ebp$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	c3                   	ret    $/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460 <debuginfo_eip>:$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	55                   	push   %ebp$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	89 e5                	mov    %esp,%ebp$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	57                   	push   %edi$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	56                   	push   %esi$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	53                   	push   %ebx$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	c7 03 e8 8a 10 f0    	movl   $0xf0108ae8,(%ebx)$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	c7 43 08 e8 8a 10 f0 	movl   $0xf0108ae8,0x8(%ebx)$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010548a	obj/kern/kernel.asm	/^f010548a:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	0f 87 0f 01 00 00    	ja     f01055af <debuginfo_eip+0x14f>$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	e8 e7 14 00 00       	call   f010698c <cpunum>$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	00 $/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	00 $/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	00 $/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	29 c2                	sub    %eax,%edx$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	e8 17 e6 ff ff       	call   f0103aef <user_mem_check>$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	85 c0                	test   %eax,%eax$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	0f 88 cb 02 00 00    	js     f01057ab <debuginfo_eip+0x34b>$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	e8 87 14 00 00       	call   f010698c <cpunum>$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	00 $/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	89 fa                	mov    %edi,%edx$/;"	l
f010550f	obj/kern/kernel.asm	/^f010550f:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	8d 0c 92             	lea    (%edx,%edx,4),%ecx$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	8d 14 4a             	lea    (%edx,%ecx,2),%edx$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	29 c2                	sub    %eax,%edx$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	e8 8a e5 ff ff       	call   f0103aef <user_mem_check>$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	85 c0                	test   %eax,%eax$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	0f 88 45 02 00 00    	js     f01057b2 <debuginfo_eip+0x352>$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	e8 1a 14 00 00       	call   f010698c <cpunum>$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	00 $/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	29 c2                	sub    %eax,%edx$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	8b 04 85 28 f0 33 f0 	mov    -0xfcc0fd8(,%eax,4),%eax$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	e8 49 e5 ff ff       	call   f0103aef <user_mem_check>$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	85 c0                	test   %eax,%eax$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	79 1f                	jns    f01055c9 <debuginfo_eip+0x169>$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	e9 0a 02 00 00       	jmp    f01057b9 <debuginfo_eip+0x359>$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	c7 45 bc 68 fd 11 f0 	movl   $0xf011fd68,-0x44(%ebp)$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	c7 45 b8 fd 50 11 f0 	movl   $0xf01150fd,-0x48(%ebp)$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	bf fc 50 11 f0       	mov    $0xf01150fc,%edi$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	c7 45 c4 54 90 10 f0 	movl   $0xf0109054,-0x3c(%ebp)$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	0f 83 eb 01 00 00    	jae    f01057c0 <debuginfo_eip+0x360>$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	0f 85 e8 01 00 00    	jne    f01057c7 <debuginfo_eip+0x367>$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	89 f8                	mov    %edi,%eax$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	2b 45 c4             	sub    -0x3c(%ebp),%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	89 d1                	mov    %edx,%ecx$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	01 ca                	add    %ecx,%edx$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	89 d1                	mov    %edx,%ecx$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	01 ca                	add    %ecx,%edx$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	e8 0b fd ff ff       	call   f0105330 <stab_binsearch>$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	85 c0                	test   %eax,%eax$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	0f 84 9e 01 00 00    	je     f01057ce <debuginfo_eip+0x36e>$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	e8 de fc ff ff       	call   f0105330 <stab_binsearch>$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	39 d0                	cmp    %edx,%eax$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	7f 32                	jg     f010568e <debuginfo_eip+0x22e>$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	8b 39                	mov    (%ecx),%edi$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	73 09                	jae    f010567e <debuginfo_eip+0x21e>$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	03 7d b8             	add    -0x48(%ebp),%edi$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	29 ce                	sub    %ecx,%esi$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	eb 0f                	jmp    f010569d <debuginfo_eip+0x23d>$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	00 $/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	e8 1e 0c 00 00       	call   f01062ce <strfind>$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	e8 61 fc ff ff       	call   f0105330 <stab_binsearch>$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	0f 8f fa 00 00 00    	jg     f01057d5 <debuginfo_eip+0x375>$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	66 8b 44 86 06       	mov    0x6(%esi,%eax,4),%ax$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01056eb	obj/kern/kernel.asm	/^f01056eb:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	39 f8                	cmp    %edi,%eax$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	7c 70                	jl     f010576b <debuginfo_eip+0x30b>$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	89 f7                	mov    %esi,%edi$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	8d 34 96             	lea    (%esi,%edx,4),%esi$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	8a 4e 04             	mov    0x4(%esi),%cl$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	74 43                	je     f010574e <debuginfo_eip+0x2ee>$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	89 c7                	mov    %eax,%edi$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	eb 1c                	jmp    f0105738 <debuginfo_eip+0x2d8>$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	48                   	dec    %eax$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	7f 47                	jg     f0105768 <debuginfo_eip+0x308>$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	89 d6                	mov    %edx,%esi$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	8a 4a 10             	mov    0x10(%edx),%cl$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	75 08                	jne    f0105736 <debuginfo_eip+0x2d6>$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	eb 18                	jmp    f010574e <debuginfo_eip+0x2ee>$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	89 c7                	mov    %eax,%edi$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	75 df                	jne    f010571c <debuginfo_eip+0x2bc>$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	74 d9                	je     f010571c <debuginfo_eip+0x2bc>$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	7c 1d                	jl     f010576b <debuginfo_eip+0x30b>$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	39 d0                	cmp    %edx,%eax$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	73 0a                	jae    f010576b <debuginfo_eip+0x30b>$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	03 45 b8             	add    -0x48(%ebp),%eax$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	eb 03                	jmp    f010576b <debuginfo_eip+0x30b>$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	7d 67                	jge    f01057dc <debuginfo_eip+0x37c>$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	39 c1                	cmp    %eax,%ecx$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	7e 64                	jle    f01057e3 <debuginfo_eip+0x383>$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	8d 34 40             	lea    (%eax,%eax,2),%esi$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	80 7c b7 04 a0       	cmpb   $0xa0,0x4(%edi,%esi,4)$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	75 5e                	jne    f01057ea <debuginfo_eip+0x38a>$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	8d 54 97 1c          	lea    0x1c(%edi,%edx,4),%edx$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	ff 43 14             	incl   0x14(%ebx)$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	40                   	inc    %eax$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	7e 56                	jle    f01057f1 <debuginfo_eip+0x391>$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	80 7a f4 a0          	cmpb   $0xa0,-0xc(%edx)$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	74 ef                	je     f0105793 <debuginfo_eip+0x333>$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	eb 4b                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	eb 44                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	eb 3d                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	eb 36                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	eb 2f                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	eb 28                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	eb 21                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	eb 1a                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	eb 13                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	eb 0c                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	eb 05                	jmp    f01057f6 <debuginfo_eip+0x396>$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	5b                   	pop    %ebx$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	5e                   	pop    %esi$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	5f                   	pop    %edi$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	5d                   	pop    %ebp$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	c3                   	ret    $/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800 <printnum>:$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	55                   	push   %ebp$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	89 e5                	mov    %esp,%ebp$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	57                   	push   %edi$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	56                   	push   %esi$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	53                   	push   %ebx$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	81 ec cc 00 00 00    	sub    $0xcc,%esp$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	89 9d 50 ff ff ff    	mov    %ebx,-0xb0(%ebp)$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	83 7d 18 30          	cmpl   $0x30,0x18(%ebp)$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	0f 85 09 01 00 00    	jne    f0105937 <printnum+0x137>$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	39 f0                	cmp    %esi,%eax$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	72 12                	jb     f0105849 <printnum+0x49>$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	39 5d 10             	cmp    %ebx,0x10(%ebp)$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	76 0d                	jbe    f0105849 <printnum+0x49>$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	4b                   	dec    %ebx$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	85 db                	test   %ebx,%ebx$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	7f 78                	jg     f01058bc <printnum+0xbc>$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	e9 91 00 00 00       	jmp    f01058da <printnum+0xda>$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	c7 44 24 10 30 00 00 	movl   $0x30,0x10(%esp)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	00 $/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	48                   	dec    %eax$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	00 $/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	8b 9d 50 ff ff ff    	mov    -0xb0(%ebp),%ebx$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	e8 92 15 00 00       	call   f0106e20 <__udivdi3>$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	8b 8d 58 ff ff ff    	mov    -0xa8(%ebp),%ecx$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	8b 9d 5c ff ff ff    	mov    -0xa4(%ebp),%ebx$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	e8 46 ff ff ff       	call   f0105800 <printnum>$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	eb 1e                	jmp    f01058da <printnum+0xda>$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	89 f7                	mov    %esi,%edi$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	8b b5 54 ff ff ff    	mov    -0xac(%ebp),%esi$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	ff 95 60 ff ff ff    	call   *-0xa0(%ebp)$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	4b                   	dec    %ebx$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	75 ec                	jne    f01058c4 <printnum+0xc4>$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	89 fe                	mov    %edi,%esi$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	8b 5c 24 04          	mov    0x4(%esp),%ebx$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%ebp)$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	89 9d 5c ff ff ff    	mov    %ebx,-0xa4(%ebp)$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	00 $/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	8b 9d 50 ff ff ff    	mov    -0xb0(%ebp),%ebx$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	e8 28 16 00 00       	call   f0106f40 <__umoddi3>$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	8b 8d 5c ff ff ff    	mov    -0xa4(%ebp),%ecx$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	0f be 80 f2 8a 10 f0 	movsbl -0xfef750e(%eax),%eax$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	ff 95 60 ff ff ff    	call   *-0xa0(%ebp)$/;"	l
f0105932	obj/kern/kernel.asm	/^f0105932:	e9 43 01 00 00       	jmp    f0105a7a <printnum+0x27a>$/;"	l
f0105937	obj/kern/kernel.asm	/^f0105937:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	89 9d 58 ff ff ff    	mov    %ebx,-0xa8(%ebp)$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	00 $/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	8b 9d 50 ff ff ff    	mov    -0xb0(%ebp),%ebx$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	e8 dd 15 00 00       	call   f0106f40 <__umoddi3>$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	00 $/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	8b 9d 50 ff ff ff    	mov    -0xb0(%ebp),%ebx$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	e8 96 14 00 00       	call   f0106e20 <__udivdi3>$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	89 c6                	mov    %eax,%esi$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	89 d3                	mov    %edx,%ebx$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	89 d0                	mov    %edx,%eax$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	09 f0                	or     %esi,%eax$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	75 31                	jne    f01059c5 <printnum+0x1c5>$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%ebp)$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	00 00 00 $/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	8b bd 60 ff ff ff    	mov    -0xa0(%ebp),%edi$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	8b b5 54 ff ff ff    	mov    -0xac(%ebp),%esi$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	eb 78                	jmp    f0105a29 <printnum+0x229>$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	8b 9d 64 ff ff ff    	mov    -0x9c(%ebp),%ebx$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	8b bd 60 ff ff ff    	mov    -0xa0(%ebp),%edi$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	8b b5 54 ff ff ff    	mov    -0xac(%ebp),%esi$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	eb 64                	jmp    f0105a29 <printnum+0x229>$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%ebp)$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	00 00 00 $/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	8b 95 58 ff ff ff    	mov    -0xa8(%ebp),%edx$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	e8 57 15 00 00       	call   f0106f40 <__umoddi3>$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	8b 8d 64 ff ff ff    	mov    -0x9c(%ebp),%ecx$/;"	l
f01059ef	obj/kern/kernel.asm	/^f01059ef:	89 84 8d 68 ff ff ff 	mov    %eax,-0x98(%ebp,%ecx,4)$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	e8 10 14 00 00       	call   f0106e20 <__udivdi3>$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	89 c6                	mov    %eax,%esi$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	89 d3                	mov    %edx,%ebx$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	ff 85 64 ff ff ff    	incl   -0x9c(%ebp)$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	09 f2                	or     %esi,%edx$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	75 b1                	jne    f01059cf <printnum+0x1cf>$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%ebp)$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	7f 8a                	jg     f01059b1 <printnum+0x1b1>$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	eb 1c                	jmp    f0105a45 <printnum+0x245>$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	4b                   	dec    %ebx$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	8b 84 9d 68 ff ff ff 	mov    -0x98(%ebp,%ebx,4),%eax$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	0f be 80 f2 8a 10 f0 	movsbl -0xfef750e(%eax),%eax$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	ff d7                	call   *%edi$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	85 db                	test   %ebx,%ebx$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	7f e4                	jg     f0105a29 <printnum+0x229>$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	2b 9d 64 ff ff ff    	sub    -0x9c(%ebp),%ebx$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	83 7d 18 2d          	cmpl   $0x2d,0x18(%ebp)$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	75 07                	jne    f0105a5b <printnum+0x25b>$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	eb 05                	jmp    f0105a60 <printnum+0x260>$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	be 30 00 00 00       	mov    $0x30,%esi$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	85 db                	test   %ebx,%ebx$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	7e 16                	jle    f0105a7a <printnum+0x27a>$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	8b bd 54 ff ff ff    	mov    -0xac(%ebp),%edi$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	ff 95 60 ff ff ff    	call   *-0xa0(%ebp)$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	4b                   	dec    %ebx$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	75 f0                	jne    f0105a6a <printnum+0x26a>$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	81 c4 cc 00 00 00    	add    $0xcc,%esp$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	5b                   	pop    %ebx$/;"	l
f0105a81	obj/kern/kernel.asm	/^f0105a81:	5e                   	pop    %esi$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	5f                   	pop    %edi$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	5d                   	pop    %ebp$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	c3                   	ret    $/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85 <getuint>:$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	55                   	push   %ebp$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	7e 0e                	jle    f0105a9b <getuint+0x16>$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	eb 22                	jmp    f0105abd <getuint+0x38>$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	85 d2                	test   %edx,%edx$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	74 10                	je     f0105aaf <getuint+0x2a>$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	8b 10                	mov    (%eax),%edx$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	8b 02                	mov    (%edx),%eax$/;"	l
f0105aa8	obj/kern/kernel.asm	/^f0105aa8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	eb 0e                	jmp    f0105abd <getuint+0x38>$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	8b 10                	mov    (%eax),%edx$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	8b 02                	mov    (%edx),%eax$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	5d                   	pop    %ebp$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	c3                   	ret    $/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf <sprintputch>:$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	55                   	push   %ebp$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	ff 40 08             	incl   0x8(%eax)$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	8b 10                	mov    (%eax),%edx$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	73 08                	jae    f0105ad7 <sprintputch+0x18>$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	42                   	inc    %edx$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	89 10                	mov    %edx,(%eax)$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	5d                   	pop    %ebp$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	c3                   	ret    $/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9 <printfmt>:$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	55                   	push   %ebp$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	89 e5                	mov    %esp,%ebp$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	e8 02 00 00 00       	call   f0105b01 <vprintfmt>$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	c9                   	leave  $/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	c3                   	ret    $/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01 <vprintfmt>:$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	55                   	push   %ebp$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	57                   	push   %edi$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	56                   	push   %esi$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	53                   	push   %ebx$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	eb 15                	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	85 c0                	test   %eax,%eax$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	0f 84 98 04 00 00    	je     f0105fb6 <vprintfmt+0x4b5>$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	31 c0                	xor    %eax,%eax$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	8a 06                	mov    (%esi),%al$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	46                   	inc    %esi$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	75 e1                	jne    f0105b16 <vprintfmt+0x15>$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	eb 26                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	89 ce                	mov    %ecx,%esi$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	eb 1b                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	89 ce                	mov    %ecx,%esi$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	eb 13                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	89 ce                	mov    %ecx,%esi$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	eb 08                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105b71	obj/kern/kernel.asm	/^f0105b71:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	8a 06                	mov    (%esi),%al$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	31 d2                	xor    %edx,%edx$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	88 c2                	mov    %al,%dl$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	8d 4e 01             	lea    0x1(%esi),%ecx$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	3c 55                	cmp    $0x55,%al$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	0f 87 02 04 00 00    	ja     f0105f8f <vprintfmt+0x48e>$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	ff 24 85 40 8c 10 f0 	jmp    *-0xfef73c0(,%eax,4)$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	77 43                	ja     f0105beb <vprintfmt+0xea>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	89 ce                	mov    %ecx,%esi$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	eb 08                	jmp    f0105bb4 <vprintfmt+0xb3>$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	89 ce                	mov    %ecx,%esi$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	eb c5                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	46                   	inc    %esi$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	8d 14 9b             	lea    (%ebx,%ebx,4),%edx$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	8d 5c 50 d0          	lea    -0x30(%eax,%edx,2),%ebx$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	76 ed                	jbe    f0105bb4 <vprintfmt+0xb3>$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	eb 24                	jmp    f0105bed <vprintfmt+0xec>$/;"	l
f0105bc9	obj/kern/kernel.asm	/^f0105bc9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	8b 18                	mov    (%eax),%ebx$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	89 ce                	mov    %ecx,%esi$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	eb 15                	jmp    f0105bed <vprintfmt+0xec>$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	78 88                	js     f0105b66 <vprintfmt+0x65>$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	89 ce                	mov    %ecx,%esi$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	eb 97                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	89 ce                	mov    %ecx,%esi$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	eb 8e                	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	89 ce                	mov    %ecx,%esi$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	79 86                	jns    f0105b79 <vprintfmt+0x78>$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	e9 79 ff ff ff       	jmp    f0105b71 <vprintfmt+0x70>$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	ff 45 d8             	incl   -0x28(%ebp)$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	89 ce                	mov    %ecx,%esi$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	e9 77 ff ff ff       	jmp    f0105b79 <vprintfmt+0x78>$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	e9 06 ff ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c2e	obj/kern/kernel.asm	/^f0105c2e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	85 c0                	test   %eax,%eax$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	79 02                	jns    f0105c39 <vprintfmt+0x138>$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	f7 d8                	neg    %eax$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	89 c2                	mov    %eax,%edx$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	7f 0b                	jg     f0105c4b <vprintfmt+0x14a>$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	8b 04 85 a0 8d 10 f0 	mov    -0xfef7260(,%eax,4),%eax$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	85 c0                	test   %eax,%eax$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	75 26                	jne    f0105c71 <vprintfmt+0x170>$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	c7 44 24 08 0a 8b 10 	movl   $0xf0108b0a,0x8(%esp)$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	f0 $/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	e8 70 fe ff ff       	call   f0105ad9 <printfmt>$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	e9 ba fe ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	c7 44 24 08 59 82 10 	movl   $0xf0108259,0x8(%esp)$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	f0 $/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	e8 4a fe ff ff       	call   f0105ad9 <printfmt>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	e9 94 fe ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	8b 00                	mov    (%eax),%eax$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	85 c0                	test   %eax,%eax$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	75 07                	jne    f0105cb8 <vprintfmt+0x1b7>$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	c7 45 d8 03 8b 10 f0 	movl   $0xf0108b03,-0x28(%ebp)$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	85 f6                	test   %esi,%esi$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	7e 44                	jle    f0105d00 <vprintfmt+0x1ff>$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	74 3e                	je     f0105d00 <vprintfmt+0x1ff>$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	e8 5f 04 00 00       	call   f0106130 <strnlen>$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	29 c6                	sub    %eax,%esi$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	85 f6                	test   %esi,%esi$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	7e 26                	jle    f0105d00 <vprintfmt+0x1ff>$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	0f be 75 d4          	movsbl -0x2c(%ebp),%esi$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	4f                   	dec    %edi$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	75 f3                	jne    f0105cea <vprintfmt+0x1e9>$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	0f be 01             	movsbl (%ecx),%eax$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	85 c0                	test   %eax,%eax$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	75 47                	jne    f0105d51 <vprintfmt+0x250>$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	eb 37                	jmp    f0105d43 <vprintfmt+0x242>$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	85 ff                	test   %edi,%edi$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	74 1b                	je     f0105d2b <vprintfmt+0x22a>$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	76 13                	jbe    f0105d2b <vprintfmt+0x22a>$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	eb 0d                	jmp    f0105d38 <vprintfmt+0x237>$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	46                   	inc    %esi$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	85 c0                	test   %eax,%eax$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	75 12                	jne    f0105d55 <vprintfmt+0x254>$/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	7f 15                	jg     f0105d5e <vprintfmt+0x25d>$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	e9 da fd ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	46                   	inc    %esi$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	85 db                	test   %ebx,%ebx$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	78 b3                	js     f0105d0c <vprintfmt+0x20b>$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	4b                   	dec    %ebx$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	79 b0                	jns    f0105d0c <vprintfmt+0x20b>$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	eb e5                	jmp    f0105d43 <vprintfmt+0x242>$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105d61	obj/kern/kernel.asm	/^f0105d61:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105d72	obj/kern/kernel.asm	/^f0105d72:	ff d7                	call   *%edi$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	4b                   	dec    %ebx$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	75 f0                	jne    f0105d67 <vprintfmt+0x266>$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	e9 ac fd ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	83 7d d8 01          	cmpl   $0x1,-0x28(%ebp)$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	7e 10                	jle    f0105d9b <vprintfmt+0x29a>$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	8b 30                	mov    (%eax),%esi$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	eb 28                	jmp    f0105dc3 <vprintfmt+0x2c2>$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	74 12                	je     f0105db3 <vprintfmt+0x2b2>$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	8b 30                	mov    (%eax),%esi$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	89 f7                	mov    %esi,%edi$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	eb 10                	jmp    f0105dc3 <vprintfmt+0x2c2>$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105db6	obj/kern/kernel.asm	/^f0105db6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	8b 30                	mov    (%eax),%esi$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	89 f7                	mov    %esi,%edi$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	89 7d dc             	mov    %edi,-0x24(%ebp)$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	85 ff                	test   %edi,%edi$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	79 2c                	jns    f0105df9 <vprintfmt+0x2f8>$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	89 f0                	mov    %esi,%eax$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	89 fa                	mov    %edi,%edx$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	f7 d8                	neg    %eax$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	f7 da                	neg    %edx$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	e9 d3 00 00 00       	jmp    f0105ecc <vprintfmt+0x3cb>$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	0f 85 c5 00 00 00    	jne    f0105ec7 <vprintfmt+0x3c6>$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	c7 04 24 2b 00 00 00 	movl   $0x2b,(%esp)$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	e9 ac 00 00 00       	jmp    f0105ecc <vprintfmt+0x3cb>$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	e8 57 fc ff ff       	call   f0105a85 <getuint>$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	e9 8e 00 00 00       	jmp    f0105ecc <vprintfmt+0x3cb>$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	e8 28 fc ff ff       	call   f0105a85 <getuint>$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	eb 62                	jmp    f0105ecc <vprintfmt+0x3cb>$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	8b 10                	mov    (%eax),%edx$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	eb 20                	jmp    f0105ecc <vprintfmt+0x3cb>$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	e8 cb fb ff ff       	call   f0105a85 <getuint>$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	eb 05                	jmp    f0105ecc <vprintfmt+0x3cb>$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	e8 09 f9 ff ff       	call   f0105800 <printnum>$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	e9 2c fc ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	8b 3a                	mov    (%edx),%edi$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	8b 30                	mov    (%eax),%esi$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	85 f6                	test   %esi,%esi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	75 28                	jne    f0105f3e <vprintfmt+0x43d>$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	bb a8 8b 10 f0       	mov    $0xf0108ba8,%ebx$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	b0 0a                	mov    $0xa,%al$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	0f be c0             	movsbl %al,%eax$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	ff d7                	call   *%edi$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	43                   	inc    %ebx$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	8a 03                	mov    (%ebx),%al$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	84 c0                	test   %al,%al$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	75 ed                	jne    f0105f23 <vprintfmt+0x422>$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	e9 ed fb ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	83 ff 7f             	cmp    $0x7f,%edi$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	76 28                	jbe    f0105f6b <vprintfmt+0x46a>$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	bb e0 8b 10 f0       	mov    $0xf0108be0,%ebx$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	b0 0a                	mov    $0xa,%al$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	89 f7                	mov    %esi,%edi$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	0f be c0             	movsbl %al,%eax$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	43                   	inc    %ebx$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	8a 03                	mov    (%ebx),%al$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	84 c0                	test   %al,%al$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	75 ec                	jne    f0105f52 <vprintfmt+0x451>$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	89 fe                	mov    %edi,%esi$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	89 f9                	mov    %edi,%ecx$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	88 0e                	mov    %cl,(%esi)$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	e9 b4 fb ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	e9 9c fb ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	0f 84 81 fb ff ff    	je     f0105b2b <vprintfmt+0x2a>$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	4e                   	dec    %esi$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	75 f9                	jne    f0105faa <vprintfmt+0x4a9>$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	e9 75 fb ff ff       	jmp    f0105b2b <vprintfmt+0x2a>$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	5b                   	pop    %ebx$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	5e                   	pop    %esi$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	5f                   	pop    %edi$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	5d                   	pop    %ebp$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	c3                   	ret    $/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe <vsnprintf>:$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	55                   	push   %ebp$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105fd4	obj/kern/kernel.asm	/^f0105fd4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	85 c0                	test   %eax,%eax$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	74 30                	je     f010600f <vsnprintf+0x51>$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	85 d2                	test   %edx,%edx$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	7e 33                	jle    f0106016 <vsnprintf+0x58>$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	c7 04 24 bf 5a 10 f0 	movl   $0xf0105abf,(%esp)$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	e8 fd fa ff ff       	call   f0105b01 <vprintfmt>$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	eb 0c                	jmp    f010601b <vsnprintf+0x5d>$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	eb 05                	jmp    f010601b <vsnprintf+0x5d>$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	c9                   	leave  $/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	c3                   	ret    $/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d <snprintf>:$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	55                   	push   %ebp$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	e8 7b ff ff ff       	call   f0105fbe <vsnprintf>$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	c9                   	leave  $/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	c3                   	ret    $/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	00 00                	add    %al,(%eax)$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048 <readline>:$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	55                   	push   %ebp$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	89 e5                	mov    %esp,%ebp$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	57                   	push   %edi$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	56                   	push   %esi$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	53                   	push   %ebx$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	85 c0                	test   %eax,%eax$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	74 10                	je     f0106068 <readline+0x20>$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	c7 04 24 59 82 10 f0 	movl   $0xf0108259,(%esp)$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	e8 ac e5 ff ff       	call   f0104614 <cprintf>$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	e8 e1 a8 ff ff       	call   f0100955 <iscons>$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	89 c7                	mov    %eax,%edi$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	e8 c4 a8 ff ff       	call   f0100944 <getchar>$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	89 c3                	mov    %eax,%ebx$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	85 c0                	test   %eax,%eax$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	79 17                	jns    f010609d <readline+0x55>$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	c7 04 24 c4 8d 10 f0 	movl   $0xf0108dc4,(%esp)$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	e8 7e e5 ff ff       	call   f0104614 <cprintf>$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	eb 69                	jmp    f0106106 <readline+0xbe>$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	74 05                	je     f01060a7 <readline+0x5f>$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	75 17                	jne    f01060be <readline+0x76>$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	85 f6                	test   %esi,%esi$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	7e 13                	jle    f01060be <readline+0x76>$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	85 ff                	test   %edi,%edi$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	74 0c                	je     f01060bb <readline+0x73>$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	e8 79 a8 ff ff       	call   f0100934 <cputchar>$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	4e                   	dec    %esi$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	eb bd                	jmp    f010607b <readline+0x33>$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	7e 1d                	jle    f01060e0 <readline+0x98>$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	7f 15                	jg     f01060e0 <readline+0x98>$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	85 ff                	test   %edi,%edi$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	74 08                	je     f01060d7 <readline+0x8f>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	e8 5d a8 ff ff       	call   f0100934 <cputchar>$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	88 9e a0 ea 33 f0    	mov    %bl,-0xfcc1560(%esi)$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	46                   	inc    %esi$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	eb 9b                	jmp    f010607b <readline+0x33>$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	74 05                	je     f01060ea <readline+0xa2>$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	75 91                	jne    f010607b <readline+0x33>$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	85 ff                	test   %edi,%edi$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	74 0c                	je     f01060fa <readline+0xb2>$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	e8 3a a8 ff ff       	call   f0100934 <cputchar>$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	c6 86 a0 ea 33 f0 00 	movb   $0x0,-0xfcc1560(%esi)$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	b8 a0 ea 33 f0       	mov    $0xf033eaa0,%eax$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	5b                   	pop    %ebx$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	5e                   	pop    %esi$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	5f                   	pop    %edi$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	5d                   	pop    %ebp$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	c3                   	ret    $/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110 <strlen>:$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	55                   	push   %ebp$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	89 e5                	mov    %esp,%ebp$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	74 0e                	je     f0106129 <strlen+0x19>$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	40                   	inc    %eax$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	75 f9                	jne    f0106120 <strlen+0x10>$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	eb 05                	jmp    f010612e <strlen+0x1e>$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	5d                   	pop    %ebp$/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f:	c3                   	ret    $/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130 <strnlen>:$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	55                   	push   %ebp$/;"	l
f0106131	obj/kern/kernel.asm	/^f0106131:	89 e5                	mov    %esp,%ebp$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	53                   	push   %ebx$/;"	l
f0106134	obj/kern/kernel.asm	/^f0106134:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	85 c9                	test   %ecx,%ecx$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	74 1a                	je     f0106158 <strnlen+0x28>$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	74 1c                	je     f010615f <strnlen+0x2f>$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106148	obj/kern/kernel.asm	/^f0106148:	89 d0                	mov    %edx,%eax$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	39 ca                	cmp    %ecx,%edx$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	74 16                	je     f0106164 <strnlen+0x34>$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	42                   	inc    %edx$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	75 f2                	jne    f0106148 <strnlen+0x18>$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	eb 0c                	jmp    f0106164 <strnlen+0x34>$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	eb 05                	jmp    f0106164 <strnlen+0x34>$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	5b                   	pop    %ebx$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	5d                   	pop    %ebp$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	c3                   	ret    $/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167 <strcpy>:$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	55                   	push   %ebp$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	89 e5                	mov    %esp,%ebp$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	53                   	push   %ebx$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f010617c	obj/kern/kernel.asm	/^f010617c:	42                   	inc    %edx$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	84 c9                	test   %cl,%cl$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	75 f5                	jne    f0106176 <strcpy+0xf>$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	5b                   	pop    %ebx$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	5d                   	pop    %ebp$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	c3                   	ret    $/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184 <strcat>:$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	55                   	push   %ebp$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	89 e5                	mov    %esp,%ebp$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	53                   	push   %ebx$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	e8 7a ff ff ff       	call   f0106110 <strlen>$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	01 d8                	add    %ebx,%eax$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	e8 c0 ff ff ff       	call   f0106167 <strcpy>$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	89 d8                	mov    %ebx,%eax$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	5b                   	pop    %ebx$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	5d                   	pop    %ebp$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	c3                   	ret    $/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af <strncpy>:$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	55                   	push   %ebp$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	56                   	push   %esi$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	53                   	push   %ebx$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	85 f6                	test   %esi,%esi$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	74 15                	je     f01061d6 <strncpy+0x27>$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	8a 1a                	mov    (%edx),%bl$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	41                   	inc    %ecx$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	39 f1                	cmp    %esi,%ecx$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	75 f0                	jne    f01061c6 <strncpy+0x17>$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	5b                   	pop    %ebx$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	5e                   	pop    %esi$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	5d                   	pop    %ebp$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	c3                   	ret    $/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da <strlcpy>:$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	55                   	push   %ebp$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	89 e5                	mov    %esp,%ebp$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	57                   	push   %edi$/;"	l
f01061de	obj/kern/kernel.asm	/^f01061de:	56                   	push   %esi$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	53                   	push   %ebx$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01061e6	obj/kern/kernel.asm	/^f01061e6:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	85 f6                	test   %esi,%esi$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	74 31                	je     f010621e <strlcpy+0x44>$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	74 21                	je     f0106213 <strlcpy+0x39>$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	8a 0b                	mov    (%ebx),%cl$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	84 c9                	test   %cl,%cl$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	74 1f                	je     f0106217 <strlcpy+0x3d>$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	83 ee 02             	sub    $0x2,%esi$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	89 f8                	mov    %edi,%eax$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	88 08                	mov    %cl,(%eax)$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	40                   	inc    %eax$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	39 f2                	cmp    %esi,%edx$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	74 10                	je     f0106219 <strlcpy+0x3f>$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	42                   	inc    %edx$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	84 c9                	test   %cl,%cl$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	75 f1                	jne    f0106202 <strlcpy+0x28>$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	eb 06                	jmp    f0106219 <strlcpy+0x3f>$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	89 f8                	mov    %edi,%eax$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	eb 02                	jmp    f0106219 <strlcpy+0x3f>$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	89 f8                	mov    %edi,%eax$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	eb 02                	jmp    f0106220 <strlcpy+0x46>$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	89 f8                	mov    %edi,%eax$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	29 f8                	sub    %edi,%eax$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	5b                   	pop    %ebx$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	5e                   	pop    %esi$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	5f                   	pop    %edi$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	5d                   	pop    %ebp$/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	c3                   	ret    $/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227 <strcmp>:$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	55                   	push   %ebp$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	89 e5                	mov    %esp,%ebp$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	8a 01                	mov    (%ecx),%al$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	84 c0                	test   %al,%al$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	74 11                	je     f0106247 <strcmp+0x20>$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	3a 02                	cmp    (%edx),%al$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	75 0d                	jne    f0106247 <strcmp+0x20>$/;"	l
f010623a	obj/kern/kernel.asm	/^f010623a:	42                   	inc    %edx$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	8a 41 01             	mov    0x1(%ecx),%al$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	84 c0                	test   %al,%al$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	74 05                	je     f0106247 <strcmp+0x20>$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	41                   	inc    %ecx$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	3a 02                	cmp    (%edx),%al$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	74 f3                	je     f010623a <strcmp+0x13>$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	8a 12                	mov    (%edx),%dl$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	29 d0                	sub    %edx,%eax$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	5d                   	pop    %ebp$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	c3                   	ret    $/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258 <strncmp>:$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	55                   	push   %ebp$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	89 e5                	mov    %esp,%ebp$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	53                   	push   %ebx$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	85 c0                	test   %eax,%eax$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	74 1b                	je     f0106284 <strncmp+0x2c>$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	8a 1a                	mov    (%edx),%bl$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	84 db                	test   %bl,%bl$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	74 24                	je     f0106293 <strncmp+0x3b>$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	75 20                	jne    f0106293 <strncmp+0x3b>$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	48                   	dec    %eax$/;"	l
f0106274	obj/kern/kernel.asm	/^f0106274:	74 15                	je     f010628b <strncmp+0x33>$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	42                   	inc    %edx$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	41                   	inc    %ecx$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	8a 1a                	mov    (%edx),%bl$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	84 db                	test   %bl,%bl$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	74 15                	je     f0106293 <strncmp+0x3b>$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	74 f1                	je     f0106273 <strncmp+0x1b>$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	eb 0f                	jmp    f0106293 <strncmp+0x3b>$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	eb 05                	jmp    f0106290 <strncmp+0x38>$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	5b                   	pop    %ebx$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	5d                   	pop    %ebp$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	c3                   	ret    $/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	31 c0                	xor    %eax,%eax$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	8a 02                	mov    (%edx),%al$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	31 d2                	xor    %edx,%edx$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	8a 11                	mov    (%ecx),%dl$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	29 d0                	sub    %edx,%eax$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	eb f1                	jmp    f0106290 <strncmp+0x38>$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f <strchr>:$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	55                   	push   %ebp$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	8a 10                	mov    (%eax),%dl$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	84 d2                	test   %dl,%dl$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	74 19                	je     f01062c7 <strchr+0x28>$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	38 ca                	cmp    %cl,%dl$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	75 07                	jne    f01062b9 <strchr+0x1a>$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	eb 18                	jmp    f01062cc <strchr+0x2d>$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	40                   	inc    %eax$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	38 ca                	cmp    %cl,%dl$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	74 13                	je     f01062cc <strchr+0x2d>$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	8a 50 01             	mov    0x1(%eax),%dl$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	84 d2                	test   %dl,%dl$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	75 f4                	jne    f01062b4 <strchr+0x15>$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	eb 05                	jmp    f01062cc <strchr+0x2d>$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	5d                   	pop    %ebp$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	c3                   	ret    $/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce <strfind>:$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	55                   	push   %ebp$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	8a 10                	mov    (%eax),%dl$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	84 d2                	test   %dl,%dl$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	74 11                	je     f01062ee <strfind+0x20>$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	38 ca                	cmp    %cl,%dl$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	75 06                	jne    f01062e7 <strfind+0x19>$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	eb 0b                	jmp    f01062ee <strfind+0x20>$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	38 ca                	cmp    %cl,%dl$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	74 07                	je     f01062ee <strfind+0x20>$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	40                   	inc    %eax$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	8a 10                	mov    (%eax),%dl$/;"	l
f01062ea	obj/kern/kernel.asm	/^f01062ea:	84 d2                	test   %dl,%dl$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	75 f5                	jne    f01062e3 <strfind+0x15>$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	5d                   	pop    %ebp$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	c3                   	ret    $/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0 <memset>:$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	55                   	push   %ebp$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	57                   	push   %edi$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	56                   	push   %esi$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	53                   	push   %ebx$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01062ff	obj/kern/kernel.asm	/^f01062ff:	85 c9                	test   %ecx,%ecx$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	74 30                	je     f0106333 <memset+0x43>$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	75 25                	jne    f0106330 <memset+0x40>$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	75 20                	jne    f0106330 <memset+0x40>$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	89 d3                	mov    %edx,%ebx$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	89 d6                	mov    %edx,%esi$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010631d	obj/kern/kernel.asm	/^f010631d:	89 d0                	mov    %edx,%eax$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	09 f0                	or     %esi,%eax$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	09 d0                	or     %edx,%eax$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	09 d8                	or     %ebx,%eax$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	fc                   	cld    $/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	eb 03                	jmp    f0106333 <memset+0x43>$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	fc                   	cld    $/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	89 f8                	mov    %edi,%eax$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	5b                   	pop    %ebx$/;"	l
f0106336	obj/kern/kernel.asm	/^f0106336:	5e                   	pop    %esi$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	5f                   	pop    %edi$/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	5d                   	pop    %ebp$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	c3                   	ret    $/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a <memmove>:$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	55                   	push   %ebp$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	89 e5                	mov    %esp,%ebp$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	57                   	push   %edi$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	56                   	push   %esi$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	39 c6                	cmp    %eax,%esi$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	73 34                	jae    f0106380 <memmove+0x46>$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	39 d0                	cmp    %edx,%eax$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	73 2d                	jae    f0106380 <memmove+0x46>$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	75 1b                	jne    f0106376 <memmove+0x3c>$/;"	l
f010635b	obj/kern/kernel.asm	/^f010635b:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	75 13                	jne    f0106376 <memmove+0x3c>$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	75 0e                	jne    f0106376 <memmove+0x3c>$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	fd                   	std    $/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	eb 07                	jmp    f010637d <memmove+0x43>$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	4f                   	dec    %edi$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	fd                   	std    $/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	fc                   	cld    $/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	eb 20                	jmp    f01063a0 <memmove+0x66>$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	75 13                	jne    f010639b <memmove+0x61>$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	a8 03                	test   $0x3,%al$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	75 0f                	jne    f010639b <memmove+0x61>$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	75 0a                	jne    f010639b <memmove+0x61>$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	89 c7                	mov    %eax,%edi$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	fc                   	cld    $/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	eb 05                	jmp    f01063a0 <memmove+0x66>$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	89 c7                	mov    %eax,%edi$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	fc                   	cld    $/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	5e                   	pop    %esi$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	5f                   	pop    %edi$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	5d                   	pop    %ebp$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	c3                   	ret    $/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4 <memcpy>:$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	55                   	push   %ebp$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063bb	obj/kern/kernel.asm	/^f01063bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	e8 77 ff ff ff       	call   f010633a <memmove>$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	c9                   	leave  $/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	c3                   	ret    $/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5 <memcmp>:$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	55                   	push   %ebp$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	57                   	push   %edi$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	56                   	push   %esi$/;"	l
f01063ca	obj/kern/kernel.asm	/^f01063ca:	53                   	push   %ebx$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01063d1	obj/kern/kernel.asm	/^f01063d1:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	85 ff                	test   %edi,%edi$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	74 36                	je     f010640e <memcmp+0x49>$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	8a 03                	mov    (%ebx),%al$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	8a 0e                	mov    (%esi),%cl$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	38 c8                	cmp    %cl,%al$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	74 1d                	je     f01063fd <memcmp+0x38>$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	eb 0c                	jmp    f01063ee <memcmp+0x29>$/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2:	8a 44 13 01          	mov    0x1(%ebx,%edx,1),%al$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	42                   	inc    %edx$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	8a 0c 16             	mov    (%esi,%edx,1),%cl$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	38 c8                	cmp    %cl,%al$/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec:	74 15                	je     f0106403 <memcmp+0x3e>$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	81 e1 ff 00 00 00    	and    $0xff,%ecx$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	29 c8                	sub    %ecx,%eax$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	eb 16                	jmp    f0106413 <memcmp+0x4e>$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	4f                   	dec    %edi$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	39 fa                	cmp    %edi,%edx$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	75 db                	jne    f01063e2 <memcmp+0x1d>$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	eb 05                	jmp    f0106413 <memcmp+0x4e>$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106413	obj/kern/kernel.asm	/^f0106413:	5b                   	pop    %ebx$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	5e                   	pop    %esi$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	5f                   	pop    %edi$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	5d                   	pop    %ebp$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	c3                   	ret    $/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418 <memfind>:$/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	55                   	push   %ebp$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	89 e5                	mov    %esp,%ebp$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e:	89 c2                	mov    %eax,%edx$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	39 d0                	cmp    %edx,%eax$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	73 12                	jae    f0106439 <memfind+0x21>$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	38 08                	cmp    %cl,(%eax)$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	75 06                	jne    f0106434 <memfind+0x1c>$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	eb 09                	jmp    f0106439 <memfind+0x21>$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	74 05                	je     f0106439 <memfind+0x21>$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	40                   	inc    %eax$/;"	l
f0106435	obj/kern/kernel.asm	/^f0106435:	39 d0                	cmp    %edx,%eax$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	75 f7                	jne    f0106430 <memfind+0x18>$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	5d                   	pop    %ebp$/;"	l
f010643a	obj/kern/kernel.asm	/^f010643a:	c3                   	ret    $/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b <strtol>:$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	55                   	push   %ebp$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	89 e5                	mov    %esp,%ebp$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	57                   	push   %edi$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	56                   	push   %esi$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	53                   	push   %ebx$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	eb 01                	jmp    f010644a <strtol+0xf>$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	42                   	inc    %edx$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	8a 02                	mov    (%edx),%al$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	3c 20                	cmp    $0x20,%al$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	74 f9                	je     f0106449 <strtol+0xe>$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	3c 09                	cmp    $0x9,%al$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	74 f5                	je     f0106449 <strtol+0xe>$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	75 08                	jne    f0106460 <strtol+0x25>$/;"	l
f0106458	obj/kern/kernel.asm	/^f0106458:	42                   	inc    %edx$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010645e	obj/kern/kernel.asm	/^f010645e:	eb 13                	jmp    f0106473 <strtol+0x38>$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	75 0a                	jne    f010646e <strtol+0x33>$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	eb 05                	jmp    f0106473 <strtol+0x38>$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	85 db                	test   %ebx,%ebx$/;"	l
f0106475	obj/kern/kernel.asm	/^f0106475:	74 05                	je     f010647c <strtol+0x41>$/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	75 28                	jne    f01064a4 <strtol+0x69>$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	8a 02                	mov    (%edx),%al$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	3c 30                	cmp    $0x30,%al$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	75 10                	jne    f0106492 <strtol+0x57>$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	75 0a                	jne    f0106492 <strtol+0x57>$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	83 c2 02             	add    $0x2,%edx$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	eb 12                	jmp    f01064a4 <strtol+0x69>$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	85 db                	test   %ebx,%ebx$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	75 0e                	jne    f01064a4 <strtol+0x69>$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	3c 30                	cmp    $0x30,%al$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	75 05                	jne    f010649f <strtol+0x64>$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	42                   	inc    %edx$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	b3 08                	mov    $0x8,%bl$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	eb 05                	jmp    f01064a4 <strtol+0x69>$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	89 de                	mov    %ebx,%esi$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	8a 0a                	mov    (%edx),%cl$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01064b3	obj/kern/kernel.asm	/^f01064b3:	77 08                	ja     f01064bd <strtol+0x82>$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	eb 1e                	jmp    f01064db <strtol+0xa0>$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	77 08                	ja     f01064cd <strtol+0x92>$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	eb 0e                	jmp    f01064db <strtol+0xa0>$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	77 12                	ja     f01064e7 <strtol+0xac>$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	39 f1                	cmp    %esi,%ecx$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	7d 0c                	jge    f01064eb <strtol+0xb0>$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	42                   	inc    %edx$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	0f af c6             	imul   %esi,%eax$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	01 c8                	add    %ecx,%eax$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	eb c4                	jmp    f01064ab <strtol+0x70>$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	89 c1                	mov    %eax,%ecx$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	eb 02                	jmp    f01064ed <strtol+0xb2>$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	89 c1                	mov    %eax,%ecx$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	74 05                	je     f01064f8 <strtol+0xbd>$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01064f6	obj/kern/kernel.asm	/^f01064f6:	89 13                	mov    %edx,(%ebx)$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	85 ff                	test   %edi,%edi$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	74 04                	je     f0106500 <strtol+0xc5>$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	89 c8                	mov    %ecx,%eax$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	f7 d8                	neg    %eax$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	5b                   	pop    %ebx$/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	5e                   	pop    %esi$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	5f                   	pop    %edi$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	5d                   	pop    %ebp$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	c3                   	ret    $/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	00 00                	add    %al,(%eax)$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508 <mpentry_start>:$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	fa                   	cli    $/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	31 c0                	xor    %eax,%eax$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	8e d8                	mov    %eax,%ds$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	8e c0                	mov    %eax,%es$/;"	l
f010650f	obj/kern/kernel.asm	/^f010650f:	8e d0                	mov    %eax,%ss$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	74 70                	je     f0106586 <sum+0x2>$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	08 00                	or     %al,(%eax)$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528 <start32>:$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	8e d8                	mov    %eax,%ds$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	8e c0                	mov    %eax,%es$/;"	l
f0106530	obj/kern/kernel.asm	/^f0106530:	8e d0                	mov    %eax,%ss$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	8e e0                	mov    %eax,%fs$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	8e e8                	mov    %eax,%gs$/;"	l
f010653a	obj/kern/kernel.asm	/^f010653a:	b8 00 80 12 00       	mov    $0x128000,%eax$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010654d	obj/kern/kernel.asm	/^f010654d:	8b 25 a4 ee 33 f0    	mov    0xf033eea4,%esp$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	ff d0                	call   *%eax$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f <spin>:$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	eb fe                	jmp    f010655f <spin>$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564 <gdt>:$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	ff                   	(bad)  $/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	ff 00                	incl   (%eax)$/;"	l
f010656f	obj/kern/kernel.asm	/^f010656f:	00 00                	add    %al,(%eax)$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c <gdtdesc>:$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	17                   	pop    %ss$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582 <mpentry_end>:$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	90                   	nop$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584 <sum>:$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	55                   	push   %ebp$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	89 e5                	mov    %esp,%ebp$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	57                   	push   %edi$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	56                   	push   %esi$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	53                   	push   %ebx$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	89 d7                	mov    %edx,%edi$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	85 d2                	test   %edx,%edx$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	7e 1c                	jle    f01065ac <sum+0x28>$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	8a 14 08             	mov    (%eax,%ecx,1),%dl$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	01 d3                	add    %edx,%ebx$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	41                   	inc    %ecx$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	39 f9                	cmp    %edi,%ecx$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	75 f0                	jne    f010659a <sum+0x16>$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	eb 05                	jmp    f01065b1 <sum+0x2d>$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	88 d8                	mov    %bl,%al$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	5b                   	pop    %ebx$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	5e                   	pop    %esi$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	5f                   	pop    %edi$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	5d                   	pop    %ebp$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	c3                   	ret    $/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8 <mpsearch1>:$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	55                   	push   %ebp$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	56                   	push   %esi$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	53                   	push   %ebx$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	8b 0d a8 ee 33 f0    	mov    0xf033eea8,%ecx$/;"	l
f01065c6	obj/kern/kernel.asm	/^f01065c6:	89 c3                	mov    %eax,%ebx$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	72 20                	jb     f01065ef <mpsearch1+0x37>$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	f0 $/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	00 $/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	c7 04 24 61 8f 10 f0 	movl   $0xf0108f61,(%esp)$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	e8 51 9a ff ff       	call   f0100040 <_panic>$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	89 f2                	mov    %esi,%edx$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	39 d1                	cmp    %edx,%ecx$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	77 20                	ja     f010661b <mpsearch1+0x63>$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	f0 $/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	00 $/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	c7 04 24 61 8f 10 f0 	movl   $0xf0108f61,(%esp)$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	e8 25 9a ff ff       	call   f0100040 <_panic>$/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0106627	obj/kern/kernel.asm	/^f0106627:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	73 3a                	jae    f0106665 <mpsearch1+0xad>$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	00 $/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	c7 44 24 04 71 8f 10 	movl   $0xf0108f71,0x4(%esp)$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	f0 $/;"	l
f010663b	obj/kern/kernel.asm	/^f010663b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010663e	obj/kern/kernel.asm	/^f010663e:	e8 82 fd ff ff       	call   f01063c5 <memcmp>$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	85 c0                	test   %eax,%eax$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	75 10                	jne    f0106657 <mpsearch1+0x9f>$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	89 d8                	mov    %ebx,%eax$/;"	l
f010664e	obj/kern/kernel.asm	/^f010664e:	e8 31 ff ff ff       	call   f0106584 <sum>$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	84 c0                	test   %al,%al$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	74 13                	je     f010666a <mpsearch1+0xb2>$/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	83 c3 10             	add    $0x10,%ebx$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	39 f3                	cmp    %esi,%ebx$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	72 cd                	jb     f010662b <mpsearch1+0x73>$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	eb 05                	jmp    f010666a <mpsearch1+0xb2>$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	89 d8                	mov    %ebx,%eax$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	5b                   	pop    %ebx$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	5e                   	pop    %esi$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	5d                   	pop    %ebp$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	c3                   	ret    $/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673 <mp_init>:$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	55                   	push   %ebp$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	89 e5                	mov    %esp,%ebp$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	57                   	push   %edi$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	56                   	push   %esi$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	53                   	push   %ebx$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	c7 05 c0 f3 33 f0 20 	movl   $0xf033f020,0xf033f3c0$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	f0 33 f0 $/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	83 3d a8 ee 33 f0 00 	cmpl   $0x0,0xf033eea8$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	75 24                	jne    f01066b3 <mp_init+0x40>$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	00 $/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	f0 $/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6:	00 $/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	c7 04 24 61 8f 10 f0 	movl   $0xf0108f61,(%esp)$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	e8 8d 99 ff ff       	call   f0100040 <_panic>$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	66 a1 0e 04 00 f0    	mov    0xf000040e,%ax$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	85 c0                	test   %eax,%eax$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	74 16                	je     f01066d8 <mp_init+0x65>$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	e8 e9 fe ff ff       	call   f01065b8 <mpsearch1>$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	85 c0                	test   %eax,%eax$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	75 40                	jne    f0106716 <mp_init+0xa3>$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	eb 24                	jmp    f01066fc <mp_init+0x89>$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	66 a1 13 04 00 f0    	mov    0xf0000413,%ax$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01066f0	obj/kern/kernel.asm	/^f01066f0:	e8 c3 fe ff ff       	call   f01065b8 <mpsearch1>$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	85 c0                	test   %eax,%eax$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	75 1a                	jne    f0106716 <mp_init+0xa3>$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	e8 ad fe ff ff       	call   f01065b8 <mpsearch1>$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010670e	obj/kern/kernel.asm	/^f010670e:	85 c0                	test   %eax,%eax$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	0f 84 53 02 00 00    	je     f0106969 <mp_init+0x2f6>$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106719	obj/kern/kernel.asm	/^f0106719:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f010671c	obj/kern/kernel.asm	/^f010671c:	85 db                	test   %ebx,%ebx$/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	74 06                	je     f0106726 <mp_init+0xb3>$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	74 11                	je     f0106737 <mp_init+0xc4>$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	c7 04 24 d4 8d 10 f0 	movl   $0xf0108dd4,(%esp)$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	e8 e2 de ff ff       	call   f0104614 <cprintf>$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	e9 32 02 00 00       	jmp    f0106969 <mp_init+0x2f6>$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	89 d8                	mov    %ebx,%eax$/;"	l
f0106739	obj/kern/kernel.asm	/^f0106739:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	3b 05 a8 ee 33 f0    	cmp    0xf033eea8,%eax$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	72 20                	jb     f0106764 <mp_init+0xf1>$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	f0 $/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	00 $/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	c7 04 24 61 8f 10 f0 	movl   $0xf0108f61,(%esp)$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	e8 dc 98 ff ff       	call   f0100040 <_panic>$/;"	l
f0106764	obj/kern/kernel.asm	/^f0106764:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	00 $/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	c7 44 24 04 76 8f 10 	movl   $0xf0108f76,0x4(%esp)$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	f0 $/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	e8 43 fc ff ff       	call   f01063c5 <memcmp>$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	85 c0                	test   %eax,%eax$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	74 11                	je     f0106797 <mp_init+0x124>$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	c7 04 24 04 8e 10 f0 	movl   $0xf0108e04,(%esp)$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	e8 82 de ff ff       	call   f0104614 <cprintf>$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	e9 d2 01 00 00       	jmp    f0106969 <mp_init+0x2f6>$/;"	l
f0106797	obj/kern/kernel.asm	/^f0106797:	66 8b 73 04          	mov    0x4(%ebx),%si$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	89 f2                	mov    %esi,%edx$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	81 e2 ff ff 00 00    	and    $0xffff,%edx$/;"	l
f01067a3	obj/kern/kernel.asm	/^f01067a3:	89 d8                	mov    %ebx,%eax$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	e8 da fd ff ff       	call   f0106584 <sum>$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	84 c0                	test   %al,%al$/;"	l
f01067ac	obj/kern/kernel.asm	/^f01067ac:	74 11                	je     f01067bf <mp_init+0x14c>$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	c7 04 24 38 8e 10 f0 	movl   $0xf0108e38,(%esp)$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	e8 5a de ff ff       	call   f0104614 <cprintf>$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	e9 aa 01 00 00       	jmp    f0106969 <mp_init+0x2f6>$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	8a 43 06             	mov    0x6(%ebx),%al$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	3c 01                	cmp    $0x1,%al$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	74 1e                	je     f01067e4 <mp_init+0x171>$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	3c 04                	cmp    $0x4,%al$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	74 1a                	je     f01067e4 <mp_init+0x171>$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01067d3	obj/kern/kernel.asm	/^f01067d3:	c7 04 24 5c 8e 10 f0 	movl   $0xf0108e5c,(%esp)$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	e8 35 de ff ff       	call   f0104614 <cprintf>$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	e9 85 01 00 00       	jmp    f0106969 <mp_init+0x2f6>$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	66 8b 53 28          	mov    0x28(%ebx),%dx$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	81 e2 ff ff 00 00    	and    $0xffff,%edx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	81 e6 ff ff 00 00    	and    $0xffff,%esi$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	e8 88 fd ff ff       	call   f0106584 <sum>$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	3a 43 2a             	cmp    0x2a(%ebx),%al$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	74 11                	je     f0106812 <mp_init+0x19f>$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	c7 04 24 7c 8e 10 f0 	movl   $0xf0108e7c,(%esp)$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	e8 07 de ff ff       	call   f0104614 <cprintf>$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	e9 57 01 00 00       	jmp    f0106969 <mp_init+0x2f6>$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	85 db                	test   %ebx,%ebx$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	0f 84 4f 01 00 00    	je     f0106969 <mp_init+0x2f6>$/;"	l
f010681a	obj/kern/kernel.asm	/^f010681a:	c7 05 00 f0 33 f0 01 	movl   $0x1,0xf033f000$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	00 00 00 $/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	a3 00 00 38 f0       	mov    %eax,0xf0380000$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	66 83 7b 22 00       	cmpw   $0x0,0x22(%ebx)$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	0f 84 b6 00 00 00    	je     f01068ed <mp_init+0x27a>$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	8d 73 2c             	lea    0x2c(%ebx),%esi$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	8a 06                	mov    (%esi),%al$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	84 c0                	test   %al,%al$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	74 06                	je     f010684b <mp_init+0x1d8>$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	3c 04                	cmp    $0x4,%al$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	77 69                	ja     f01068b2 <mp_init+0x23f>$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	eb 62                	jmp    f01068ad <mp_init+0x23a>$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	74 1d                	je     f010686e <mp_init+0x1fb>$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	a1 c4 f3 33 f0       	mov    0xf033f3c4,%eax$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	29 c2                	sub    %eax,%edx$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	a3 c0 f3 33 f0       	mov    %eax,0xf033f3c0$/;"	l
f010686e	obj/kern/kernel.asm	/^f010686e:	a1 c4 f3 33 f0       	mov    0xf033f3c4,%eax$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	7f 1b                	jg     f0106893 <mp_init+0x220>$/;"	l
f0106878	obj/kern/kernel.asm	/^f0106878:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	29 c2                	sub    %eax,%edx$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	88 04 95 20 f0 33 f0 	mov    %al,-0xfcc0fe0(,%edx,4)$/;"	l
f010688b	obj/kern/kernel.asm	/^f010688b:	40                   	inc    %eax$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	a3 c4 f3 33 f0       	mov    %eax,0xf033f3c4$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	eb 15                	jmp    f01068a8 <mp_init+0x235>$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	31 c0                	xor    %eax,%eax$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	8a 46 01             	mov    0x1(%esi),%al$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	c7 04 24 ac 8e 10 f0 	movl   $0xf0108eac,(%esp)$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	e8 6c dd ff ff       	call   f0104614 <cprintf>$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	83 c6 14             	add    $0x14,%esi$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	eb 2e                	jmp    f01068db <mp_init+0x268>$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	83 c6 08             	add    $0x8,%esi$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	eb 29                	jmp    f01068db <mp_init+0x268>$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	c7 04 24 d4 8e 10 f0 	movl   $0xf0108ed4,(%esp)$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	e8 4d dd ff ff       	call   f0104614 <cprintf>$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	c7 05 00 f0 33 f0 00 	movl   $0x0,0xf033f000$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	00 00 00 $/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	66 8b 7b 22          	mov    0x22(%ebx),%di$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	81 e7 ff ff 00 00    	and    $0xffff,%edi$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	47                   	inc    %edi$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	66 8b 43 22          	mov    0x22(%ebx),%ax$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	39 f8                	cmp    %edi,%eax$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	0f 87 52 ff ff ff    	ja     f010683f <mp_init+0x1cc>$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	a1 c0 f3 33 f0       	mov    0xf033f3c0,%eax$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	83 3d 00 f0 33 f0 00 	cmpl   $0x0,0xf033f000$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	75 22                	jne    f0106924 <mp_init+0x2b1>$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	c7 05 c4 f3 33 f0 01 	movl   $0x1,0xf033f3c4$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	00 00 00 $/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	c7 05 00 00 38 f0 00 	movl   $0x0,0xf0380000$/;"	l
f0106913	obj/kern/kernel.asm	/^f0106913:	00 00 00 $/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	c7 04 24 f4 8e 10 f0 	movl   $0xf0108ef4,(%esp)$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	e8 f2 dc ff ff       	call   f0104614 <cprintf>$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	eb 45                	jmp    f0106969 <mp_init+0x2f6>$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	8b 15 c4 f3 33 f0    	mov    0xf033f3c4,%edx$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	8a 00                	mov    (%eax),%al$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	c7 04 24 7b 8f 10 f0 	movl   $0xf0108f7b,(%esp)$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	e8 cf dc ff ff       	call   f0104614 <cprintf>$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	74 1b                	je     f0106969 <mp_init+0x2f6>$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	c7 04 24 20 8f 10 f0 	movl   $0xf0108f20,(%esp)$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	e8 ba dc ff ff       	call   f0104614 <cprintf>$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f:	b0 70                	mov    $0x70,%al$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	ee                   	out    %al,(%dx)$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	b2 23                	mov    $0x23,%dl$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	ec                   	in     (%dx),%al$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	ee                   	out    %al,(%dx)$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	5b                   	pop    %ebx$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	5e                   	pop    %esi$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	5f                   	pop    %edi$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	5d                   	pop    %ebp$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	c3                   	ret    $/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	00 00                	add    %al,(%eax)$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974 <lapicw>:$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	55                   	push   %ebp$/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	89 e5                	mov    %esp,%ebp$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	03 05 00 00 38 f0    	add    0xf0380000,%eax$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	89 10                	mov    %edx,(%eax)$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	a1 00 00 38 f0       	mov    0xf0380000,%eax$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a:	5d                   	pop    %ebp$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	c3                   	ret    $/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c <cpunum>:$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	55                   	push   %ebp$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	89 e5                	mov    %esp,%ebp$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	a1 00 00 38 f0       	mov    0xf0380000,%eax$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	85 c0                	test   %eax,%eax$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	74 08                	je     f01069a0 <cpunum+0x14>$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	eb 05                	jmp    f01069a5 <cpunum+0x19>$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	5d                   	pop    %ebp$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	c3                   	ret    $/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7 <lapic_init>:$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	55                   	push   %ebp$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	83 3d 00 00 38 f0 00 	cmpl   $0x0,0xf0380000$/;"	l
f01069b1	obj/kern/kernel.asm	/^f01069b1:	0f 84 12 01 00 00    	je     f0106ac9 <lapic_init+0x122>$/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	e8 ae ff ff ff       	call   f0106974 <lapicw>$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	e8 9f ff ff ff       	call   f0106974 <lapicw>$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	e8 90 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f01069e9	obj/kern/kernel.asm	/^f01069e9:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f01069ee	obj/kern/kernel.asm	/^f01069ee:	e8 81 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	e8 94 ff ff ff       	call   f010698c <cpunum>$/;"	l
f01069f8	obj/kern/kernel.asm	/^f01069f8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	29 c2                	sub    %eax,%edx$/;"	l
f0106a01	obj/kern/kernel.asm	/^f0106a01:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	39 05 c0 f3 33 f0    	cmp    %eax,0xf033f3c0$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	74 0f                	je     f0106a22 <lapic_init+0x7b>$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106a18	obj/kern/kernel.asm	/^f0106a18:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	e8 52 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106a27	obj/kern/kernel.asm	/^f0106a27:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	e8 43 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	a1 00 00 38 f0       	mov    0xf0380000,%eax$/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	3c 03                	cmp    $0x3,%al$/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e:	76 0f                	jbe    f0106a4f <lapic_init+0xa8>$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	e8 25 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a4f	obj/kern/kernel.asm	/^f0106a4f:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106a54	obj/kern/kernel.asm	/^f0106a54:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106a59	obj/kern/kernel.asm	/^f0106a59:	e8 16 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	e8 07 ff ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	e8 f8 fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a7c	obj/kern/kernel.asm	/^f0106a7c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	e8 e9 fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	e8 da fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106a9a	obj/kern/kernel.asm	/^f0106a9a:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	e8 cb fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	8b 15 00 00 38 f0    	mov    0xf0380000,%edx$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	75 f5                	jne    f0106aaf <lapic_init+0x108>$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	e8 ab fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	5d                   	pop    %ebp$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	c3                   	ret    $/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb <lapic_eoi>:$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	55                   	push   %ebp$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	83 3d 00 00 38 f0 00 	cmpl   $0x0,0xf0380000$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	74 0f                	je     f0106ae6 <lapic_eoi+0x1b>$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	e8 8e fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106ae6	obj/kern/kernel.asm	/^f0106ae6:	5d                   	pop    %ebp$/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7:	c3                   	ret    $/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8 <lapic_startap>:$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	55                   	push   %ebp$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aeb	obj/kern/kernel.asm	/^f0106aeb:	56                   	push   %esi$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	53                   	push   %ebx$/;"	l
f0106aed	obj/kern/kernel.asm	/^f0106aed:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	8a 5d 08             	mov    0x8(%ebp),%bl$/;"	l
f0106af6	obj/kern/kernel.asm	/^f0106af6:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	b0 0f                	mov    $0xf,%al$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	ee                   	out    %al,(%dx)$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	b2 71                	mov    $0x71,%dl$/;"	l
f0106b00	obj/kern/kernel.asm	/^f0106b00:	b0 0a                	mov    $0xa,%al$/;"	l
f0106b02	obj/kern/kernel.asm	/^f0106b02:	ee                   	out    %al,(%dx)$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	83 3d a8 ee 33 f0 00 	cmpl   $0x0,0xf033eea8$/;"	l
f0106b0a	obj/kern/kernel.asm	/^f0106b0a:	75 24                	jne    f0106b30 <lapic_startap+0x48>$/;"	l
f0106b0c	obj/kern/kernel.asm	/^f0106b0c:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106b13	obj/kern/kernel.asm	/^f0106b13:	00 $/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	c7 44 24 08 c8 70 10 	movl   $0xf01070c8,0x8(%esp)$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	f0 $/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	00 $/;"	l
f0106b24	obj/kern/kernel.asm	/^f0106b24:	c7 04 24 98 8f 10 f0 	movl   $0xf0108f98,(%esp)$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	e8 10 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106b30	obj/kern/kernel.asm	/^f0106b30:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106b37	obj/kern/kernel.asm	/^f0106b37:	00 00 $/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	89 f0                	mov    %esi,%eax$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	89 da                	mov    %ebx,%edx$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	e8 21 fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	e8 12 fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106b62	obj/kern/kernel.asm	/^f0106b62:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	e8 03 fe ff ff       	call   f0106974 <lapicw>$/;"	l
f0106b71	obj/kern/kernel.asm	/^f0106b71:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	89 da                	mov    %ebx,%edx$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b81	obj/kern/kernel.asm	/^f0106b81:	e8 ee fd ff ff       	call   f0106974 <lapicw>$/;"	l
f0106b86	obj/kern/kernel.asm	/^f0106b86:	89 f2                	mov    %esi,%edx$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	e8 e2 fd ff ff       	call   f0106974 <lapicw>$/;"	l
f0106b92	obj/kern/kernel.asm	/^f0106b92:	89 da                	mov    %ebx,%edx$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	e8 d6 fd ff ff       	call   f0106974 <lapicw>$/;"	l
f0106b9e	obj/kern/kernel.asm	/^f0106b9e:	89 f2                	mov    %esi,%edx$/;"	l
f0106ba0	obj/kern/kernel.asm	/^f0106ba0:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	e8 ca fd ff ff       	call   f0106974 <lapicw>$/;"	l
f0106baa	obj/kern/kernel.asm	/^f0106baa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106bad	obj/kern/kernel.asm	/^f0106bad:	5b                   	pop    %ebx$/;"	l
f0106bae	obj/kern/kernel.asm	/^f0106bae:	5e                   	pop    %esi$/;"	l
f0106baf	obj/kern/kernel.asm	/^f0106baf:	5d                   	pop    %ebp$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	c3                   	ret    $/;"	l
f0106bb1	obj/kern/kernel.asm	/^f0106bb1 <lapic_ipi>:$/;"	l
f0106bb1	obj/kern/kernel.asm	/^f0106bb1:	55                   	push   %ebp$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106bbd	obj/kern/kernel.asm	/^f0106bbd:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	e8 ad fd ff ff       	call   f0106974 <lapicw>$/;"	l
f0106bc7	obj/kern/kernel.asm	/^f0106bc7:	8b 15 00 00 38 f0    	mov    0xf0380000,%edx$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106bd6	obj/kern/kernel.asm	/^f0106bd6:	75 f5                	jne    f0106bcd <lapic_ipi+0x1c>$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	5d                   	pop    %ebp$/;"	l
f0106bd9	obj/kern/kernel.asm	/^f0106bd9:	c3                   	ret    $/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc <holding>:$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	55                   	push   %ebp$/;"	l
f0106bdd	obj/kern/kernel.asm	/^f0106bdd:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bdf	obj/kern/kernel.asm	/^f0106bdf:	53                   	push   %ebx$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0106be6	obj/kern/kernel.asm	/^f0106be6:	74 27                	je     f0106c0f <holding+0x33>$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f0106beb	obj/kern/kernel.asm	/^f0106beb:	e8 9c fd ff ff       	call   f010698c <cpunum>$/;"	l
f0106bf0	obj/kern/kernel.asm	/^f0106bf0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	29 c2                	sub    %eax,%edx$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106c05	obj/kern/kernel.asm	/^f0106c05:	0f 94 c0             	sete   %al$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0106c0d	obj/kern/kernel.asm	/^f0106c0d:	eb 05                	jmp    f0106c14 <holding+0x38>$/;"	l
f0106c0f	obj/kern/kernel.asm	/^f0106c0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	5b                   	pop    %ebx$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	5d                   	pop    %ebp$/;"	l
f0106c19	obj/kern/kernel.asm	/^f0106c19:	c3                   	ret    $/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a <__spin_initlock>:$/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a:	55                   	push   %ebp$/;"	l
f0106c1b	obj/kern/kernel.asm	/^f0106c1b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106c20	obj/kern/kernel.asm	/^f0106c20:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106c29	obj/kern/kernel.asm	/^f0106c29:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	5d                   	pop    %ebp$/;"	l
f0106c34	obj/kern/kernel.asm	/^f0106c34:	c3                   	ret    $/;"	l
f0106c35	obj/kern/kernel.asm	/^f0106c35 <spin_lock>:$/;"	l
f0106c35	obj/kern/kernel.asm	/^f0106c35:	55                   	push   %ebp$/;"	l
f0106c36	obj/kern/kernel.asm	/^f0106c36:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c38	obj/kern/kernel.asm	/^f0106c38:	53                   	push   %ebx$/;"	l
f0106c39	obj/kern/kernel.asm	/^f0106c39:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0106c3c	obj/kern/kernel.asm	/^f0106c3c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106c3f	obj/kern/kernel.asm	/^f0106c3f:	89 d8                	mov    %ebx,%eax$/;"	l
f0106c41	obj/kern/kernel.asm	/^f0106c41:	e8 96 ff ff ff       	call   f0106bdc <holding>$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	85 c0                	test   %eax,%eax$/;"	l
f0106c48	obj/kern/kernel.asm	/^f0106c48:	75 0d                	jne    f0106c57 <spin_lock+0x22>$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	89 da                	mov    %ebx,%edx$/;"	l
f0106c4c	obj/kern/kernel.asm	/^f0106c4c:	b0 01                	mov    $0x1,%al$/;"	l
f0106c4e	obj/kern/kernel.asm	/^f0106c4e:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	85 c0                	test   %eax,%eax$/;"	l
f0106c53	obj/kern/kernel.asm	/^f0106c53:	75 2e                	jne    f0106c83 <spin_lock+0x4e>$/;"	l
f0106c55	obj/kern/kernel.asm	/^f0106c55:	eb 3c                	jmp    f0106c93 <spin_lock+0x5e>$/;"	l
f0106c57	obj/kern/kernel.asm	/^f0106c57:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	e8 2d fd ff ff       	call   f010698c <cpunum>$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106c63	obj/kern/kernel.asm	/^f0106c63:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	c7 44 24 08 a8 8f 10 	movl   $0xf0108fa8,0x8(%esp)$/;"	l
f0106c6e	obj/kern/kernel.asm	/^f0106c6e:	f0 $/;"	l
f0106c6f	obj/kern/kernel.asm	/^f0106c6f:	c7 44 24 04 5c 00 00 	movl   $0x5c,0x4(%esp)$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	00 $/;"	l
f0106c77	obj/kern/kernel.asm	/^f0106c77:	c7 04 24 0c 90 10 f0 	movl   $0xf010900c,(%esp)$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	e8 bd 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	f3 90                	pause  $/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a:	89 c8                	mov    %ecx,%eax$/;"	l
f0106c8c	obj/kern/kernel.asm	/^f0106c8c:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	85 c0                	test   %eax,%eax$/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	75 f5                	jne    f0106c88 <spin_lock+0x53>$/;"	l
f0106c93	obj/kern/kernel.asm	/^f0106c93:	e8 f4 fc ff ff       	call   f010698c <cpunum>$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106c9f	obj/kern/kernel.asm	/^f0106c9f:	29 c2                	sub    %eax,%edx$/;"	l
f0106ca1	obj/kern/kernel.asm	/^f0106ca1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	8d 04 85 20 f0 33 f0 	lea    -0xfcc0fe0(,%eax,4),%eax$/;"	l
f0106cab	obj/kern/kernel.asm	/^f0106cab:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106cae	obj/kern/kernel.asm	/^f0106cae:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0106cb1	obj/kern/kernel.asm	/^f0106cb1:	89 e8                	mov    %ebp,%eax$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	76 36                	jbe    f0106cf7 <spin_lock+0xc2>$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	eb 2d                	jmp    f0106cf0 <spin_lock+0xbb>$/;"	l
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	8d 9a 00 00 80 10    	lea    0x10800000(%edx),%ebx$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	81 fb ff ff 7f 0e    	cmp    $0xe7fffff,%ebx$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	77 10                	ja     f0106ce1 <spin_lock+0xac>$/;"	l
f0106cd1	obj/kern/kernel.asm	/^f0106cd1:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0106cd4	obj/kern/kernel.asm	/^f0106cd4:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	8b 12                	mov    (%edx),%edx$/;"	l
f0106cd9	obj/kern/kernel.asm	/^f0106cd9:	40                   	inc    %eax$/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	75 e4                	jne    f0106cc3 <spin_lock+0x8e>$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	eb 25                	jmp    f0106d06 <spin_lock+0xd1>$/;"	l
f0106ce1	obj/kern/kernel.asm	/^f0106ce1:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8:	40                   	inc    %eax$/;"	l
f0106ce9	obj/kern/kernel.asm	/^f0106ce9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	7e f3                	jle    f0106ce1 <spin_lock+0xac>$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	eb 16                	jmp    f0106d06 <spin_lock+0xd1>$/;"	l
f0106cf0	obj/kern/kernel.asm	/^f0106cf0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106cf5	obj/kern/kernel.asm	/^f0106cf5:	eb ea                	jmp    f0106ce1 <spin_lock+0xac>$/;"	l
f0106cf7	obj/kern/kernel.asm	/^f0106cf7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106cfa	obj/kern/kernel.asm	/^f0106cfa:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	8b 10                	mov    (%eax),%edx$/;"	l
f0106cff	obj/kern/kernel.asm	/^f0106cff:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106d04	obj/kern/kernel.asm	/^f0106d04:	eb bd                	jmp    f0106cc3 <spin_lock+0x8e>$/;"	l
f0106d06	obj/kern/kernel.asm	/^f0106d06:	83 c4 24             	add    $0x24,%esp$/;"	l
f0106d09	obj/kern/kernel.asm	/^f0106d09:	5b                   	pop    %ebx$/;"	l
f0106d0a	obj/kern/kernel.asm	/^f0106d0a:	5d                   	pop    %ebp$/;"	l
f0106d0b	obj/kern/kernel.asm	/^f0106d0b:	c3                   	ret    $/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c <spin_unlock>:$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	55                   	push   %ebp$/;"	l
f0106d0d	obj/kern/kernel.asm	/^f0106d0d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	57                   	push   %edi$/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	56                   	push   %esi$/;"	l
f0106d11	obj/kern/kernel.asm	/^f0106d11:	53                   	push   %ebx$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	89 d8                	mov    %ebx,%eax$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	e8 bd fe ff ff       	call   f0106bdc <holding>$/;"	l
f0106d1f	obj/kern/kernel.asm	/^f0106d1f:	85 c0                	test   %eax,%eax$/;"	l
f0106d21	obj/kern/kernel.asm	/^f0106d21:	0f 85 da 00 00 00    	jne    f0106e01 <spin_unlock+0xf5>$/;"	l
f0106d27	obj/kern/kernel.asm	/^f0106d27:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106d2e	obj/kern/kernel.asm	/^f0106d2e:	00 $/;"	l
f0106d2f	obj/kern/kernel.asm	/^f0106d2f:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106d32	obj/kern/kernel.asm	/^f0106d32:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d36	obj/kern/kernel.asm	/^f0106d36:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	e8 f9 f5 ff ff       	call   f010633a <memmove>$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	8a 00                	mov    (%eax),%al$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	89 c6                	mov    %eax,%esi$/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106d50	obj/kern/kernel.asm	/^f0106d50:	e8 37 fc ff ff       	call   f010698c <cpunum>$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106d5d	obj/kern/kernel.asm	/^f0106d5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	c7 04 24 d4 8f 10 f0 	movl   $0xf0108fd4,(%esp)$/;"	l
f0106d68	obj/kern/kernel.asm	/^f0106d68:	e8 a7 d8 ff ff       	call   f0104614 <cprintf>$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0106d70	obj/kern/kernel.asm	/^f0106d70:	85 c0                	test   %eax,%eax$/;"	l
f0106d72	obj/kern/kernel.asm	/^f0106d72:	74 71                	je     f0106de5 <spin_unlock+0xd9>$/;"	l
f0106d74	obj/kern/kernel.asm	/^f0106d74:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f0106d77	obj/kern/kernel.asm	/^f0106d77:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f0106d7a	obj/kern/kernel.asm	/^f0106d7a:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106d81	obj/kern/kernel.asm	/^f0106d81:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d84	obj/kern/kernel.asm	/^f0106d84:	e8 d7 e6 ff ff       	call   f0105460 <debuginfo_eip>$/;"	l
f0106d89	obj/kern/kernel.asm	/^f0106d89:	85 c0                	test   %eax,%eax$/;"	l
f0106d8b	obj/kern/kernel.asm	/^f0106d8b:	78 39                	js     f0106dc6 <spin_unlock+0xba>$/;"	l
f0106d8d	obj/kern/kernel.asm	/^f0106d8d:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106d8f	obj/kern/kernel.asm	/^f0106d8f:	89 c2                	mov    %eax,%edx$/;"	l
f0106d91	obj/kern/kernel.asm	/^f0106d91:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106d98	obj/kern/kernel.asm	/^f0106d98:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106d9f	obj/kern/kernel.asm	/^f0106d9f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106da6	obj/kern/kernel.asm	/^f0106da6:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106dad	obj/kern/kernel.asm	/^f0106dad:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106db8	obj/kern/kernel.asm	/^f0106db8:	c7 04 24 1c 90 10 f0 	movl   $0xf010901c,(%esp)$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	e8 50 d8 ff ff       	call   f0104614 <cprintf>$/;"	l
f0106dc4	obj/kern/kernel.asm	/^f0106dc4:	eb 12                	jmp    f0106dd8 <spin_unlock+0xcc>$/;"	l
f0106dc6	obj/kern/kernel.asm	/^f0106dc6:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106dcc	obj/kern/kernel.asm	/^f0106dcc:	c7 04 24 33 90 10 f0 	movl   $0xf0109033,(%esp)$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	e8 3c d8 ff ff       	call   f0104614 <cprintf>$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	39 fb                	cmp    %edi,%ebx$/;"	l
f0106dda	obj/kern/kernel.asm	/^f0106dda:	74 09                	je     f0106de5 <spin_unlock+0xd9>$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106ddf	obj/kern/kernel.asm	/^f0106ddf:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106de1	obj/kern/kernel.asm	/^f0106de1:	85 c0                	test   %eax,%eax$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	75 98                	jne    f0106d7d <spin_unlock+0x71>$/;"	l
f0106de5	obj/kern/kernel.asm	/^f0106de5:	c7 44 24 08 3b 90 10 	movl   $0xf010903b,0x8(%esp)$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	f0 $/;"	l
f0106ded	obj/kern/kernel.asm	/^f0106ded:	c7 44 24 04 8a 00 00 	movl   $0x8a,0x4(%esp)$/;"	l
f0106df4	obj/kern/kernel.asm	/^f0106df4:	00 $/;"	l
f0106df5	obj/kern/kernel.asm	/^f0106df5:	c7 04 24 0c 90 10 f0 	movl   $0xf010900c,(%esp)$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	e8 3f 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106e01	obj/kern/kernel.asm	/^f0106e01:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0106e08	obj/kern/kernel.asm	/^f0106e08:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e14	obj/kern/kernel.asm	/^f0106e14:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	5b                   	pop    %ebx$/;"	l
f0106e1b	obj/kern/kernel.asm	/^f0106e1b:	5e                   	pop    %esi$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	5f                   	pop    %edi$/;"	l
f0106e1d	obj/kern/kernel.asm	/^f0106e1d:	5d                   	pop    %ebp$/;"	l
f0106e1e	obj/kern/kernel.asm	/^f0106e1e:	c3                   	ret    $/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20 <__udivdi3>:$/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	55                   	push   %ebp$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	57                   	push   %edi$/;"	l
f0106e22	obj/kern/kernel.asm	/^f0106e22:	56                   	push   %esi$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106e26	obj/kern/kernel.asm	/^f0106e26:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f0106e2a	obj/kern/kernel.asm	/^f0106e2a:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0106e2e	obj/kern/kernel.asm	/^f0106e2e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106e32	obj/kern/kernel.asm	/^f0106e32:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f0106e36	obj/kern/kernel.asm	/^f0106e36:	89 cd                	mov    %ecx,%ebp$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f0106e3c	obj/kern/kernel.asm	/^f0106e3c:	85 c0                	test   %eax,%eax$/;"	l
f0106e3e	obj/kern/kernel.asm	/^f0106e3e:	75 2c                	jne    f0106e6c <__udivdi3+0x4c>$/;"	l
f0106e40	obj/kern/kernel.asm	/^f0106e40:	39 f9                	cmp    %edi,%ecx$/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	77 68                	ja     f0106eac <__udivdi3+0x8c>$/;"	l
f0106e44	obj/kern/kernel.asm	/^f0106e44:	85 c9                	test   %ecx,%ecx$/;"	l
f0106e46	obj/kern/kernel.asm	/^f0106e46:	75 0b                	jne    f0106e53 <__udivdi3+0x33>$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	31 d2                	xor    %edx,%edx$/;"	l
f0106e4f	obj/kern/kernel.asm	/^f0106e4f:	f7 f1                	div    %ecx$/;"	l
f0106e51	obj/kern/kernel.asm	/^f0106e51:	89 c1                	mov    %eax,%ecx$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	31 d2                	xor    %edx,%edx$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	89 f8                	mov    %edi,%eax$/;"	l
f0106e57	obj/kern/kernel.asm	/^f0106e57:	f7 f1                	div    %ecx$/;"	l
f0106e59	obj/kern/kernel.asm	/^f0106e59:	89 c7                	mov    %eax,%edi$/;"	l
f0106e5b	obj/kern/kernel.asm	/^f0106e5b:	89 f0                	mov    %esi,%eax$/;"	l
f0106e5d	obj/kern/kernel.asm	/^f0106e5d:	f7 f1                	div    %ecx$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	89 c6                	mov    %eax,%esi$/;"	l
f0106e61	obj/kern/kernel.asm	/^f0106e61:	89 f0                	mov    %esi,%eax$/;"	l
f0106e63	obj/kern/kernel.asm	/^f0106e63:	89 fa                	mov    %edi,%edx$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e68	obj/kern/kernel.asm	/^f0106e68:	5e                   	pop    %esi$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	5f                   	pop    %edi$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	5d                   	pop    %ebp$/;"	l
f0106e6b	obj/kern/kernel.asm	/^f0106e6b:	c3                   	ret    $/;"	l
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	39 f8                	cmp    %edi,%eax$/;"	l
f0106e6e	obj/kern/kernel.asm	/^f0106e6e:	77 2c                	ja     f0106e9c <__udivdi3+0x7c>$/;"	l
f0106e70	obj/kern/kernel.asm	/^f0106e70:	0f bd f0             	bsr    %eax,%esi$/;"	l
f0106e73	obj/kern/kernel.asm	/^f0106e73:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f0106e76	obj/kern/kernel.asm	/^f0106e76:	75 4c                	jne    f0106ec4 <__udivdi3+0xa4>$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	39 f8                	cmp    %edi,%eax$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	72 0a                	jb     f0106e8b <__udivdi3+0x6b>$/;"	l
f0106e81	obj/kern/kernel.asm	/^f0106e81:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	0f 87 ad 00 00 00    	ja     f0106f38 <__udivdi3+0x118>$/;"	l
f0106e8b	obj/kern/kernel.asm	/^f0106e8b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0106e90	obj/kern/kernel.asm	/^f0106e90:	89 f0                	mov    %esi,%eax$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	89 fa                	mov    %edi,%edx$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e97	obj/kern/kernel.asm	/^f0106e97:	5e                   	pop    %esi$/;"	l
f0106e98	obj/kern/kernel.asm	/^f0106e98:	5f                   	pop    %edi$/;"	l
f0106e99	obj/kern/kernel.asm	/^f0106e99:	5d                   	pop    %ebp$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	c3                   	ret    $/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	90                   	nop$/;"	l
f0106e9c	obj/kern/kernel.asm	/^f0106e9c:	31 ff                	xor    %edi,%edi$/;"	l
f0106e9e	obj/kern/kernel.asm	/^f0106e9e:	31 f6                	xor    %esi,%esi$/;"	l
f0106ea0	obj/kern/kernel.asm	/^f0106ea0:	89 f0                	mov    %esi,%eax$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	89 fa                	mov    %edi,%edx$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	5e                   	pop    %esi$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	5f                   	pop    %edi$/;"	l
f0106ea9	obj/kern/kernel.asm	/^f0106ea9:	5d                   	pop    %ebp$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	c3                   	ret    $/;"	l
f0106eab	obj/kern/kernel.asm	/^f0106eab:	90                   	nop$/;"	l
f0106eac	obj/kern/kernel.asm	/^f0106eac:	89 fa                	mov    %edi,%edx$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	89 f0                	mov    %esi,%eax$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	f7 f1                	div    %ecx$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	89 c6                	mov    %eax,%esi$/;"	l
f0106eb4	obj/kern/kernel.asm	/^f0106eb4:	31 ff                	xor    %edi,%edi$/;"	l
f0106eb6	obj/kern/kernel.asm	/^f0106eb6:	89 f0                	mov    %esi,%eax$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	89 fa                	mov    %edi,%edx$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ebd	obj/kern/kernel.asm	/^f0106ebd:	5e                   	pop    %esi$/;"	l
f0106ebe	obj/kern/kernel.asm	/^f0106ebe:	5f                   	pop    %edi$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	5d                   	pop    %ebp$/;"	l
f0106ec0	obj/kern/kernel.asm	/^f0106ec0:	c3                   	ret    $/;"	l
f0106ec1	obj/kern/kernel.asm	/^f0106ec1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106ec4	obj/kern/kernel.asm	/^f0106ec4:	89 f1                	mov    %esi,%ecx$/;"	l
f0106ec6	obj/kern/kernel.asm	/^f0106ec6:	d3 e0                	shl    %cl,%eax$/;"	d
f0106ec8	obj/kern/kernel.asm	/^f0106ec8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	29 f0                	sub    %esi,%eax$/;"	l
f0106ed3	obj/kern/kernel.asm	/^f0106ed3:	89 ea                	mov    %ebp,%edx$/;"	l
f0106ed5	obj/kern/kernel.asm	/^f0106ed5:	88 c1                	mov    %al,%cl$/;"	l
f0106ed7	obj/kern/kernel.asm	/^f0106ed7:	d3 ea                	shr    %cl,%edx$/;"	d
f0106ed9	obj/kern/kernel.asm	/^f0106ed9:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f0106edd	obj/kern/kernel.asm	/^f0106edd:	09 ca                	or     %ecx,%edx$/;"	l
f0106edf	obj/kern/kernel.asm	/^f0106edf:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	89 f1                	mov    %esi,%ecx$/;"	l
f0106ee5	obj/kern/kernel.asm	/^f0106ee5:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106ee7	obj/kern/kernel.asm	/^f0106ee7:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	89 fd                	mov    %edi,%ebp$/;"	l
f0106eed	obj/kern/kernel.asm	/^f0106eed:	88 c1                	mov    %al,%cl$/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	89 fa                	mov    %edi,%edx$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	89 f1                	mov    %esi,%ecx$/;"	l
f0106ef5	obj/kern/kernel.asm	/^f0106ef5:	d3 e2                	shl    %cl,%edx$/;"	d
f0106ef7	obj/kern/kernel.asm	/^f0106ef7:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106efb	obj/kern/kernel.asm	/^f0106efb:	88 c1                	mov    %al,%cl$/;"	l
f0106efd	obj/kern/kernel.asm	/^f0106efd:	d3 ef                	shr    %cl,%edi$/;"	d
f0106eff	obj/kern/kernel.asm	/^f0106eff:	09 d7                	or     %edx,%edi$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	89 f8                	mov    %edi,%eax$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	89 ea                	mov    %ebp,%edx$/;"	l
f0106f05	obj/kern/kernel.asm	/^f0106f05:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0106f09	obj/kern/kernel.asm	/^f0106f09:	89 d1                	mov    %edx,%ecx$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	89 c7                	mov    %eax,%edi$/;"	l
f0106f0d	obj/kern/kernel.asm	/^f0106f0d:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106f11	obj/kern/kernel.asm	/^f0106f11:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	72 17                	jb     f0106f2c <__udivdi3+0x10c>$/;"	l
f0106f15	obj/kern/kernel.asm	/^f0106f15:	74 09                	je     f0106f20 <__udivdi3+0x100>$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	89 fe                	mov    %edi,%esi$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	31 ff                	xor    %edi,%edi$/;"	l
f0106f1b	obj/kern/kernel.asm	/^f0106f1b:	e9 41 ff ff ff       	jmp    f0106e61 <__udivdi3+0x41>$/;"	l
f0106f20	obj/kern/kernel.asm	/^f0106f20:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	89 f1                	mov    %esi,%ecx$/;"	l
f0106f26	obj/kern/kernel.asm	/^f0106f26:	d3 e2                	shl    %cl,%edx$/;"	d
f0106f28	obj/kern/kernel.asm	/^f0106f28:	39 c2                	cmp    %eax,%edx$/;"	l
f0106f2a	obj/kern/kernel.asm	/^f0106f2a:	73 eb                	jae    f0106f17 <__udivdi3+0xf7>$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	31 ff                	xor    %edi,%edi$/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31:	e9 2b ff ff ff       	jmp    f0106e61 <__udivdi3+0x41>$/;"	l
f0106f36	obj/kern/kernel.asm	/^f0106f36:	66 90                	xchg   %ax,%ax$/;"	l
f0106f38	obj/kern/kernel.asm	/^f0106f38:	31 f6                	xor    %esi,%esi$/;"	l
f0106f3a	obj/kern/kernel.asm	/^f0106f3a:	e9 22 ff ff ff       	jmp    f0106e61 <__udivdi3+0x41>$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40 <__umoddi3>:$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40:	55                   	push   %ebp$/;"	l
f0106f41	obj/kern/kernel.asm	/^f0106f41:	57                   	push   %edi$/;"	l
f0106f42	obj/kern/kernel.asm	/^f0106f42:	56                   	push   %esi$/;"	l
f0106f43	obj/kern/kernel.asm	/^f0106f43:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106f46	obj/kern/kernel.asm	/^f0106f46:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0106f4a	obj/kern/kernel.asm	/^f0106f4a:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0106f52	obj/kern/kernel.asm	/^f0106f52:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106f56	obj/kern/kernel.asm	/^f0106f56:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106f5a	obj/kern/kernel.asm	/^f0106f5a:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f0106f5e	obj/kern/kernel.asm	/^f0106f5e:	89 c7                	mov    %eax,%edi$/;"	l
f0106f60	obj/kern/kernel.asm	/^f0106f60:	89 f2                	mov    %esi,%edx$/;"	l
f0106f62	obj/kern/kernel.asm	/^f0106f62:	85 ed                	test   %ebp,%ebp$/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64:	75 16                	jne    f0106f7c <__umoddi3+0x3c>$/;"	l
f0106f66	obj/kern/kernel.asm	/^f0106f66:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106f68	obj/kern/kernel.asm	/^f0106f68:	0f 86 a6 00 00 00    	jbe    f0107014 <__umoddi3+0xd4>$/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	f7 f1                	div    %ecx$/;"	l
f0106f70	obj/kern/kernel.asm	/^f0106f70:	89 d0                	mov    %edx,%eax$/;"	l
f0106f72	obj/kern/kernel.asm	/^f0106f72:	31 d2                	xor    %edx,%edx$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	5e                   	pop    %esi$/;"	l
f0106f78	obj/kern/kernel.asm	/^f0106f78:	5f                   	pop    %edi$/;"	l
f0106f79	obj/kern/kernel.asm	/^f0106f79:	5d                   	pop    %ebp$/;"	l
f0106f7a	obj/kern/kernel.asm	/^f0106f7a:	c3                   	ret    $/;"	l
f0106f7b	obj/kern/kernel.asm	/^f0106f7b:	90                   	nop$/;"	l
f0106f7c	obj/kern/kernel.asm	/^f0106f7c:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106f7e	obj/kern/kernel.asm	/^f0106f7e:	0f 87 ac 00 00 00    	ja     f0107030 <__umoddi3+0xf0>$/;"	l
f0106f84	obj/kern/kernel.asm	/^f0106f84:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f0106f87	obj/kern/kernel.asm	/^f0106f87:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0106f8a	obj/kern/kernel.asm	/^f0106f8a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0106f8e	obj/kern/kernel.asm	/^f0106f8e:	0f 84 a8 00 00 00    	je     f010703c <__umoddi3+0xfc>$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106f98	obj/kern/kernel.asm	/^f0106f98:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106f9a	obj/kern/kernel.asm	/^f0106f9a:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0106f9f	obj/kern/kernel.asm	/^f0106f9f:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106fa7	obj/kern/kernel.asm	/^f0106fa7:	89 f9                	mov    %edi,%ecx$/;"	l
f0106fa9	obj/kern/kernel.asm	/^f0106fa9:	d3 e8                	shr    %cl,%eax$/;"	d
f0106fab	obj/kern/kernel.asm	/^f0106fab:	09 e8                	or     %ebp,%eax$/;"	l
f0106fad	obj/kern/kernel.asm	/^f0106fad:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106fb5	obj/kern/kernel.asm	/^f0106fb5:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106fb9	obj/kern/kernel.asm	/^f0106fb9:	d3 e0                	shl    %cl,%eax$/;"	d
f0106fbb	obj/kern/kernel.asm	/^f0106fbb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106fbf	obj/kern/kernel.asm	/^f0106fbf:	89 f2                	mov    %esi,%edx$/;"	l
f0106fc1	obj/kern/kernel.asm	/^f0106fc1:	d3 e2                	shl    %cl,%edx$/;"	d
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106fc7	obj/kern/kernel.asm	/^f0106fc7:	d3 e0                	shl    %cl,%eax$/;"	d
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106fd1	obj/kern/kernel.asm	/^f0106fd1:	89 f9                	mov    %edi,%ecx$/;"	l
f0106fd3	obj/kern/kernel.asm	/^f0106fd3:	d3 e8                	shr    %cl,%eax$/;"	d
f0106fd5	obj/kern/kernel.asm	/^f0106fd5:	09 d0                	or     %edx,%eax$/;"	l
f0106fd7	obj/kern/kernel.asm	/^f0106fd7:	d3 ee                	shr    %cl,%esi$/;"	d
f0106fd9	obj/kern/kernel.asm	/^f0106fd9:	89 f2                	mov    %esi,%edx$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f0106fdf	obj/kern/kernel.asm	/^f0106fdf:	89 d6                	mov    %edx,%esi$/;"	l
f0106fe1	obj/kern/kernel.asm	/^f0106fe1:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106fe5	obj/kern/kernel.asm	/^f0106fe5:	89 c5                	mov    %eax,%ebp$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	89 d1                	mov    %edx,%ecx$/;"	l
f0106fe9	obj/kern/kernel.asm	/^f0106fe9:	39 d6                	cmp    %edx,%esi$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	72 67                	jb     f0107054 <__umoddi3+0x114>$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	74 75                	je     f0107064 <__umoddi3+0x124>$/;"	l
f0106fef	obj/kern/kernel.asm	/^f0106fef:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f0106ff3	obj/kern/kernel.asm	/^f0106ff3:	29 e8                	sub    %ebp,%eax$/;"	l
f0106ff5	obj/kern/kernel.asm	/^f0106ff5:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106ffb	obj/kern/kernel.asm	/^f0106ffb:	d3 e8                	shr    %cl,%eax$/;"	d
f0106ffd	obj/kern/kernel.asm	/^f0106ffd:	89 f2                	mov    %esi,%edx$/;"	l
f0106fff	obj/kern/kernel.asm	/^f0106fff:	89 f9                	mov    %edi,%ecx$/;"	l
f0107001	obj/kern/kernel.asm	/^f0107001:	d3 e2                	shl    %cl,%edx$/;"	d
f0107003	obj/kern/kernel.asm	/^f0107003:	09 d0                	or     %edx,%eax$/;"	l
f0107005	obj/kern/kernel.asm	/^f0107005:	89 f2                	mov    %esi,%edx$/;"	l
f0107007	obj/kern/kernel.asm	/^f0107007:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f010700b	obj/kern/kernel.asm	/^f010700b:	d3 ea                	shr    %cl,%edx$/;"	d
f010700d	obj/kern/kernel.asm	/^f010700d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107010	obj/kern/kernel.asm	/^f0107010:	5e                   	pop    %esi$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	5f                   	pop    %edi$/;"	l
f0107012	obj/kern/kernel.asm	/^f0107012:	5d                   	pop    %ebp$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	c3                   	ret    $/;"	l
f0107014	obj/kern/kernel.asm	/^f0107014:	85 c9                	test   %ecx,%ecx$/;"	l
f0107016	obj/kern/kernel.asm	/^f0107016:	75 0b                	jne    f0107023 <__umoddi3+0xe3>$/;"	l
f0107018	obj/kern/kernel.asm	/^f0107018:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	31 d2                	xor    %edx,%edx$/;"	l
f010701f	obj/kern/kernel.asm	/^f010701f:	f7 f1                	div    %ecx$/;"	l
f0107021	obj/kern/kernel.asm	/^f0107021:	89 c1                	mov    %eax,%ecx$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	89 f0                	mov    %esi,%eax$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	31 d2                	xor    %edx,%edx$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	f7 f1                	div    %ecx$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	89 f8                	mov    %edi,%eax$/;"	l
f010702b	obj/kern/kernel.asm	/^f010702b:	e9 3e ff ff ff       	jmp    f0106f6e <__umoddi3+0x2e>$/;"	l
f0107030	obj/kern/kernel.asm	/^f0107030:	89 f2                	mov    %esi,%edx$/;"	l
f0107032	obj/kern/kernel.asm	/^f0107032:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107035	obj/kern/kernel.asm	/^f0107035:	5e                   	pop    %esi$/;"	l
f0107036	obj/kern/kernel.asm	/^f0107036:	5f                   	pop    %edi$/;"	l
f0107037	obj/kern/kernel.asm	/^f0107037:	5d                   	pop    %ebp$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	c3                   	ret    $/;"	l
f0107039	obj/kern/kernel.asm	/^f0107039:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	39 f5                	cmp    %esi,%ebp$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	72 04                	jb     f0107044 <__umoddi3+0x104>$/;"	l
f0107040	obj/kern/kernel.asm	/^f0107040:	39 f9                	cmp    %edi,%ecx$/;"	l
f0107042	obj/kern/kernel.asm	/^f0107042:	77 06                	ja     f010704a <__umoddi3+0x10a>$/;"	l
f0107044	obj/kern/kernel.asm	/^f0107044:	89 f2                	mov    %esi,%edx$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	29 cf                	sub    %ecx,%edi$/;"	l
f0107048	obj/kern/kernel.asm	/^f0107048:	19 ea                	sbb    %ebp,%edx$/;"	l
f010704a	obj/kern/kernel.asm	/^f010704a:	89 f8                	mov    %edi,%eax$/;"	l
f010704c	obj/kern/kernel.asm	/^f010704c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010704f	obj/kern/kernel.asm	/^f010704f:	5e                   	pop    %esi$/;"	l
f0107050	obj/kern/kernel.asm	/^f0107050:	5f                   	pop    %edi$/;"	l
f0107051	obj/kern/kernel.asm	/^f0107051:	5d                   	pop    %ebp$/;"	l
f0107052	obj/kern/kernel.asm	/^f0107052:	c3                   	ret    $/;"	l
f0107053	obj/kern/kernel.asm	/^f0107053:	90                   	nop$/;"	l
f0107054	obj/kern/kernel.asm	/^f0107054:	89 d1                	mov    %edx,%ecx$/;"	l
f0107056	obj/kern/kernel.asm	/^f0107056:	89 c5                	mov    %eax,%ebp$/;"	l
f0107058	obj/kern/kernel.asm	/^f0107058:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f0107060	obj/kern/kernel.asm	/^f0107060:	eb 8d                	jmp    f0106fef <__umoddi3+0xaf>$/;"	l
f0107062	obj/kern/kernel.asm	/^f0107062:	66 90                	xchg   %ax,%ax$/;"	l
f0107064	obj/kern/kernel.asm	/^f0107064:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f0107068	obj/kern/kernel.asm	/^f0107068:	72 ea                	jb     f0107054 <__umoddi3+0x114>$/;"	l
f010706a	obj/kern/kernel.asm	/^f010706a:	89 f1                	mov    %esi,%ecx$/;"	l
f010706c	obj/kern/kernel.asm	/^f010706c:	eb 81                	jmp    f0106fef <__umoddi3+0xaf>$/;"	l
fail	grade-functions.sh	/^fail () {$/;"	f
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt	obj/user/evilhello2.asm	/^	gdt = (struct Segdesc*)(base+offset);$/;"	d
gdt	user/evilhello2.c	/^struct Segdesc* gdt;$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = (i+1)%NENV;$/;"	d
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^		i = (env_id + 1)%NENV;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int mon_c(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_changeperm(int argc, char **argv, struct Trapframe *tf) $/;"	l
int	obj/kern/kernel.asm	/^int mon_dumpmem(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_si(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_time(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_x(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sbrktest.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interval	obj/kern/kernel.asm	/^		interval = 0;$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sbrktest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sbrktest.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_c	kern/monitor.c	/^int mon_c(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_changeperm	kern/monitor.c	/^int mon_changeperm(int argc, char **argv, struct Trapframe *tf) $/;"	f
mon_dumpmem	kern/monitor.c	/^int mon_dumpmem(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_si	kern/monitor.c	/^int mon_si(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_time	kern/monitor.c	/^int mon_time(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_x	kern/monitor.c	/^int mon_x(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/badsegment.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/badsegment.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/breakpoint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/breakpoint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/divzero.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/divzero.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/dumbfork.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/dumbfork.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/fairness.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/fairness.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultalloc.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultalloc.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultallocbad.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultallocbad.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultbadhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultbadhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultdie.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultdie.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultevilhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultevilhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultnostack.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultnostack.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultread.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultread.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultreadkernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultreadkernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultregs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultregs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwrite.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwrite.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwritekernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwritekernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/forktree.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/forktree.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/hello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/hello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/idle.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/idle.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpong.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpong.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpongs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpongs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/primes.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/primes.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/sbrktest.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/sbrktest.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/softint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/softint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/spin.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/spin.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/stresssched.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/stresssched.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/testbss.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/testbss.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/yield.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/yield.asm	/^  n0 = nn.s.low;$/;"	d
n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/badsegment.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/badsegment.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/breakpoint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/breakpoint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/divzero.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/divzero.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/dumbfork.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/dumbfork.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/fairness.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/fairness.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultalloc.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultalloc.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultallocbad.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultallocbad.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultbadhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultbadhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultdie.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultdie.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultevilhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultevilhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultnostack.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultnostack.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultread.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultread.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultreadkernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultreadkernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultregs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultregs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwrite.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwrite.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwritekernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwritekernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/forktree.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/forktree.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/hello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/hello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/idle.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/idle.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpong.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpong.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpongs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpongs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/primes.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/primes.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/sbrktest.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/sbrktest.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/softint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/softint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/spin.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/spin.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/stresssched.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/stresssched.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/testbss.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/testbss.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/yield.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/yield.asm	/^  n1 = nn.s.high;$/;"	d
n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/badsegment.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/breakpoint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/divzero.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/dumbfork.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/fairness.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultalloc.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultallocbad.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultbadhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultdie.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultevilhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultnostack.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultread.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultreadkernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultregs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwrite.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwritekernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/forktree.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/hello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/idle.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpong.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpongs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/primes.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/sbrktest.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/softint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/spin.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/stresssched.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/testbss.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/yield.asm	/^	      n2 = n1 >> b;$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sbrktest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sbrktest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/evilhello2.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sbrktest.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
old	obj/user/evilhello2.asm	/^	old = *entry;$/;"	d
old	user/evilhello2.c	/^struct Segdesc old;$/;"	v	typeref:struct:Segdesc
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
overflow_me	kern/monitor.c	/^__attribute__((noinline)) overflow_me(void)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sbrktest.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '-';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc_npages	kern/pmap.c	/^page_alloc_npages(int alloc_flags, int n)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = pp;$/;"	d
page_free_npages	kern/pmap.c	/^page_free_npages(struct Page *pp, int n)$/;"	f
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_realloc_npages	kern/pmap.c	/^page_realloc_npages(struct Page *pp, int old_n, int new_n)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sbrktest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sbrktest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sbrktest.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sbrktest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(env->env_pgdir, (void*)i, 0);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/badsegment.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/breakpoint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/divzero.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/dumbfork.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/fairness.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultalloc.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultallocbad.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultbadhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultdie.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultevilhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultnostack.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultread.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultreadkernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultregs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwrite.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwritekernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/forktree.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/hello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/idle.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpong.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpongs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/primes.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/sbrktest.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/softint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/spin.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/stresssched.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/testbss.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/yield.asm	/^		  q0 = 1;$/;"	d
q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/badsegment.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/breakpoint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/divzero.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/dumbfork.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/fairness.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultalloc.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultallocbad.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultbadhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultdie.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultevilhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultnostack.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultread.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultreadkernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultregs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwrite.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwritekernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/forktree.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/hello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/idle.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpong.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpongs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/primes.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/sbrktest.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/softint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/spin.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/stresssched.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/testbss.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/yield.asm	/^	      q1 = 0;$/;"	d
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sbrktest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pretaddr	kern/monitor.c	/^read_pretaddr() {$/;"	f	file:
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sbrktest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^			ret = sys_cgetc();$/;"	d
ret	obj/kern/kernel.asm	/^			ret = sys_env_destroy(a1);$/;"	d
ret	obj/kern/kernel.asm	/^			ret = sys_getenvid();$/;"	d
ret	obj/kern/kernel.asm	/^			ret = sys_map_kernel_page((void *) a1, (void *)a2);$/;"	d
ret	obj/kern/kernel.asm	/^			ret = sys_sbrk(a1);$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sbrktest.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runexpect	grade-functions.sh	/^runexpect () {$/;"	f
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
runtest2	grade-functions.sh	/^runtest2 () {$/;"	f
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sbrktest.asm	/^	s = (char *) start;$/;"	d
s	obj/user/sbrktest.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
sfork	lib/fork.c	/^sfork(void)$/;"	f
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sbrktest.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	37;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock_test	kern/init.c	/^void spinlock_test()$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/user/sbrktest.asm	/^	start = sys_sbrk(0);$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_overflow	kern/monitor.c	/^start_overflow(void)$/;"	f
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint64_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static volatile int test_ctr = 0;$/;"	l
static	obj/user/badsegment.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static __inline void$/;"	l
static	obj/user/evilhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello2.asm	/^static long long$/;"	l
static	obj/user/evilhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sbrktest.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/sbrktest.asm	/^static inline int32_t$/;"	l
static	obj/user/sbrktest.asm	/^static long long$/;"	l
static	obj/user/sbrktest.asm	/^static unsigned long long$/;"	l
static	obj/user/sbrktest.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtoint	kern/monitor.c	/^uint32_t strtoint(char* str)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_sbrk	kern/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f	file:
sys_sbrk	lib/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
test_ctr	kern/init.c	/^static volatile int test_ctr = 0;$/;"	v	file:
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	37;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kern/kernel.asm	/^uint32_t strtoint(char* str)$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sbrktest.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned read_eip();$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = i;$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void spinlock_test()$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void evil_helper(){$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sbrktest.asm	/^void *$/;"	l
void	obj/user/sbrktest.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sbrktest.asm	/^				width = 0;$/;"	d
width	obj/user/sbrktest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sbrktest.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v

!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOCATE_SIZE	obj/user/sbrktest.asm	/^#define ALLOCATE_SIZE 4096$/;"	d
ALLOCATE_SIZE	user/sbrktest.c	3;"	d	file:
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sbrktest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon6
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon6
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	13;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sbrktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	30;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon2
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon2
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon2
ENV_PASTE3	kern/env.h	28;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon2
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon2
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	203;"	d	file:
MAXARGS	obj/kern/kernel.asm	/^#define MAXARGS 16$/;"	d
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	36;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	93;"	d
O_CREAT	inc/lib.h	95;"	d
O_EXCL	inc/lib.h	97;"	d
O_MKDIR	inc/lib.h	98;"	d
O_RDONLY	inc/lib.h	90;"	d
O_RDWR	inc/lib.h	92;"	d
O_TRUNC	inc/lib.h	96;"	d
O_WRONLY	inc/lib.h	91;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 21 20:56:15 EDT 2013$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	135;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	79;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	conf/env.mk	/^QEMU=\/home\/oslab\/qemu-1.5.2\/dist\/bin\/qemu-system-i386$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	inc/types.h	63;"	d
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STRING_SIZE	obj/user/sbrktest.asm	/^#define STRING_SIZE	  64$/;"	d
STRING_SIZE	user/sbrktest.c	4;"	d	file:
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_map_kernel_page	inc/syscall.h	/^	SYS_map_kernel_page,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_sbrk	inc/syscall.h	/^	SYS_sbrk,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     ( ENTRY_DBLFLT  , T_DBLFLT )  \/*  8 double fault*\/$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     ( ENTRY_GPFLT   , T_GPFLT  )  \/* 13 general protection fault*\/$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     ( ENTRY_PGFLT   , T_PGFLT  )  \/* 14 page fault*\/$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     ( ENTRY_SEGNP   , T_SEGNP  )  \/* 11 segment not present*\/$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     ( ENTRY_STACK   , T_STACK  )  \/* 12 stack exception*\/$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     ( ENTRY_TSS     , T_TSS    )  \/* 10 invalid task switch segment*\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     ( ENTRY_DBLFLT  , T_DBLFLT )  \/*  8 double fault*\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     ( ENTRY_GPFLT   , T_GPFLT  )  \/* 13 general protection fault*\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     ( ENTRY_PGFLT   , T_PGFLT  )  \/* 14 page fault*\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     ( ENTRY_SEGNP   , T_SEGNP  )  \/* 11 segment not present*\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     ( ENTRY_STACK   , T_STACK  )  \/* 12 stack exception*\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     ( ENTRY_TSS     , T_TSS    )  \/* 10 invalid task switch segment*\/$/;"	l
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/badsegment.asm	/^UDWtype$/;"	l
UDWtype	obj/user/breakpoint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/divzero.asm	/^UDWtype$/;"	l
UDWtype	obj/user/dumbfork.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/fairness.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultalloc.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultallocbad.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultbadhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultdie.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultevilhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultnostack.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultread.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultreadkernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultregs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwrite.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwritekernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/forktree.asm	/^UDWtype$/;"	l
UDWtype	obj/user/hello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/idle.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpong.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpongs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/primes.asm	/^UDWtype$/;"	l
UDWtype	obj/user/sbrktest.asm	/^UDWtype$/;"	l
UDWtype	obj/user/softint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/spin.asm	/^UDWtype$/;"	l
UDWtype	obj/user/stresssched.asm	/^UDWtype$/;"	l
UDWtype	obj/user/testbss.asm	/^UDWtype$/;"	l
UDWtype	obj/user/yield.asm	/^UDWtype$/;"	l
UENVS	inc/memlayout.h	114;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UPAGES	inc/memlayout.h	112;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	202;"	d	file:
WHITESPACE	obj/kern/kernel.asm	/^#define WHITESPACE "\\t\\r\\n "$/;"	d
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/badsegment.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/breakpoint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/divzero.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/dumbfork.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/fairness.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultalloc.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultallocbad.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultbadhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultdie.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultevilhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultnostack.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultread.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultreadkernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultregs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwrite.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwritekernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/forktree.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/hello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/idle.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpong.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpongs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/primes.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/sbrktest.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/softint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/spin.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/stresssched.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/testbss.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/yield.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/badsegment.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/breakpoint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/divzero.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/dumbfork.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/fairness.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultalloc.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultallocbad.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultbadhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultdie.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultevilhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultnostack.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultread.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultreadkernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultregs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwrite.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwritekernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/forktree.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/hello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/idle.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpong.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpongs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/primes.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/sbrktest.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/softint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/spin.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/stresssched.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/testbss.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/yield.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/badsegment.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/breakpoint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/divzero.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/dumbfork.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/fairness.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultalloc.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultallocbad.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultbadhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultdie.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultevilhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultnostack.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultread.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultreadkernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultregs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwrite.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwritekernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/forktree.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/hello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/idle.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpong.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpongs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/primes.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/sbrktest.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/softint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/spin.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/stresssched.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/testbss.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/yield.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sbrktest.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sbrktest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sbrktest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sbrktest.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argv0	lib/panic.c	/^const char *argv0;$/;"	v
assert	inc/assert.h	14;"	d
atomic_return_and_add	kern/spinlock.c	/^unsigned atomic_return_and_add(unsigned *addr, unsigned value)$/;"	f
b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/badsegment.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/breakpoint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/divzero.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/dumbfork.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/fairness.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultalloc.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultallocbad.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultbadhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultdie.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultevilhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultnostack.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultread.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultreadkernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultregs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwrite.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwritekernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/forktree.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/hello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/idle.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpong.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpongs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/primes.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/sbrktest.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/softint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/spin.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/stresssched.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/testbss.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/yield.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello2.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 16;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 8;$/;"	d
base	obj/user/sbrktest.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sbrktest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef int bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_region_large	kern/pmap.c	/^boot_map_region_large(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sbrktest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_fun_wrapper	user/evilhello2.c	/^call_fun_wrapper()$/;"	f	file:
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sbrktest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char user_gdt[PGSIZE*2];$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sbrktest.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab2.sh	/^check () {$/;"	f
check_continuous	kern/pmap.c	/^check_continuous(struct Page *pp, int num_page)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_n_pages	kern/pmap.c	/^check_n_pages(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_realloc_npages	kern/pmap.c	/^check_realloc_npages(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
check_va2pa_large	kern/pmap.c	/^check_va2pa_large(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
chunk_list	kern/pmap.c	/^static struct Page *chunk_list;$/;"	v	typeref:struct:Page	file:
chunk_list	obj/kern/kernel.asm	/^  chunk_list = NULL;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sbrktest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sbrktest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sbrktest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^    curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sbrktest.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/badsegment.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/badsegment.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/badsegment.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/breakpoint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/breakpoint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/breakpoint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/divzero.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/divzero.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/divzero.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/dumbfork.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/dumbfork.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/dumbfork.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/fairness.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/fairness.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/fairness.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultalloc.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultalloc.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultalloc.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultallocbad.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultallocbad.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultallocbad.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultbadhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultdie.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultdie.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultdie.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultevilhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultnostack.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultnostack.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultnostack.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultread.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultread.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultread.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultreadkernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultregs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultregs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultregs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwrite.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwrite.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwrite.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwritekernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/forktree.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/forktree.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/forktree.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/hello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/hello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/hello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/idle.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/idle.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/idle.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpong.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpong.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpong.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpongs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpongs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpongs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/primes.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/primes.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/primes.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/sbrktest.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/sbrktest.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/sbrktest.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/softint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/softint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/softint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/spin.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/spin.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/spin.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/stresssched.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/stresssched.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/stresssched.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/testbss.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/testbss.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/testbss.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/yield.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/yield.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/yield.asm	/^  d0 = dd.s.low;$/;"	d
d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/badsegment.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/badsegment.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/breakpoint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/breakpoint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/divzero.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/divzero.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/dumbfork.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/dumbfork.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/fairness.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/fairness.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultalloc.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultalloc.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultallocbad.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultallocbad.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultbadhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultbadhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultdie.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultdie.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultevilhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultevilhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultnostack.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultnostack.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultread.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultread.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultreadkernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultreadkernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultregs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultregs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwrite.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwrite.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwritekernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwritekernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/forktree.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/forktree.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/hello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/hello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/idle.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/idle.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpong.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpong.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpongs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpongs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/primes.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/primes.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/sbrktest.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/sbrktest.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/softint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/softint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/spin.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/spin.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/stresssched.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/stresssched.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/testbss.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/testbss.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/yield.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/yield.asm	/^  d1 = dd.s.high;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/kern/kernel.asm	/^    default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/evilhello2.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sbrktest.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
do_overflow	kern/monitor.c	/^do_overflow(void)$/;"	f
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sbrktest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^      ebp = (uint32_t *) (*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end	obj/user/sbrktest.asm	/^	end = sys_sbrk(ALLOCATE_SIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^    env_free_list = &envs[i];$/;"	d
env_heap_bottom	inc/env.h	/^  uintptr_t env_heap_bottom;$/;"	m	struct:Env
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sbrktest.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^  envs  = (struct Env  * ) boot_alloc(NENV   * sizeof (struct Env )); \/\/[TODO memset?]$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^  eph = ph + elf->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sbrktest.asm	/^				err = -err;$/;"	d
err	obj/user/sbrktest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
evil	user/evilhello2.c	/^void evil()$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 80 12 00       	mov    $0x128000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f010002b	obj/kern/kernel.asm	/^f010002b:	83 c8 10             	or     $0x10,%eax$/;"	l
f010002e	obj/kern/kernel.asm	/^f010002e:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f0100031	obj/kern/kernel.asm	/^f0100031:	b8 38 00 10 f0       	mov    $0xf0100038,%eax$/;"	l
f0100036	obj/kern/kernel.asm	/^f0100036:	ff e0                	jmp    *%eax$/;"	l
f0100038	obj/kern/kernel.asm	/^f0100038 <relocated>:$/;"	l
f0100038	obj/kern/kernel.asm	/^f0100038:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d:	bc 00 80 12 f0       	mov    $0xf0128000,%esp$/;"	l
f0100042	obj/kern/kernel.asm	/^f0100042:	e8 f3 00 00 00       	call   f010013a <i386_init>$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047 <spin>:$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	eb fe                	jmp    f0100047 <spin>$/;"	l
f0100049	obj/kern/kernel.asm	/^f0100049:	00 00                	add    %al,(%eax)$/;"	l
f010004c	obj/kern/kernel.asm	/^f010004c <_panic>:$/;"	l
f010004c	obj/kern/kernel.asm	/^f010004c:	55                   	push   %ebp$/;"	l
f010004d	obj/kern/kernel.asm	/^f010004d:	89 e5                	mov    %esp,%ebp$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	56                   	push   %esi$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	53                   	push   %ebx$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	83 3d a0 3e 34 f0 00 	cmpl   $0x0,0xf0343ea0$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	75 46                	jne    f01000a6 <_panic+0x5a>$/;"	l
f0100060	obj/kern/kernel.asm	/^f0100060:	89 35 a0 3e 34 f0    	mov    %esi,0xf0343ea0$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	fa                   	cli    $/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	fc                   	cld    $/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	e8 88 67 00 00       	call   f01067f8 <cpunum>$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	c7 04 24 e0 6e 10 f0 	movl   $0xf0106ee0,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 9e 3f 00 00       	call   f010402c <cprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 5f 3f 00 00       	call   f0103ff9 <vcprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 4a 80 10 f0 	movl   $0xf010804a,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 86 3f 00 00       	call   f010402c <cprintf>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	e8 49 0d 00 00       	call   f0100dfb <monitor>$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	eb f2                	jmp    f01000a6 <_panic+0x5a>$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4 <mp_main>:$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	55                   	push   %ebp$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01000bf	obj/kern/kernel.asm	/^f01000bf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	77 20                	ja     f01000e6 <mp_main+0x32>$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	f0 $/;"	l
f01000d2	obj/kern/kernel.asm	/^f01000d2:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	00 $/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	c7 04 24 a6 6f 10 f0 	movl   $0xf0106fa6,(%esp)$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	e8 66 ff ff ff       	call   f010004c <_panic>$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	e8 05 67 00 00       	call   f01067f8 <cpunum>$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	c7 04 24 b2 6f 10 f0 	movl   $0xf0106fb2,(%esp)$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	e8 29 3f 00 00       	call   f010402c <cprintf>$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	e8 0b 67 00 00       	call   f0106813 <lapic_init>$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	e8 ec 35 00 00       	call   f01036f9 <env_init_percpu>$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	e8 36 3f 00 00       	call   f0104048 <trap_init_percpu>$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	e8 e1 66 00 00       	call   f01067f8 <cpunum>$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	81 c2 20 40 34 f0    	add    $0xf0344020,%edx$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 6a 69 00 00       	call   f0106a9f <spin_lock>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	e8 92 49 00 00       	call   f0104acc <sched_yield>$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a <i386_init>:$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	55                   	push   %ebp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	89 e5                	mov    %esp,%ebp$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	53                   	push   %ebx$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	b8 04 50 38 f0       	mov    $0xf0385004,%eax$/;"	l
f0100146	obj/kern/kernel.asm	/^f0100146:	2d 5d 24 34 f0       	sub    $0xf034245d,%eax$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	00 $/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	c7 04 24 5d 24 34 f0 	movl   $0xf034245d,(%esp)$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	e8 34 60 00 00       	call   f0106197 <memset>$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	e8 5e 06 00 00       	call   f01007c6 <cons_init>$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	00 $/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	c7 04 24 c8 6f 10 f0 	movl   $0xf0106fc8,(%esp)$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	e8 b0 3e 00 00       	call   f010402c <cprintf>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	e8 82 16 00 00       	call   f0101803 <mem_init>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	e8 9d 35 00 00       	call   f0103723 <env_init>$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	e8 02 40 00 00       	call   f010418d <trap_init>$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	e8 7a 63 00 00       	call   f010650a <mp_init>$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	e8 7e 66 00 00       	call   f0106813 <lapic_init>$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	e8 de 3d 00 00       	call   f0103f78 <pic_init>$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	e8 f9 68 00 00       	call   f0106a9f <spin_lock>$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	83 3d a8 3e 34 f0 07 	cmpl   $0x7,0xf0343ea8$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	77 24                	ja     f01001d3 <i386_init+0x99>$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	00 $/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	f0 $/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	00 $/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	c7 04 24 a6 6f 10 f0 	movl   $0xf0106fa6,(%esp)$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	e8 79 fe ff ff       	call   f010004c <_panic>$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	b8 22 64 10 f0       	mov    $0xf0106422,%eax$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	2d a8 63 10 f0       	sub    $0xf01063a8,%eax$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	c7 44 24 04 a8 63 10 	movl   $0xf01063a8,0x4(%esp)$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	f0 $/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	e8 ec 5f 00 00       	call   f01061e1 <memmove>$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	a1 c4 43 34 f0       	mov    0xf03443c4,%eax$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	29 c2                	sub    %eax,%edx$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	3d 20 40 34 f0       	cmp    $0xf0344020,%eax$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	0f 86 94 00 00 00    	jbe    f01002ac <i386_init+0x172>$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	bb 20 40 34 f0       	mov    $0xf0344020,%ebx$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	e8 d6 65 00 00       	call   f01067f8 <cpunum>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	29 c2                	sub    %eax,%edx$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	74 50                	je     f0100289 <i386_init+0x14f>$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	89 d8                	mov    %ebx,%eax$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	2d 20 40 34 f0       	sub    $0xf0344020,%eax$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	8d 14 d0             	lea    (%eax,%edx,8),%edx$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	89 d1                	mov    %edx,%ecx$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	29 d1                	sub    %edx,%ecx$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	89 d1                	mov    %edx,%ecx$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	c1 e1 0e             	shl    $0xe,%ecx$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	29 d1                	sub    %edx,%ecx$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	8d 44 90 01          	lea    0x1(%eax,%edx,4),%eax$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	05 00 50 34 f0       	add    $0xf0345000,%eax$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	a3 a4 3e 34 f0       	mov    %eax,0xf0343ea4$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	00 $/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	e8 d3 66 00 00       	call   f0106954 <lapic_startap>$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	75 f8                	jne    f0100281 <i386_init+0x147>$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	a1 c4 43 34 f0       	mov    0xf03443c4,%eax$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	29 c2                	sub    %eax,%edx$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	0f 82 71 ff ff ff    	jb     f010021d <i386_init+0xe3>$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	00 $/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	c7 44 24 04 c2 0b 01 	movl   $0x10bc2,0x4(%esp)$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	00 $/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	c7 04 24 8d 55 22 f0 	movl   $0xf022558d,(%esp)$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	e8 e2 36 00 00       	call   f01039af <env_create>$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	4b                   	dec    %ebx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	75 e1                	jne    f01002b1 <i386_init+0x177>$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	00 $/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	c7 44 24 04 85 0c 01 	movl   $0x10c85,0x4(%esp)$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	00 $/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	c7 04 24 d8 17 33 f0 	movl   $0xf03317d8,(%esp)$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	e8 c3 36 00 00       	call   f01039af <env_create>$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	e8 db 47 00 00       	call   f0104acc <sched_yield>$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1 <spinlock_test>:$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	55                   	push   %ebp$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	56                   	push   %esi$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	53                   	push   %ebx$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	e8 f3 64 00 00       	call   f01067f8 <cpunum>$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	85 c0                	test   %eax,%eax$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	75 10                	jne    f0100319 <spinlock_test+0x28>$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	7e 0c                	jle    f0100325 <spinlock_test+0x34>$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	bb 64 00 00 00       	mov    $0x64,%ebx$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	be 10 27 00 00       	mov    $0x2710,%esi$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	eb 14                	jmp    f0100339 <spinlock_test+0x48>$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	f3 90                	pause  $/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	7e ee                	jle    f0100325 <spinlock_test+0x34>$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	eb e0                	jmp    f0100319 <spinlock_test+0x28>$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	e8 5a 67 00 00       	call   f0106a9f <spin_lock>$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	a1 00 30 34 f0       	mov    0xf0343000,%eax$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	99                   	cltd   $/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	f7 fe                	idiv   %esi$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	85 d2                	test   %edx,%edx$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	74 1c                	je     f010036d <spinlock_test+0x7c>$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	c7 44 24 08 4c 6f 10 	movl   $0xf0106f4c,0x8(%esp)$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	f0 $/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	c7 44 24 04 24 00 00 	movl   $0x24,0x4(%esp)$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	00 $/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	c7 04 24 a6 6f 10 f0 	movl   $0xf0106fa6,(%esp)$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	e8 df fc ff ff       	call   f010004c <_panic>$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	7f 1b                	jg     f010039f <spinlock_test+0xae>$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	a1 00 30 34 f0       	mov    0xf0343000,%eax$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	40                   	inc    %eax$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	a3 00 30 34 f0       	mov    %eax,0xf0343000$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	7e e5                	jle    f0100384 <spinlock_test+0x93>$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	e8 cb 67 00 00       	call   f0106b76 <spin_unlock>$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	f3 90                	pause  $/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	4b                   	dec    %ebx$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	75 89                	jne    f0100339 <spinlock_test+0x48>$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	e8 e3 66 00 00       	call   f0106a9f <spin_lock>$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	e8 37 64 00 00       	call   f01067f8 <cpunum>$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	c7 04 24 80 6f 10 f0 	movl   $0xf0106f80,(%esp)$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	e8 5b 3c 00 00       	call   f010402c <cprintf>$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	e8 99 67 00 00       	call   f0106b76 <spin_unlock>$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	f3 90                	pause  $/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	83 c4 20             	add    $0x20,%esp$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	5b                   	pop    %ebx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	5e                   	pop    %esi$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	5d                   	pop    %ebp$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	c3                   	ret    $/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6 <_warn>:$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	55                   	push   %ebp$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	53                   	push   %ebx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	c7 04 24 e3 6f 10 f0 	movl   $0xf0106fe3,(%esp)$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	e8 22 3c 00 00       	call   f010402c <cprintf>$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	e8 e0 3b 00 00       	call   f0103ff9 <vcprintf>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	c7 04 24 4a 80 10 f0 	movl   $0xf010804a,(%esp)$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	e8 07 3c 00 00       	call   f010402c <cprintf>$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	5b                   	pop    %ebx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	5d                   	pop    %ebp$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	c3                   	ret    $/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c <delay>:$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	55                   	push   %ebp$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	89 e5                	mov    %esp,%ebp$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	ec                   	in     (%dx),%al$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	ec                   	in     (%dx),%al$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	ec                   	in     (%dx),%al$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	ec                   	in     (%dx),%al$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	5d                   	pop    %ebp$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	c3                   	ret    $/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a <serial_proc_data>:$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	55                   	push   %ebp$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	89 e5                	mov    %esp,%ebp$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	ec                   	in     (%dx),%al$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	a8 01                	test   $0x1,%al$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	74 08                	je     f010044f <serial_proc_data+0x15>$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	ec                   	in     (%dx),%al$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	eb 05                	jmp    f0100454 <serial_proc_data+0x1a>$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	5d                   	pop    %ebp$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	c3                   	ret    $/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456 <cons_intr>:$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	55                   	push   %ebp$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	89 e5                	mov    %esp,%ebp$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	53                   	push   %ebx$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	89 c3                	mov    %eax,%ebx$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	eb 29                	jmp    f010048a <cons_intr+0x34>$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	85 c0                	test   %eax,%eax$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	74 25                	je     f010048a <cons_intr+0x34>$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	8b 15 44 32 34 f0    	mov    0xf0343244,%edx$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	88 82 40 30 34 f0    	mov    %al,-0xfcbcfc0(%edx)$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	a3 44 32 34 f0       	mov    %eax,0xf0343244$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	75 0a                	jne    f010048a <cons_intr+0x34>$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	c7 05 44 32 34 f0 00 	movl   $0x0,0xf0343244$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	00 00 00 $/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	ff d3                	call   *%ebx$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	75 d0                	jne    f0100461 <cons_intr+0xb>$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	5b                   	pop    %ebx$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	5d                   	pop    %ebp$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	c3                   	ret    $/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497 <cons_putc>:$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	55                   	push   %ebp$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	89 e5                	mov    %esp,%ebp$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	57                   	push   %edi$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	56                   	push   %esi$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	53                   	push   %ebx$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	89 c6                	mov    %eax,%esi$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	ec                   	in     (%dx),%al$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	a8 20                	test   $0x20,%al$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	75 19                	jne    f01004c5 <cons_putc+0x2e>$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	e8 71 ff ff ff       	call   f010042c <delay>$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	89 fa                	mov    %edi,%edx$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	ec                   	in     (%dx),%al$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	a8 20                	test   $0x20,%al$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	75 03                	jne    f01004c5 <cons_putc+0x2e>$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	4b                   	dec    %ebx$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	75 f1                	jne    f01004b6 <cons_putc+0x1f>$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	89 f7                	mov    %esi,%edi$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	89 f0                	mov    %esi,%eax$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	ee                   	out    %al,(%dx)$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	b2 79                	mov    $0x79,%dl$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	ec                   	in     (%dx),%al$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	84 c0                	test   %al,%al$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	78 17                	js     f01004ed <cons_putc+0x56>$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	e8 4c ff ff ff       	call   f010042c <delay>$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	ec                   	in     (%dx),%al$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	84 c0                	test   %al,%al$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	78 03                	js     f01004ed <cons_putc+0x56>$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	4b                   	dec    %ebx$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	75 ee                	jne    f01004db <cons_putc+0x44>$/;"	l
f01004ed	obj/kern/kernel.asm	/^f01004ed:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	89 f8                	mov    %edi,%eax$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	ee                   	out    %al,(%dx)$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	b0 0d                	mov    $0xd,%al$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	ee                   	out    %al,(%dx)$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	b0 08                	mov    $0x8,%al$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	ee                   	out    %al,(%dx)$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	75 06                	jne    f010050b <cons_putc+0x74>$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	89 f0                	mov    %esi,%eax$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	74 78                	je     f010058f <cons_putc+0xf8>$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	7f 0b                	jg     f0100527 <cons_putc+0x90>$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	0f 85 9e 00 00 00    	jne    f01005c3 <cons_putc+0x12c>$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	eb 10                	jmp    f0100537 <cons_putc+0xa0>$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	74 39                	je     f0100565 <cons_putc+0xce>$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	0f 85 8e 00 00 00    	jne    f01005c3 <cons_putc+0x12c>$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	eb 36                	jmp    f010056d <cons_putc+0xd6>$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	66 a1 54 32 34 f0    	mov    0xf0343254,%ax$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	66 85 c0             	test   %ax,%ax$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	0f 84 e2 00 00 00    	je     f0100628 <cons_putc+0x191>$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	48                   	dec    %eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	66 a3 54 32 34 f0    	mov    %ax,0xf0343254$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	83 ce 20             	or     $0x20,%esi$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	8b 15 50 32 34 f0    	mov    0xf0343250,%edx$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	eb 78                	jmp    f01005dd <cons_putc+0x146>$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	66 83 05 54 32 34 f0 	addw   $0x50,0xf0343254$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	50 $/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	66 8b 0d 54 32 34 f0 	mov    0xf0343254,%cx$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	89 c8                	mov    %ecx,%eax$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	66 f7 f3             	div    %bx$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	66 29 d1             	sub    %dx,%cx$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	66 89 0d 54 32 34 f0 	mov    %cx,0xf0343254$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	eb 4e                	jmp    f01005dd <cons_putc+0x146>$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	e8 fe fe ff ff       	call   f0100497 <cons_putc>$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	e8 f4 fe ff ff       	call   f0100497 <cons_putc>$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	e8 ea fe ff ff       	call   f0100497 <cons_putc>$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	e8 e0 fe ff ff       	call   f0100497 <cons_putc>$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	e8 d6 fe ff ff       	call   f0100497 <cons_putc>$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	eb 1a                	jmp    f01005dd <cons_putc+0x146>$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	66 a1 54 32 34 f0    	mov    0xf0343254,%ax$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	8b 15 50 32 34 f0    	mov    0xf0343250,%edx$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	40                   	inc    %eax$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	66 a3 54 32 34 f0    	mov    %ax,0xf0343254$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	66 81 3d 54 32 34 f0 	cmpw   $0x7cf,0xf0343254$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	cf 07 $/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	76 40                	jbe    f0100628 <cons_putc+0x191>$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	a1 50 32 34 f0       	mov    0xf0343250,%eax$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	00 $/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	e8 da 5b 00 00       	call   f01061e1 <memmove>$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	8b 15 50 32 34 f0    	mov    0xf0343250,%edx$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	40                   	inc    %eax$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	75 f2                	jne    f0100612 <cons_putc+0x17b>$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	66 83 2d 54 32 34 f0 	subw   $0x50,0xf0343254$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	50 $/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	8b 0d 4c 32 34 f0    	mov    0xf034324c,%ecx$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	b0 0e                	mov    $0xe,%al$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	89 ca                	mov    %ecx,%edx$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	ee                   	out    %al,(%dx)$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	66 8b 35 54 32 34 f0 	mov    0xf0343254,%si$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	89 f0                	mov    %esi,%eax$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	89 da                	mov    %ebx,%edx$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	ee                   	out    %al,(%dx)$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	b0 0f                	mov    $0xf,%al$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	89 ca                	mov    %ecx,%edx$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	ee                   	out    %al,(%dx)$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	89 f0                	mov    %esi,%eax$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	89 da                	mov    %ebx,%edx$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	ee                   	out    %al,(%dx)$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	5b                   	pop    %ebx$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	5e                   	pop    %esi$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	5f                   	pop    %edi$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	5d                   	pop    %ebp$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	c3                   	ret    $/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658 <kbd_proc_data>:$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	55                   	push   %ebp$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	89 e5                	mov    %esp,%ebp$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	53                   	push   %ebx$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	ec                   	in     (%dx),%al$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	a8 01                	test   $0x1,%al$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	0f 84 d8 00 00 00    	je     f0100745 <kbd_proc_data+0xed>$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	b2 60                	mov    $0x60,%dl$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	ec                   	in     (%dx),%al$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	88 c2                	mov    %al,%dl$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	75 11                	jne    f0100687 <kbd_proc_data+0x2f>$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	83 0d 48 32 34 f0 40 	orl    $0x40,0xf0343248$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	e9 c3 00 00 00       	jmp    f010074a <kbd_proc_data+0xf2>$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	84 c0                	test   %al,%al$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	79 33                	jns    f01006be <kbd_proc_data+0x66>$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	8b 0d 48 32 34 f0    	mov    0xf0343248,%ecx$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	75 05                	jne    f010069b <kbd_proc_data+0x43>$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	88 c2                	mov    %al,%dl$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	8a 82 40 70 10 f0    	mov    -0xfef8fc0(%edx),%al$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	83 c8 40             	or     $0x40,%eax$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	f7 d0                	not    %eax$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	21 c1                	and    %eax,%ecx$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	89 0d 48 32 34 f0    	mov    %ecx,0xf0343248$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	e9 8c 00 00 00       	jmp    f010074a <kbd_proc_data+0xf2>$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	8b 0d 48 32 34 f0    	mov    0xf0343248,%ecx$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	74 0e                	je     f01006d7 <kbd_proc_data+0x7f>$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	88 c2                	mov    %al,%dl$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	89 0d 48 32 34 f0    	mov    %ecx,0xf0343248$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	0f b6 82 40 70 10 f0 	movzbl -0xfef8fc0(%edx),%eax$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	0b 05 48 32 34 f0    	or     0xf0343248,%eax$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	0f b6 8a 40 71 10 f0 	movzbl -0xfef8ec0(%edx),%ecx$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	31 c8                	xor    %ecx,%eax$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	a3 48 32 34 f0       	mov    %eax,0xf0343248$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	89 c1                	mov    %eax,%ecx$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	8b 0c 8d 40 72 10 f0 	mov    -0xfef8dc0(,%ecx,4),%ecx$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	a8 08                	test   $0x8,%al$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	74 18                	je     f0100721 <kbd_proc_data+0xc9>$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	77 05                	ja     f0100716 <kbd_proc_data+0xbe>$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	eb 0b                	jmp    f0100721 <kbd_proc_data+0xc9>$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	77 03                	ja     f0100721 <kbd_proc_data+0xc9>$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	f7 d0                	not    %eax$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	a8 06                	test   $0x6,%al$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	75 23                	jne    f010074a <kbd_proc_data+0xf2>$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	75 1b                	jne    f010074a <kbd_proc_data+0xf2>$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	c7 04 24 fd 6f 10 f0 	movl   $0xf0106ffd,(%esp)$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	e8 f1 38 00 00       	call   f010402c <cprintf>$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	b0 03                	mov    $0x3,%al$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	ee                   	out    %al,(%dx)$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	eb 05                	jmp    f010074a <kbd_proc_data+0xf2>$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	89 d8                	mov    %ebx,%eax$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	5b                   	pop    %ebx$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	5d                   	pop    %ebp$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	c3                   	ret    $/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752 <serial_intr>:$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	55                   	push   %ebp$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	89 e5                	mov    %esp,%ebp$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	83 3d 20 30 34 f0 00 	cmpl   $0x0,0xf0343020$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	74 0a                	je     f010076b <serial_intr+0x19>$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	b8 3a 04 10 f0       	mov    $0xf010043a,%eax$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	e8 eb fc ff ff       	call   f0100456 <cons_intr>$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	c9                   	leave  $/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	c3                   	ret    $/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d <kbd_intr>:$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	55                   	push   %ebp$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	b8 58 06 10 f0       	mov    $0xf0100658,%eax$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	e8 d9 fc ff ff       	call   f0100456 <cons_intr>$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	c9                   	leave  $/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	c3                   	ret    $/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f <cons_getc>:$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	55                   	push   %ebp$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	89 e5                	mov    %esp,%ebp$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	e8 c8 ff ff ff       	call   f0100752 <serial_intr>$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	e8 de ff ff ff       	call   f010076d <kbd_intr>$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	8b 15 40 32 34 f0    	mov    0xf0343240,%edx$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	3b 15 44 32 34 f0    	cmp    0xf0343244,%edx$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	74 22                	je     f01007bf <cons_getc+0x40>$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	0f b6 82 40 30 34 f0 	movzbl -0xfcbcfc0(%edx),%eax$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	42                   	inc    %edx$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	89 15 40 32 34 f0    	mov    %edx,0xf0343240$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	75 11                	jne    f01007c4 <cons_getc+0x45>$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	c7 05 40 32 34 f0 00 	movl   $0x0,0xf0343240$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	00 00 00 $/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	eb 05                	jmp    f01007c4 <cons_getc+0x45>$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	c9                   	leave  $/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	c3                   	ret    $/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6 <cons_init>:$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	55                   	push   %ebp$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	57                   	push   %edi$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	56                   	push   %esi$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	53                   	push   %ebx$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	5a a5 $/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	74 11                	je     f01007fc <cons_init+0x36>$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	c7 05 4c 32 34 f0 b4 	movl   $0x3b4,0xf034324c$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	03 00 00 $/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	eb 16                	jmp    f0100812 <cons_init+0x4c>$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	c7 05 4c 32 34 f0 d4 	movl   $0x3d4,0xf034324c$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	03 00 00 $/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	8b 0d 4c 32 34 f0    	mov    0xf034324c,%ecx$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	b0 0e                	mov    $0xe,%al$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	89 ca                	mov    %ecx,%edx$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	ee                   	out    %al,(%dx)$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	89 da                	mov    %ebx,%edx$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	ec                   	in     (%dx),%al$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	b0 0f                	mov    $0xf,%al$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	89 ca                	mov    %ecx,%edx$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	ee                   	out    %al,(%dx)$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	89 da                	mov    %ebx,%edx$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	ec                   	in     (%dx),%al$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	89 35 50 32 34 f0    	mov    %esi,0xf0343250$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	09 df                	or     %ebx,%edi$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	66 89 3d 54 32 34 f0 	mov    %di,0xf0343254$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	e8 25 ff ff ff       	call   f010076d <kbd_intr>$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	0f b7 05 88 a3 12 f0 	movzwl 0xf012a388,%eax$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	e8 a8 36 00 00       	call   f0103f04 <irq_setmask_8259A>$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	b0 00                	mov    $0x0,%al$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	89 da                	mov    %ebx,%edx$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	ee                   	out    %al,(%dx)$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	b0 80                	mov    $0x80,%al$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	ee                   	out    %al,(%dx)$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	b0 0c                	mov    $0xc,%al$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	89 ca                	mov    %ecx,%edx$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	ee                   	out    %al,(%dx)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	b0 00                	mov    $0x0,%al$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	ee                   	out    %al,(%dx)$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	b0 03                	mov    $0x3,%al$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	ee                   	out    %al,(%dx)$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	b0 00                	mov    $0x0,%al$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	ee                   	out    %al,(%dx)$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	b0 01                	mov    $0x1,%al$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	ee                   	out    %al,(%dx)$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	b2 fd                	mov    $0xfd,%dl$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	ec                   	in     (%dx),%al$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	3c ff                	cmp    $0xff,%al$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	0f 95 c0             	setne  %al$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	89 c6                	mov    %eax,%esi$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	a3 20 30 34 f0       	mov    %eax,0xf0343020$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	89 da                	mov    %ebx,%edx$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	ec                   	in     (%dx),%al$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	89 ca                	mov    %ecx,%edx$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	ec                   	in     (%dx),%al$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	85 f6                	test   %esi,%esi$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	75 0c                	jne    f01008b1 <cons_init+0xeb>$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	c7 04 24 09 70 10 f0 	movl   $0xf0107009,(%esp)$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	e8 7b 37 00 00       	call   f010402c <cprintf>$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	5b                   	pop    %ebx$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	5e                   	pop    %esi$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	5f                   	pop    %edi$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	5d                   	pop    %ebp$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	c3                   	ret    $/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9 <cputchar>:$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	55                   	push   %ebp$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	e8 d0 fb ff ff       	call   f0100497 <cons_putc>$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	c9                   	leave  $/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	c3                   	ret    $/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9 <getchar>:$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	55                   	push   %ebp$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	e8 ab fe ff ff       	call   f010077f <cons_getc>$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	85 c0                	test   %eax,%eax$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	74 f7                	je     f01008cf <getchar+0x6>$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	c9                   	leave  $/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	c3                   	ret    $/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da <iscons>:$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	55                   	push   %ebp$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	89 e5                	mov    %esp,%ebp$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	5d                   	pop    %ebp$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	c3                   	ret    $/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4 <mon_c>:$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	55                   	push   %ebp$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	85 c0                	test   %eax,%eax$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	74 0e                	je     f01008ff <mon_c+0x1b>$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	eb 11                	jmp    f0100910 <mon_c+0x2c>$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	c7 04 24 50 72 10 f0 	movl   $0xf0107250,(%esp)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	e8 21 37 00 00       	call   f010402c <cprintf>$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	c9                   	leave  $/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	c3                   	ret    $/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912 <do_overflow>:$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	55                   	push   %ebp$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	89 e5                	mov    %esp,%ebp$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	c7 04 24 b3 74 10 f0 	movl   $0xf01074b3,(%esp)$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	e8 08 37 00 00       	call   f010402c <cprintf>$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	c9                   	leave  $/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	c3                   	ret    $/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926 <mon_kerninfo>:$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	55                   	push   %ebp$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	89 e5                	mov    %esp,%ebp$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	c7 04 24 c5 74 10 f0 	movl   $0xf01074c5,(%esp)$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	e8 f4 36 00 00       	call   f010402c <cprintf>$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	00 $/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	f0 $/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	c7 04 24 78 72 10 f0 	movl   $0xf0107278,(%esp)$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	e8 d8 36 00 00       	call   f010402c <cprintf>$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	c7 44 24 08 d2 6e 10 	movl   $0x106ed2,0x8(%esp)$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	00 $/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	c7 44 24 04 d2 6e 10 	movl   $0xf0106ed2,0x4(%esp)$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	f0 $/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	c7 04 24 9c 72 10 f0 	movl   $0xf010729c,(%esp)$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	e8 bc 36 00 00       	call   f010402c <cprintf>$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	c7 44 24 08 5d 24 34 	movl   $0x34245d,0x8(%esp)$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	00 $/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	c7 44 24 04 5d 24 34 	movl   $0xf034245d,0x4(%esp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	f0 $/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	c7 04 24 c0 72 10 f0 	movl   $0xf01072c0,(%esp)$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	e8 a0 36 00 00       	call   f010402c <cprintf>$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	c7 44 24 08 04 50 38 	movl   $0x385004,0x8(%esp)$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	00 $/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	c7 44 24 04 04 50 38 	movl   $0xf0385004,0x4(%esp)$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	f0 $/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	c7 04 24 e4 72 10 f0 	movl   $0xf01072e4,(%esp)$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	e8 84 36 00 00       	call   f010402c <cprintf>$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	b8 03 54 38 f0       	mov    $0xf0385403,%eax$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	89 c2                	mov    %eax,%edx$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	85 c0                	test   %eax,%eax$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	79 06                	jns    f01009be <mon_kerninfo+0x98>$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	c7 04 24 08 73 10 f0 	movl   $0xf0107308,(%esp)$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	e8 5b 36 00 00       	call   f010402c <cprintf>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	c9                   	leave  $/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	c3                   	ret    $/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8 <mon_help>:$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	55                   	push   %ebp$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	53                   	push   %ebx$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	8b 83 24 76 10 f0    	mov    -0xfef89dc(%ebx),%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	8b 83 20 76 10 f0    	mov    -0xfef89e0(%ebx),%eax$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	c7 04 24 de 74 10 f0 	movl   $0xf01074de,(%esp)$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	e8 28 36 00 00       	call   f010402c <cprintf>$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 fb 54             	cmp    $0x54,%ebx$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	75 d8                	jne    f01009e4 <mon_help+0xc>$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	5b                   	pop    %ebx$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	5d                   	pop    %ebp$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	c3                   	ret    $/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17 <runcmd>:$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	55                   	push   %ebp$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	57                   	push   %edi$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	56                   	push   %esi$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	53                   	push   %ebx$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	89 55 a4             	mov    %edx,-0x5c(%ebp)$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	eb 04                	jmp    f0100a37 <runcmd+0x20>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	43                   	inc    %ebx$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	8a 03                	mov    (%ebx),%al$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	84 c0                	test   %al,%al$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	74 6c                	je     f0100aa9 <runcmd+0x92>$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	c7 04 24 e7 74 10 f0 	movl   $0xf01074e7,(%esp)$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	e8 f6 56 00 00       	call   f0106146 <strchr>$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	85 c0                	test   %eax,%eax$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	75 df                	jne    f0100a33 <runcmd+0x1c>$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	74 50                	je     f0100aa9 <runcmd+0x92>$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	75 1e                	jne    f0100a7c <runcmd+0x65>$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	00 $/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	c7 04 24 ec 74 10 f0 	movl   $0xf01074ec,(%esp)$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	e8 ba 35 00 00       	call   f010402c <cprintf>$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	e9 9d 00 00 00       	jmp    f0100b19 <runcmd+0x102>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	46                   	inc    %esi$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	8a 03                	mov    (%ebx),%al$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	84 c0                	test   %al,%al$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	75 09                	jne    f0100a90 <runcmd+0x79>$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	eb ae                	jmp    f0100a37 <runcmd+0x20>$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	43                   	inc    %ebx$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	8a 03                	mov    (%ebx),%al$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	84 c0                	test   %al,%al$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	74 a7                	je     f0100a37 <runcmd+0x20>$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	c7 04 24 e7 74 10 f0 	movl   $0xf01074e7,(%esp)$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	e8 a3 56 00 00       	call   f0106146 <strchr>$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	85 c0                	test   %eax,%eax$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	74 e2                	je     f0100a89 <runcmd+0x72>$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	eb 8e                	jmp    f0100a37 <runcmd+0x20>$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	00 $/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	85 f6                	test   %esi,%esi$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	74 5f                	je     f0100b14 <runcmd+0xfd>$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	bb 20 76 10 f0       	mov    $0xf0107620,%ebx$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	e8 07 56 00 00       	call   f01060d7 <strcmp>$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	85 c0                	test   %eax,%eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	75 1d                	jne    f0100af1 <runcmd+0xda>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	8b 55 a4             	mov    -0x5c(%ebp),%edx$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	ff 14 85 28 76 10 f0 	call   *-0xfef89d8(,%eax,4)$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	eb 28                	jmp    f0100b19 <runcmd+0x102>$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	47                   	inc    %edi$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	83 ff 07             	cmp    $0x7,%edi$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	75 c5                	jne    f0100abf <runcmd+0xa8>$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	c7 04 24 09 75 10 f0 	movl   $0xf0107509,(%esp)$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	e8 1f 35 00 00       	call   f010402c <cprintf>$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	eb 05                	jmp    f0100b19 <runcmd+0x102>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	5b                   	pop    %ebx$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	5e                   	pop    %esi$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	5f                   	pop    %edi$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	5d                   	pop    %ebp$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	c3                   	ret    $/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21 <mon_x>:$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	55                   	push   %ebp$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	74 46                	je     f0100b73 <mon_x+0x52>$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	74 0e                	je     f0100b41 <mon_x+0x20>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	c7 04 24 1f 75 10 f0 	movl   $0xf010751f,(%esp)$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	e8 ed 34 00 00       	call   f010402c <cprintf>$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	eb 3e                	jmp    f0100b7f <mon_x+0x5e>$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	00 $/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	00 $/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	e8 7e 57 00 00       	call   f01062dd <strtol>$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	c7 04 24 31 82 10 f0 	movl   $0xf0108231,(%esp)$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	e8 bb 34 00 00       	call   f010402c <cprintf>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	eb 0c                	jmp    f0100b7f <mon_x+0x5e>$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	c7 04 24 34 73 10 f0 	movl   $0xf0107334,(%esp)$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	e8 ad 34 00 00       	call   f010402c <cprintf>$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	c9                   	leave  $/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	c3                   	ret    $/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86 <mon_si>:$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	55                   	push   %ebp$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	53                   	push   %ebx$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	83 ec 44             	sub    $0x44,%esp$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	85 db                	test   %ebx,%ebx$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	74 58                	je     f0100bec <mon_si+0x66>$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	81 4b 38 00 01 00 00 	orl    $0x100,0x38(%ebx)$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	e8 cc 47 00 00       	call   f0105379 <debuginfo_eip>$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	89 c2                	mov    %eax,%edx$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	2b 55 f0             	sub    -0x10(%ebp),%edx$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	c7 04 24 38 75 10 f0 	movl   $0xf0107538,(%esp)$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	e8 47 34 00 00       	call   f010402c <cprintf>$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	eb 11                	jmp    f0100bfd <mon_si+0x77>$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	c7 04 24 34 73 10 f0 	movl   $0xf0107334,(%esp)$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	e8 34 34 00 00       	call   f010402c <cprintf>$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	83 c4 44             	add    $0x44,%esp$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	5b                   	pop    %ebx$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	5d                   	pop    %ebp$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	c3                   	ret    $/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03 <mon_time>:$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	55                   	push   %ebp$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	57                   	push   %edi$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	56                   	push   %esi$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	53                   	push   %ebx$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	81 ec 3c 04 00 00    	sub    $0x43c,%esp$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	8d 44 24 1b          	lea    0x1b(%esp),%eax$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	7e 52                	jle    f0100c73 <mon_time+0x70>$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	48                   	dec    %eax$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	8b 3c 9a             	mov    (%edx,%ebx,4),%edi$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	85 d2                	test   %edx,%edx$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	74 12                	je     f0100c51 <mon_time+0x4e>$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	89 f0                	mov    %esi,%eax$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	29 f7                	sub    %esi,%edi$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	88 14 01             	mov    %dl,(%ecx,%eax,1)$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	40                   	inc    %eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	0f be 14 07          	movsbl (%edi,%eax,1),%edx$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	85 d2                	test   %edx,%edx$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	75 f4                	jne    f0100c43 <mon_time+0x40>$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	eb 02                	jmp    f0100c53 <mon_time+0x50>$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	89 f0                	mov    %esi,%eax$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	75 0e                	jne    f0100c66 <mon_time+0x63>$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	c6 04 02 0a          	movb   $0xa,(%edx,%eax,1)$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	c6 44 02 01 00       	movb   $0x0,0x1(%edx,%eax,1)$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	eb 0d                	jmp    f0100c73 <mon_time+0x70>$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	c6 04 01 20          	movb   $0x20,(%ecx,%eax,1)$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	43                   	inc    %ebx$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	3b 5d 08             	cmp    0x8(%ebp),%ebx$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	75 bf                	jne    f0100c32 <mon_time+0x2f>$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	0f 31                	rdtsc  $/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	89 c6                	mov    %eax,%esi$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	89 d7                	mov    %edx,%edi$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	e8 91 fd ff ff       	call   f0100a17 <runcmd>$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	0f 31                	rdtsc  $/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	89 d3                	mov    %edx,%ebx$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	29 f1                	sub    %esi,%ecx$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	19 fb                	sbb    %edi,%ebx$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	c7 04 24 53 75 10 f0 	movl   $0xf0107553,(%esp)$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	e8 88 33 00 00       	call   f010402c <cprintf>$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	5b                   	pop    %ebx$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	5e                   	pop    %esi$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	5f                   	pop    %edi$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	5d                   	pop    %ebp$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	c3                   	ret    $/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1 <start_overflow>:$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	55                   	push   %ebp$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	57                   	push   %edi$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	56                   	push   %esi$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	53                   	push   %ebx$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	8d 45 04             	lea    0x4(%ebp),%eax$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	89 c6                	mov    %eax,%esi$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	bf 12 09 10 f0       	mov    $0xf0100912,%edi$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	8d 58 04             	lea    0x4(%eax),%ebx$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	c7 44 24 08 4b 80 10 	movl   $0xf010804b,0x8(%esp)$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	f0 $/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	0f b6 43 fc          	movzbl -0x4(%ebx),%eax$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	c7 04 24 6a 75 10 f0 	movl   $0xf010756a,(%esp)$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	e8 3f 33 00 00       	call   f010402c <cprintf>$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	43                   	inc    %ebx$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	75 da                	jne    f0100ccd <start_overflow+0x1c>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	c7 44 24 08 4b 80 10 	movl   $0xf010804b,0x8(%esp)$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	f0 $/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecx$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	89 f8                	mov    %edi,%eax$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	d3 e8                	shr    %cl,%eax$/;"	d
f0100d12	obj/kern/kernel.asm	/^f0100d12:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	c7 04 24 6a 75 10 f0 	movl   $0xf010756a,(%esp)$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	e8 05 33 00 00       	call   f010402c <cprintf>$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	43                   	inc    %ebx$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	75 cb                	jne    f0100cf8 <start_overflow+0x47>$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	5b                   	pop    %ebx$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	5e                   	pop    %esi$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	5f                   	pop    %edi$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	5d                   	pop    %ebp$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	c3                   	ret    $/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35 <overflow_me>:$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	55                   	push   %ebp$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	e8 71 ff ff ff       	call   f0100cb1 <start_overflow>$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	c9                   	leave  $/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	c3                   	ret    $/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42 <mon_backtrace>:$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	55                   	push   %ebp$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	57                   	push   %edi$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	56                   	push   %esi$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	53                   	push   %ebx$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	e8 e5 ff ff ff       	call   f0100d35 <overflow_me>$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	c7 04 24 71 75 10 f0 	movl   $0xf0107571,(%esp)$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	e8 d0 32 00 00       	call   f010402c <cprintf>$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	89 e8                	mov    %ebp,%eax$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	85 c0                	test   %eax,%eax$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	74 7e                	je     f0100de2 <mon_backtrace+0xa0>$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	c7 04 24 58 73 10 f0 	movl   $0xf0107358,(%esp)$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	e8 8b 32 00 00       	call   f010402c <cprintf>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	e8 cc 45 00 00       	call   f0105379 <debuginfo_eip>$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	c7 04 24 83 75 10 f0 	movl   $0xf0107583,(%esp)$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	e8 50 32 00 00       	call   f010402c <cprintf>$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	85 db                	test   %ebx,%ebx$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	75 85                	jne    f0100d67 <mon_backtrace+0x25>$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	c7 04 24 9b 75 10 f0 	movl   $0xf010759b,(%esp)$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	e8 3e 32 00 00       	call   f010402c <cprintf>$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	5b                   	pop    %ebx$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	5e                   	pop    %esi$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	5f                   	pop    %edi$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	5d                   	pop    %ebp$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	c3                   	ret    $/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb <monitor>:$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	55                   	push   %ebp$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	53                   	push   %ebx$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	c7 04 24 90 73 10 f0 	movl   $0xf0107390,(%esp)$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	e8 1b 32 00 00       	call   f010402c <cprintf>$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	c7 04 24 b4 73 10 f0 	movl   $0xf01073b4,(%esp)$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	e8 0f 32 00 00       	call   f010402c <cprintf>$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	85 db                	test   %ebx,%ebx$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	74 08                	je     f0100e29 <monitor+0x2e>$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	e8 49 37 00 00       	call   f0104572 <print_trapframe>$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	c7 04 24 ae 75 10 f0 	movl   $0xf01075ae,(%esp)$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	e8 c3 50 00 00       	call   f0105ef8 <readline>$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	85 c0                	test   %eax,%eax$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	74 f0                	je     f0100e29 <monitor+0x2e>$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	89 da                	mov    %ebx,%edx$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	e8 d7 fb ff ff       	call   f0100a17 <runcmd>$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	85 c0                	test   %eax,%eax$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	79 e5                	jns    f0100e29 <monitor+0x2e>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	5b                   	pop    %ebx$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	5d                   	pop    %ebp$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	c3                   	ret    $/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a <read_eip>:$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	55                   	push   %ebp$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	5d                   	pop    %ebp$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	c3                   	ret    $/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54 <check_va2pa_large>:$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	55                   	push   %ebp$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	8b 04 90             	mov    (%eax,%edx,4),%eax$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	89 c2                	mov    %eax,%edx$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	81 e2 81 00 00 00    	and    $0x81,%edx$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	81 fa 81 00 00 00    	cmp    $0x81,%edx$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	75 07                	jne    f0100e74 <check_va2pa_large+0x20>$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	eb 05                	jmp    f0100e79 <check_va2pa_large+0x25>$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	5d                   	pop    %ebp$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	c3                   	ret    $/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b <check_va2pa>:$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	55                   	push   %ebp$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	a8 01                	test   $0x1,%al$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	74 4d                	je     f0100eda <check_va2pa+0x5f>$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	3b 0d a8 3e 34 f0    	cmp    0xf0343ea8,%ecx$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	72 20                	jb     f0100ebf <check_va2pa+0x44>$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	f0 $/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	00 $/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	e8 8d f1 ff ff       	call   f010004c <_panic>$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	a8 01                	test   $0x1,%al$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	74 0e                	je     f0100ee1 <check_va2pa+0x66>$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	eb 0c                	jmp    f0100ee6 <check_va2pa+0x6b>$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	eb 05                	jmp    f0100ee6 <check_va2pa+0x6b>$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	c9                   	leave  $/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	c3                   	ret    $/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8 <nvram_read>:$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	55                   	push   %ebp$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	56                   	push   %esi$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	53                   	push   %ebx$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	e8 e2 2f 00 00       	call   f0103edc <mc146818_read>$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 c6                	mov    %eax,%esi$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	43                   	inc    %ebx$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	e8 d7 2f 00 00       	call   f0103edc <mc146818_read>$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	09 f0                	or     %esi,%eax$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	5b                   	pop    %ebx$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	5e                   	pop    %esi$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	5d                   	pop    %ebp$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	c3                   	ret    $/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11 <boot_alloc>:$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	55                   	push   %ebp$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	53                   	push   %ebx$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	89 c2                	mov    %eax,%edx$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	83 3d 5c 32 34 f0 00 	cmpl   $0x0,0xf034325c$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	75 0f                	jne    f0100f32 <boot_alloc+0x21>$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	b8 03 60 38 f0       	mov    $0xf0386003,%eax$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	a3 5c 32 34 f0       	mov    %eax,0xf034325c$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	85 d2                	test   %edx,%edx$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	74 75                	je     f0100fab <boot_alloc+0x9a>$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	a1 5c 32 34 f0       	mov    0xf034325c,%eax$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	8d 94 10 ff 0f 00 00 	lea    0xfff(%eax,%edx,1),%edx$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	77 20                	ja     f0100f70 <boot_alloc+0x5f>$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	f0 $/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	00 $/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	e8 dc f0 ff ff       	call   f010004c <_panic>$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	8d 8a 00 00 00 10    	lea    0x10000000(%edx),%ecx$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	3b 1d a8 3e 34 f0    	cmp    0xf0343ea8,%ebx$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	72 20                	jb     f0100fa3 <boot_alloc+0x92>$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	f0 $/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	00 $/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	e8 a9 f0 ff ff       	call   f010004c <_panic>$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	89 15 5c 32 34 f0    	mov    %edx,0xf034325c$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	eb 05                	jmp    f0100fb0 <boot_alloc+0x9f>$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	a1 5c 32 34 f0       	mov    0xf034325c,%eax$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	5b                   	pop    %ebx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	5d                   	pop    %ebp$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	c3                   	ret    $/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6 <check_page_free_list>:$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	55                   	push   %ebp$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	57                   	push   %edi$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	56                   	push   %esi$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	53                   	push   %ebx$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	19 f6                	sbb    %esi,%esi$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	46                   	inc    %esi$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	8b 1d 60 32 34 f0    	mov    0xf0343260,%ebx$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	85 db                	test   %ebx,%ebx$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	75 1c                	jne    f0100ff1 <check_page_free_list+0x3b>$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	c7 44 24 08 74 76 10 	movl   $0xf0107674,0x8(%esp)$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	f0 $/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	00 $/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	e8 5b f0 ff ff       	call   f010004c <_panic>$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	85 c0                	test   %eax,%eax$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	74 50                	je     f0101045 <check_page_free_list+0x8f>$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	89 d8                	mov    %ebx,%eax$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	39 f0                	cmp    %esi,%eax$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	0f 93 c0             	setae  %al$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	89 1a                	mov    %ebx,(%edx)$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	85 db                	test   %ebx,%ebx$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	75 da                	jne    f0101001 <check_page_free_list+0x4b>$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	89 10                	mov    %edx,(%eax)$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	89 1d 60 32 34 f0    	mov    %ebx,0xf0343260$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	85 db                	test   %ebx,%ebx$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	74 67                	je     f01010ac <check_page_free_list+0xf6>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	89 d8                	mov    %ebx,%eax$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	89 c2                	mov    %eax,%edx$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	39 f2                	cmp    %esi,%edx$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	73 4a                	jae    f01010a6 <check_page_free_list+0xf0>$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	89 c2                	mov    %eax,%edx$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	72 20                	jb     f0101089 <check_page_free_list+0xd3>$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	f0 $/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	00 $/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	e8 c3 ef ff ff       	call   f010004c <_panic>$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	00 $/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	00 $/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	e8 f1 50 00 00       	call   f0106197 <memset>$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	85 db                	test   %ebx,%ebx$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	75 99                	jne    f0101045 <check_page_free_list+0x8f>$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	e8 5b fe ff ff       	call   f0100f11 <boot_alloc>$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	8b 15 60 32 34 f0    	mov    0xf0343260,%edx$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	85 d2                	test   %edx,%edx$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	0f 84 27 02 00 00    	je     f01012ee <check_page_free_list+0x338>$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	8b 1d b0 3e 34 f0    	mov    0xf0343eb0,%ebx$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	39 da                	cmp    %ebx,%edx$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	72 4f                	jb     f0101120 <check_page_free_list+0x16a>$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	a1 a8 3e 34 f0       	mov    0xf0343ea8,%eax$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	39 c2                	cmp    %eax,%edx$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	73 66                	jae    f0101149 <check_page_free_list+0x193>$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	89 d0                	mov    %edx,%eax$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	29 d8                	sub    %ebx,%eax$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	a8 07                	test   $0x7,%al$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	0f 85 84 00 00 00    	jne    f0101176 <check_page_free_list+0x1c0>$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	0f 84 a4 00 00 00    	je     f01011a2 <check_page_free_list+0x1ec>$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	0f 84 c4 00 00 00    	je     f01011cd <check_page_free_list+0x217>$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	e9 d6 00 00 00       	jmp    f01011f1 <check_page_free_list+0x23b>$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	73 24                	jae    f0101144 <check_page_free_list+0x18e>$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	c7 44 24 0c b7 7d 10 	movl   $0xf0107db7,0xc(%esp)$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	f0 $/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	f0 $/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	c7 44 24 04 dd 02 00 	movl   $0x2dd,0x4(%esp)$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	00 $/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	e8 08 ef ff ff       	call   f010004c <_panic>$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	72 24                	jb     f010116d <check_page_free_list+0x1b7>$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	c7 44 24 0c d8 7d 10 	movl   $0xf0107dd8,0xc(%esp)$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	f0 $/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	f0 $/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	00 $/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	e8 df ee ff ff       	call   f010004c <_panic>$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	89 d0                	mov    %edx,%eax$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	a8 07                	test   $0x7,%al$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	74 24                	je     f010119a <check_page_free_list+0x1e4>$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	c7 44 24 0c 98 76 10 	movl   $0xf0107698,0xc(%esp)$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	f0 $/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	f0 $/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	00 $/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	e8 b2 ee ff ff       	call   f010004c <_panic>$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	75 24                	jne    f01011c6 <check_page_free_list+0x210>$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	c7 44 24 0c ec 7d 10 	movl   $0xf0107dec,0xc(%esp)$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	f0 $/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	f0 $/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	00 $/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	e8 86 ee ff ff       	call   f010004c <_panic>$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	75 24                	jne    f01011f1 <check_page_free_list+0x23b>$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	c7 44 24 0c fd 7d 10 	movl   $0xf0107dfd,0xc(%esp)$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	f0 $/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	f0 $/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	c7 44 24 04 e3 02 00 	movl   $0x2e3,0x4(%esp)$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	00 $/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	e8 5b ee ff ff       	call   f010004c <_panic>$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	75 24                	jne    f010121c <check_page_free_list+0x266>$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	c7 44 24 0c cc 76 10 	movl   $0xf01076cc,0xc(%esp)$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	f0 $/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	f0 $/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	c7 44 24 04 e4 02 00 	movl   $0x2e4,0x4(%esp)$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	00 $/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	e8 30 ee ff ff       	call   f010004c <_panic>$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	75 24                	jne    f0101247 <check_page_free_list+0x291>$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	c7 44 24 0c 16 7e 10 	movl   $0xf0107e16,0xc(%esp)$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	f0 $/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	f0 $/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	00 $/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	e8 05 ee ff ff       	call   f010004c <_panic>$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	89 c1                	mov    %eax,%ecx$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	76 59                	jbe    f01012a9 <check_page_free_list+0x2f3>$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	89 c3                	mov    %eax,%ebx$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	77 20                	ja     f010127a <check_page_free_list+0x2c4>$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	f0 $/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	00 $/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	e8 d2 ed ff ff       	call   f010004c <_panic>$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	76 24                	jbe    f01012a9 <check_page_free_list+0x2f3>$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	c7 44 24 0c f0 76 10 	movl   $0xf01076f0,0xc(%esp)$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	f0 $/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	f0 $/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	c7 44 24 04 e6 02 00 	movl   $0x2e6,0x4(%esp)$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	00 $/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	e8 a3 ed ff ff       	call   f010004c <_panic>$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	75 24                	jne    f01012d4 <check_page_free_list+0x31e>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	c7 44 24 0c 30 7e 10 	movl   $0xf0107e30,0xc(%esp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	f0 $/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	f0 $/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	c7 44 24 04 e8 02 00 	movl   $0x2e8,0x4(%esp)$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	00 $/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	e8 78 ed ff ff       	call   f010004c <_panic>$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	77 03                	ja     f01012df <check_page_free_list+0x329>$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	47                   	inc    %edi$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	eb 01                	jmp    f01012e0 <check_page_free_list+0x32a>$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	46                   	inc    %esi$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	8b 12                	mov    (%edx),%edx$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	85 d2                	test   %edx,%edx$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	0f 85 31 fe ff ff    	jne    f010111b <check_page_free_list+0x165>$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	85 ff                	test   %edi,%edi$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	7f 24                	jg     f0101312 <check_page_free_list+0x35c>$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	c7 44 24 0c 4d 7e 10 	movl   $0xf0107e4d,0xc(%esp)$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	f0 $/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	f0 $/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	00 $/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	e8 3a ed ff ff       	call   f010004c <_panic>$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	85 f6                	test   %esi,%esi$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	7f 24                	jg     f010133a <check_page_free_list+0x384>$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	c7 44 24 0c 5f 7e 10 	movl   $0xf0107e5f,0xc(%esp)$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	f0 $/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	f0 $/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	c7 44 24 04 f1 02 00 	movl   $0x2f1,0x4(%esp)$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	00 $/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	e8 12 ed ff ff       	call   f010004c <_panic>$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	5b                   	pop    %ebx$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	5e                   	pop    %esi$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	5f                   	pop    %edi$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	5d                   	pop    %ebp$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	c3                   	ret    $/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342 <page_init>:$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	55                   	push   %ebp$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	89 e5                	mov    %esp,%ebp$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	57                   	push   %edi$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	56                   	push   %esi$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	53                   	push   %ebx$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	c7 05 60 32 34 f0 00 	movl   $0x0,0xf0343260$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	00 00 00 $/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	a1 b0 3e 34 f0       	mov    0xf0343eb0,%eax$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	8b 3d 58 32 34 f0    	mov    0xf0343258,%edi$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	76 64                	jbe    f01013d5 <page_init+0x93>$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	75 15                	jne    f0101395 <page_init+0x53>$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	8b 15 b0 3e 34 f0    	mov    0xf0343eb0,%edx$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	66 c7 42 3c 01 00    	movw   $0x1,0x3c(%edx)$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	c7 42 38 00 00 00 00 	movl   $0x0,0x38(%edx)$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	eb 1f                	jmp    f01013b4 <page_init+0x72>$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	89 d1                	mov    %edx,%ecx$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	03 0d b0 3e 34 f0    	add    0xf0343eb0,%ecx$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	89 31                	mov    %esi,(%ecx)$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	89 d6                	mov    %edx,%esi$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	03 35 b0 3e 34 f0    	add    0xf0343eb0,%esi$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	40                   	inc    %eax$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	39 f8                	cmp    %edi,%eax$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	72 c2                	jb     f010137b <page_init+0x39>$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	89 fb                	mov    %edi,%ebx$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	83 ff 02             	cmp    $0x2,%edi$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	73 05                	jae    f01013c5 <page_init+0x83>$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	bb 02 00 00 00       	mov    $0x2,%ebx$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	89 35 60 32 34 f0    	mov    %esi,0xf0343260$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	76 07                	jbe    f01013da <page_init+0x98>$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	eb 2b                	jmp    f0101400 <page_init+0xbe>$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	89 d8                	mov    %ebx,%eax$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	03 05 b0 3e 34 f0    	add    0xf0343eb0,%eax$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	83 c3 08             	add    $0x8,%ebx$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	81 fb 00 08 00 00    	cmp    $0x800,%ebx$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	75 e1                	jne    f01013dd <page_init+0x9b>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	66 bb 00 01          	mov    $0x100,%bx$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	8d 34 dd 00 00 00 00 	lea    0x0(,%ebx,8),%esi$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	eb 18                	jmp    f0101421 <page_init+0xdf>$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	89 f0                	mov    %esi,%eax$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	03 05 b0 3e 34 f0    	add    0xf0343eb0,%eax$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	43                   	inc    %ebx$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	83 c6 08             	add    $0x8,%esi$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	e8 e6 fa ff ff       	call   f0100f11 <boot_alloc>$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	77 20                	ja     f0101452 <page_init+0x110>$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	f0 $/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	c7 44 24 04 53 01 00 	movl   $0x153,0x4(%esp)$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	00 $/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	e8 fa eb ff ff       	call   f010004c <_panic>$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	72 ab                	jb     f0101409 <page_init+0xc7>$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	3b 1d a8 3e 34 f0    	cmp    0xf0343ea8,%ebx$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	73 37                	jae    f010149d <page_init+0x15b>$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	8b 0d 60 32 34 f0    	mov    0xf0343260,%ecx$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	8d 04 dd 00 00 00 00 	lea    0x0(,%ebx,8),%eax$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	89 c2                	mov    %eax,%edx$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	03 15 b0 3e 34 f0    	add    0xf0343eb0,%edx$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	89 c1                	mov    %eax,%ecx$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	03 0d b0 3e 34 f0    	add    0xf0343eb0,%ecx$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	43                   	inc    %ebx$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	83 c0 08             	add    $0x8,%eax$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	39 1d a8 3e 34 f0    	cmp    %ebx,0xf0343ea8$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	77 dc                	ja     f0101473 <page_init+0x131>$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	89 0d 60 32 34 f0    	mov    %ecx,0xf0343260$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	c7 05 64 32 34 f0 00 	movl   $0x0,0xf0343264$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	00 00 00 $/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	5b                   	pop    %ebx$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	5e                   	pop    %esi$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	5f                   	pop    %edi$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	5d                   	pop    %ebp$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	c3                   	ret    $/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af <page_alloc>:$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	55                   	push   %ebp$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	a1 60 32 34 f0       	mov    0xf0343260,%eax$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	85 c0                	test   %eax,%eax$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	74 6b                	je     f0101529 <page_alloc+0x7a>$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	74 56                	je     f010151a <page_alloc+0x6b>$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	89 c2                	mov    %eax,%edx$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	72 20                	jb     f01014fd <page_alloc+0x4e>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	f0 $/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	00 $/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	e8 4f eb ff ff       	call   f010004c <_panic>$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	00 $/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	00 $/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	e8 7d 4c 00 00       	call   f0106197 <memset>$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	a1 60 32 34 f0       	mov    0xf0343260,%eax$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	8b 10                	mov    (%eax),%edx$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	89 15 60 32 34 f0    	mov    %edx,0xf0343260$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	eb 05                	jmp    f010152e <page_alloc+0x7f>$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	c9                   	leave  $/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	c3                   	ret    $/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530 <page_alloc_npages>:$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	55                   	push   %ebp$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	89 e5                	mov    %esp,%ebp$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	5d                   	pop    %ebp$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	c3                   	ret    $/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a <page_free_npages>:$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	55                   	push   %ebp$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	89 e5                	mov    %esp,%ebp$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	5d                   	pop    %ebp$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	c3                   	ret    $/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544 <page_free>:$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	55                   	push   %ebp$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	89 e5                	mov    %esp,%ebp$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	8b 15 60 32 34 f0    	mov    0xf0343260,%edx$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	89 10                	mov    %edx,(%eax)$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	a3 60 32 34 f0       	mov    %eax,0xf0343260$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	5d                   	pop    %ebp$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	c3                   	ret    $/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559 <page_realloc_npages>:$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	55                   	push   %ebp$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	89 e5                	mov    %esp,%ebp$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	5d                   	pop    %ebp$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c3                   	ret    $/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563 <page_decref>:$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	55                   	push   %ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	89 e5                	mov    %esp,%ebp$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	4a                   	dec    %edx$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	66 85 d2             	test   %dx,%dx$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	75 08                	jne    f0101581 <page_decref+0x1e>$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	e8 c3 ff ff ff       	call   f0101544 <page_free>$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	c9                   	leave  $/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	c3                   	ret    $/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583 <pgdir_walk>:$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	55                   	push   %ebp$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	89 e5                	mov    %esp,%ebp$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	56                   	push   %esi$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	53                   	push   %ebx$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	89 f3                	mov    %esi,%ebx$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	8b 03                	mov    (%ebx),%eax$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	a8 01                	test   $0x1,%al$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	75 2b                	jne    f01015ca <pgdir_walk+0x47>$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	74 69                	je     f010160e <pgdir_walk+0x8b>$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	e8 fe fe ff ff       	call   f01014af <page_alloc>$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	85 c0                	test   %eax,%eax$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	74 60                	je     f0101615 <pgdir_walk+0x92>$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	83 c8 07             	or     $0x7,%eax$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	89 03                	mov    %eax,(%ebx)$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	89 c2                	mov    %eax,%edx$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	72 20                	jb     f01015fc <pgdir_walk+0x79>$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	f0 $/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	c7 44 24 04 de 01 00 	movl   $0x1de,0x4(%esp)$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	00 $/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	e8 50 ea ff ff       	call   f010004c <_panic>$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	eb 0c                	jmp    f010161a <pgdir_walk+0x97>$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	eb 05                	jmp    f010161a <pgdir_walk+0x97>$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	5b                   	pop    %ebx$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	5e                   	pop    %esi$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	5d                   	pop    %ebp$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	c3                   	ret    $/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621 <boot_map_region>:$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	55                   	push   %ebp$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	89 e5                	mov    %esp,%ebp$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	57                   	push   %edi$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	56                   	push   %esi$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	53                   	push   %ebx$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	89 d7                	mov    %edx,%edi$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	85 c9                	test   %ecx,%ecx$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	74 42                	je     f0101678 <boot_map_region+0x57>$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	00 $/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	8d 04 3b             	lea    (%ebx,%edi,1),%eax$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	e8 20 ff ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	0b 5d dc             	or     -0x24(%ebp),%ebx$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	89 18                	mov    %ebx,(%eax)$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	89 f3                	mov    %esi,%ebx$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	72 d1                	jb     f0101649 <boot_map_region+0x28>$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	5b                   	pop    %ebx$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	5e                   	pop    %esi$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	5f                   	pop    %edi$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	5d                   	pop    %ebp$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	c3                   	ret    $/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680 <page_lookup>:$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	55                   	push   %ebp$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	89 e5                	mov    %esp,%ebp$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	53                   	push   %ebx$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	00 $/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	e8 df fe ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	85 db                	test   %ebx,%ebx$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	74 02                	je     f01016aa <page_lookup+0x2a>$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	89 03                	mov    %eax,(%ebx)$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	85 c0                	test   %eax,%eax$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	74 38                	je     f01016e6 <page_lookup+0x66>$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	8b 00                	mov    (%eax),%eax$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	a8 01                	test   $0x1,%al$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	74 39                	je     f01016ed <page_lookup+0x6d>$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	72 1c                	jb     f01016db <page_lookup+0x5b>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	c7 44 24 08 38 77 10 	movl   $0xf0107738,0x8(%esp)$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	f0 $/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	00 $/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	e8 71 e9 ff ff       	call   f010004c <_panic>$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	03 05 b0 3e 34 f0    	add    0xf0343eb0,%eax$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	eb 0c                	jmp    f01016f2 <page_lookup+0x72>$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	eb 05                	jmp    f01016f2 <page_lookup+0x72>$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	83 c4 14             	add    $0x14,%esp$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	5b                   	pop    %ebx$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	5d                   	pop    %ebp$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	c3                   	ret    $/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8 <tlb_invalidate>:$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	55                   	push   %ebp$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	e8 f5 50 00 00       	call   f01067f8 <cpunum>$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	29 c2                	sub    %eax,%edx$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	83 3c 85 28 40 34 f0 	cmpl   $0x0,-0xfcbbfd8(,%eax,4)$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	00 $/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	74 20                	je     f0101739 <tlb_invalidate+0x41>$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	e8 da 50 00 00       	call   f01067f8 <cpunum>$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	29 c2                	sub    %eax,%edx$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	39 50 64             	cmp    %edx,0x64(%eax)$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	75 06                	jne    f010173f <tlb_invalidate+0x47>$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	0f 01 38             	invlpg (%eax)$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	c9                   	leave  $/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	c3                   	ret    $/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741 <page_remove>:$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	55                   	push   %ebp$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	89 e5                	mov    %esp,%ebp$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	56                   	push   %esi$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	53                   	push   %ebx$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	e8 17 ff ff ff       	call   f0101680 <page_lookup>$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	85 c0                	test   %eax,%eax$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	74 1d                	je     f010178a <page_remove+0x49>$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	e8 ee fd ff ff       	call   f0101563 <page_decref>$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	e8 77 ff ff ff       	call   f01016f8 <tlb_invalidate>$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	5b                   	pop    %ebx$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	5e                   	pop    %esi$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	5d                   	pop    %ebp$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	c3                   	ret    $/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791 <page_insert>:$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	55                   	push   %ebp$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	89 e5                	mov    %esp,%ebp$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	57                   	push   %edi$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	56                   	push   %esi$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	53                   	push   %ebx$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	00 $/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	e8 cc fd ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	89 c3                	mov    %eax,%ebx$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	85 c0                	test   %eax,%eax$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	74 39                	je     f01017f6 <page_insert+0x65>$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	74 0f                	je     f01017d5 <page_insert+0x44>$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	e8 6c ff ff ff       	call   f0101741 <page_remove>$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	83 ca 01             	or     $0x1,%edx$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	2b 35 b0 3e 34 f0    	sub    0xf0343eb0,%esi$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	89 f0                	mov    %esi,%eax$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	89 d6                	mov    %edx,%esi$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	09 c6                	or     %eax,%esi$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	89 33                	mov    %esi,(%ebx)$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	eb 05                	jmp    f01017fb <page_insert+0x6a>$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	5b                   	pop    %ebx$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	5e                   	pop    %esi$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	5f                   	pop    %edi$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	5d                   	pop    %ebp$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	c3                   	ret    $/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803 <mem_init>:$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	55                   	push   %ebp$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	89 e5                	mov    %esp,%ebp$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	57                   	push   %edi$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	56                   	push   %esi$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	53                   	push   %ebx$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	e8 d2 f6 ff ff       	call   f0100ee8 <nvram_read>$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	89 c2                	mov    %eax,%edx$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	85 c0                	test   %eax,%eax$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	79 06                	jns    f0101825 <mem_init+0x22>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	89 15 58 32 34 f0    	mov    %edx,0xf0343258$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	e8 b0 f6 ff ff       	call   f0100ee8 <nvram_read>$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	89 c2                	mov    %eax,%edx$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	89 d0                	mov    %edx,%eax$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	85 d2                	test   %edx,%edx$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	79 06                	jns    f0101849 <mem_init+0x46>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	74 0e                	je     f010185c <mem_init+0x59>$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	89 15 a8 3e 34 f0    	mov    %edx,0xf0343ea8$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	eb 0c                	jmp    f0101868 <mem_init+0x65>$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	8b 15 58 32 34 f0    	mov    0xf0343258,%edx$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	89 15 a8 3e 34 f0    	mov    %edx,0xf0343ea8$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	a1 58 32 34 f0       	mov    0xf0343258,%eax$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	a1 a8 3e 34 f0       	mov    0xf0343ea8,%eax$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	c7 04 24 58 77 10 f0 	movl   $0xf0107758,(%esp)$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	e8 90 27 00 00       	call   f010402c <cprintf>$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	e8 6b f6 ff ff       	call   f0100f11 <boot_alloc>$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	a3 ac 3e 34 f0       	mov    %eax,0xf0343eac$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	00 $/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	00 $/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	e8 d4 48 00 00       	call   f0106197 <memset>$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	77 20                	ja     f01018ef <mem_init+0xec>$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	f0 $/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	00 $/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	e8 5d e7 ff ff       	call   f010004c <_panic>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	83 ca 05             	or     $0x5,%edx$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	a1 a8 3e 34 f0       	mov    0xf0343ea8,%eax$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	e8 06 f6 ff ff       	call   f0100f11 <boot_alloc>$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	a3 b0 3e 34 f0       	mov    %eax,0xf0343eb0$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	e8 f7 f5 ff ff       	call   f0100f11 <boot_alloc>$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	a3 6c 32 34 f0       	mov    %eax,0xf034326c$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	e8 1e fa ff ff       	call   f0101342 <page_init>$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	e8 88 f6 ff ff       	call   f0100fb6 <check_page_free_list>$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	83 3d b0 3e 34 f0 00 	cmpl   $0x0,0xf0343eb0$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	75 1c                	jne    f0101953 <mem_init+0x150>$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	c7 44 24 08 70 7e 10 	movl   $0xf0107e70,0x8(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	f0 $/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	c7 44 24 04 02 03 00 	movl   $0x302,0x4(%esp)$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	00 $/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	e8 f9 e6 ff ff       	call   f010004c <_panic>$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	a1 60 32 34 f0       	mov    0xf0343260,%eax$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	85 c0                	test   %eax,%eax$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	74 0e                	je     f010196a <mem_init+0x167>$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	43                   	inc    %ebx$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	8b 00                	mov    (%eax),%eax$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	85 c0                	test   %eax,%eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	75 f9                	jne    f0101961 <mem_init+0x15e>$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	eb 05                	jmp    f010196f <mem_init+0x16c>$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	e8 34 fb ff ff       	call   f01014af <page_alloc>$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	89 c6                	mov    %eax,%esi$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	85 c0                	test   %eax,%eax$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	75 24                	jne    f01019a5 <mem_init+0x1a2>$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	c7 44 24 0c 8b 7e 10 	movl   $0xf0107e8b,0xc(%esp)$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	f0 $/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	f0 $/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	c7 44 24 04 0a 03 00 	movl   $0x30a,0x4(%esp)$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	00 $/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	e8 a7 e6 ff ff       	call   f010004c <_panic>$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	e8 fe fa ff ff       	call   f01014af <page_alloc>$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	89 c7                	mov    %eax,%edi$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	85 c0                	test   %eax,%eax$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	75 24                	jne    f01019db <mem_init+0x1d8>$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	c7 44 24 0c a1 7e 10 	movl   $0xf0107ea1,0xc(%esp)$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	f0 $/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01019c6	obj/kern/kernel.asm	/^f01019c6:	f0 $/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	c7 44 24 04 0b 03 00 	movl   $0x30b,0x4(%esp)$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	00 $/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	e8 71 e6 ff ff       	call   f010004c <_panic>$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	e8 c8 fa ff ff       	call   f01014af <page_alloc>$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	85 c0                	test   %eax,%eax$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	75 24                	jne    f0101a12 <mem_init+0x20f>$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	c7 44 24 0c b7 7e 10 	movl   $0xf0107eb7,0xc(%esp)$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	f0 $/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	f0 $/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	c7 44 24 04 0c 03 00 	movl   $0x30c,0x4(%esp)$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	00 $/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	e8 3a e6 ff ff       	call   f010004c <_panic>$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	39 fe                	cmp    %edi,%esi$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	75 24                	jne    f0101a3a <mem_init+0x237>$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	c7 44 24 0c cd 7e 10 	movl   $0xf0107ecd,0xc(%esp)$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	f0 $/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	f0 $/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	00 $/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	e8 12 e6 ff ff       	call   f010004c <_panic>$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	74 05                	je     f0101a44 <mem_init+0x241>$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	75 24                	jne    f0101a68 <mem_init+0x265>$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	c7 44 24 0c 94 77 10 	movl   $0xf0107794,0xc(%esp)$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	f0 $/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	f0 $/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	00 $/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	e8 e4 e5 ff ff       	call   f010004c <_panic>$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	8b 15 b0 3e 34 f0    	mov    0xf0343eb0,%edx$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	a1 a8 3e 34 f0       	mov    0xf0343ea8,%eax$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	89 f1                	mov    %esi,%ecx$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	29 d1                	sub    %edx,%ecx$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	72 24                	jb     f0101aa8 <mem_init+0x2a5>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	c7 44 24 0c df 7e 10 	movl   $0xf0107edf,0xc(%esp)$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	f0 $/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	f0 $/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	00 $/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	e8 a4 e5 ff ff       	call   f010004c <_panic>$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	89 f9                	mov    %edi,%ecx$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	29 d1                	sub    %edx,%ecx$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	77 24                	ja     f0101ada <mem_init+0x2d7>$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	c7 44 24 0c fc 7e 10 	movl   $0xf0107efc,0xc(%esp)$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	f0 $/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	f0 $/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	c7 44 24 04 12 03 00 	movl   $0x312,0x4(%esp)$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	00 $/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	e8 72 e5 ff ff       	call   f010004c <_panic>$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	29 d1                	sub    %edx,%ecx$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	89 ca                	mov    %ecx,%edx$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	77 24                	ja     f0101b0f <mem_init+0x30c>$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	c7 44 24 0c 19 7f 10 	movl   $0xf0107f19,0xc(%esp)$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	f0 $/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	f0 $/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	00 $/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	e8 3d e5 ff ff       	call   f010004c <_panic>$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	a1 60 32 34 f0       	mov    0xf0343260,%eax$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	c7 05 60 32 34 f0 00 	movl   $0x0,0xf0343260$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	00 00 00 $/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	e8 82 f9 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	85 c0                	test   %eax,%eax$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	74 24                	je     f0101b55 <mem_init+0x352>$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	c7 44 24 0c 36 7f 10 	movl   $0xf0107f36,0xc(%esp)$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	f0 $/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	f0 $/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	00 $/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	e8 f7 e4 ff ff       	call   f010004c <_panic>$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	e8 e7 f9 ff ff       	call   f0101544 <page_free>$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	e8 df f9 ff ff       	call   f0101544 <page_free>$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	e8 d4 f9 ff ff       	call   f0101544 <page_free>$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	e8 33 f9 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	89 c6                	mov    %eax,%esi$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	85 c0                	test   %eax,%eax$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	75 24                	jne    f0101ba6 <mem_init+0x3a3>$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	c7 44 24 0c 8b 7e 10 	movl   $0xf0107e8b,0xc(%esp)$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	f0 $/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	f0 $/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	c7 44 24 04 21 03 00 	movl   $0x321,0x4(%esp)$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	00 $/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	e8 a6 e4 ff ff       	call   f010004c <_panic>$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	e8 fd f8 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	89 c7                	mov    %eax,%edi$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	85 c0                	test   %eax,%eax$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	75 24                	jne    f0101bdc <mem_init+0x3d9>$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	c7 44 24 0c a1 7e 10 	movl   $0xf0107ea1,0xc(%esp)$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	f0 $/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	f0 $/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	c7 44 24 04 22 03 00 	movl   $0x322,0x4(%esp)$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	00 $/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	e8 70 e4 ff ff       	call   f010004c <_panic>$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	e8 c7 f8 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	85 c0                	test   %eax,%eax$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	75 24                	jne    f0101c13 <mem_init+0x410>$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	c7 44 24 0c b7 7e 10 	movl   $0xf0107eb7,0xc(%esp)$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	f0 $/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	f0 $/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	c7 44 24 04 23 03 00 	movl   $0x323,0x4(%esp)$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	00 $/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	e8 39 e4 ff ff       	call   f010004c <_panic>$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	39 fe                	cmp    %edi,%esi$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	75 24                	jne    f0101c3b <mem_init+0x438>$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	c7 44 24 0c cd 7e 10 	movl   $0xf0107ecd,0xc(%esp)$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	f0 $/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	f0 $/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	00 $/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	e8 11 e4 ff ff       	call   f010004c <_panic>$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	74 05                	je     f0101c45 <mem_init+0x442>$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	75 24                	jne    f0101c69 <mem_init+0x466>$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	c7 44 24 0c 94 77 10 	movl   $0xf0107794,0xc(%esp)$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	f0 $/;"	l
f0101c4d	obj/kern/kernel.asm	/^f0101c4d:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	f0 $/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	c7 44 24 04 26 03 00 	movl   $0x326,0x4(%esp)$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	00 $/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	e8 e3 e3 ff ff       	call   f010004c <_panic>$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	e8 3a f8 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	85 c0                	test   %eax,%eax$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	74 24                	je     f0101c9d <mem_init+0x49a>$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	c7 44 24 0c 36 7f 10 	movl   $0xf0107f36,0xc(%esp)$/;"	l
f0101c80	obj/kern/kernel.asm	/^f0101c80:	f0 $/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	f0 $/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	c7 44 24 04 27 03 00 	movl   $0x327,0x4(%esp)$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	00 $/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	e8 af e3 ff ff       	call   f010004c <_panic>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	89 f0                	mov    %esi,%eax$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	89 c2                	mov    %eax,%edx$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	72 20                	jb     f0101cd8 <mem_init+0x4d5>$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	f0 $/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	00 $/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	e8 74 e3 ff ff       	call   f010004c <_panic>$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	00 $/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	00 $/;"	l
f0101ce8	obj/kern/kernel.asm	/^f0101ce8:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	e8 a2 44 00 00       	call   f0106197 <memset>$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	e8 47 f8 ff ff       	call   f0101544 <page_free>$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	e8 a6 f7 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	85 c0                	test   %eax,%eax$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	75 24                	jne    f0101d31 <mem_init+0x52e>$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	c7 44 24 0c 45 7f 10 	movl   $0xf0107f45,0xc(%esp)$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	f0 $/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	f0 $/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	c7 44 24 04 2c 03 00 	movl   $0x32c,0x4(%esp)$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	00 $/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	e8 1b e3 ff ff       	call   f010004c <_panic>$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	39 c6                	cmp    %eax,%esi$/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	74 24                	je     f0101d59 <mem_init+0x556>$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	c7 44 24 0c 63 7f 10 	movl   $0xf0107f63,0xc(%esp)$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	f0 $/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	f0 $/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	c7 44 24 04 2d 03 00 	movl   $0x32d,0x4(%esp)$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	00 $/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	e8 f3 e2 ff ff       	call   f010004c <_panic>$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	89 f2                	mov    %esi,%edx$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	89 d0                	mov    %edx,%eax$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	72 20                	jb     f0101d94 <mem_init+0x591>$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	f0 $/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	00 $/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	e8 b8 e2 ff ff       	call   f010004c <_panic>$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	75 11                	jne    f0101dae <mem_init+0x5ab>$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	74 24                	je     f0101dd2 <mem_init+0x5cf>$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	c7 44 24 0c 73 7f 10 	movl   $0xf0107f73,0xc(%esp)$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	f0 $/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	f0 $/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	00 $/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	e8 7a e2 ff ff       	call   f010004c <_panic>$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	40                   	inc    %eax$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	75 d2                	jne    f0101da9 <mem_init+0x5a6>$/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0101dda	obj/kern/kernel.asm	/^f0101dda:	89 15 60 32 34 f0    	mov    %edx,0xf0343260$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	e8 5c f7 ff ff       	call   f0101544 <page_free>$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	e8 54 f7 ff ff       	call   f0101544 <page_free>$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	e8 49 f7 ff ff       	call   f0101544 <page_free>$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	a1 60 32 34 f0       	mov    0xf0343260,%eax$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	85 c0                	test   %eax,%eax$/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	74 07                	je     f0101e0b <mem_init+0x608>$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	4b                   	dec    %ebx$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	8b 00                	mov    (%eax),%eax$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	85 c0                	test   %eax,%eax$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	75 f9                	jne    f0101e04 <mem_init+0x601>$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	85 db                	test   %ebx,%ebx$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	74 24                	je     f0101e33 <mem_init+0x630>$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	c7 44 24 0c 7d 7f 10 	movl   $0xf0107f7d,0xc(%esp)$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	f0 $/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	f0 $/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	c7 44 24 04 3d 03 00 	movl   $0x33d,0x4(%esp)$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	00 $/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	e8 19 e2 ff ff       	call   f010004c <_panic>$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	c7 04 24 b4 77 10 f0 	movl   $0xf01077b4,(%esp)$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	e8 ed 21 00 00       	call   f010402c <cprintf>$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	e8 64 f6 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	89 c3                	mov    %eax,%ebx$/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	85 c0                	test   %eax,%eax$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	75 24                	jne    f0101e75 <mem_init+0x672>$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	c7 44 24 0c 8b 7e 10 	movl   $0xf0107e8b,0xc(%esp)$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	f0 $/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	f0 $/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	00 $/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	e8 d7 e1 ff ff       	call   f010004c <_panic>$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	e8 2e f6 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	89 c7                	mov    %eax,%edi$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	85 c0                	test   %eax,%eax$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	75 24                	jne    f0101eab <mem_init+0x6a8>$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	c7 44 24 0c a1 7e 10 	movl   $0xf0107ea1,0xc(%esp)$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	f0 $/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	f0 $/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	c7 44 24 04 bb 03 00 	movl   $0x3bb,0x4(%esp)$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	00 $/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	e8 a1 e1 ff ff       	call   f010004c <_panic>$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	e8 f8 f5 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	89 c6                	mov    %eax,%esi$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	85 c0                	test   %eax,%eax$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	75 24                	jne    f0101ee1 <mem_init+0x6de>$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	c7 44 24 0c b7 7e 10 	movl   $0xf0107eb7,0xc(%esp)$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	f0 $/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	f0 $/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	00 $/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	e8 6b e1 ff ff       	call   f010004c <_panic>$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	39 fb                	cmp    %edi,%ebx$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	75 24                	jne    f0101f09 <mem_init+0x706>$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	c7 44 24 0c cd 7e 10 	movl   $0xf0107ecd,0xc(%esp)$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	f0 $/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	f0 $/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	00 $/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	e8 43 e1 ff ff       	call   f010004c <_panic>$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	39 c7                	cmp    %eax,%edi$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	74 04                	je     f0101f11 <mem_init+0x70e>$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	75 24                	jne    f0101f35 <mem_init+0x732>$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	c7 44 24 0c 94 77 10 	movl   $0xf0107794,0xc(%esp)$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	f0 $/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	f0 $/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	00 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	e8 17 e1 ff ff       	call   f010004c <_panic>$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	8b 15 60 32 34 f0    	mov    0xf0343260,%edx$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	c7 05 60 32 34 f0 00 	movl   $0x0,0xf0343260$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	00 00 00 $/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	e8 5b f5 ff ff       	call   f01014af <page_alloc>$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	85 c0                	test   %eax,%eax$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	74 24                	je     f0101f7c <mem_init+0x779>$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	c7 44 24 0c 36 7f 10 	movl   $0xf0107f36,0xc(%esp)$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	f0 $/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	f0 $/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	00 $/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	e8 d0 e0 ff ff       	call   f010004c <_panic>$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	00 $/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	e8 e8 f6 ff ff       	call   f0101680 <page_lookup>$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	85 c0                	test   %eax,%eax$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	74 24                	je     f0101fc0 <mem_init+0x7bd>$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	c7 44 24 0c d4 77 10 	movl   $0xf01077d4,0xc(%esp)$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	f0 $/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	f0 $/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	00 $/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	e8 8c e0 ff ff       	call   f010004c <_panic>$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	00 $/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	00 $/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	e8 b0 f7 ff ff       	call   f0101791 <page_insert>$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	85 c0                	test   %eax,%eax$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	78 24                	js     f0102009 <mem_init+0x806>$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	c7 44 24 0c 0c 78 10 	movl   $0xf010780c,0xc(%esp)$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	f0 $/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	f0 $/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	00 $/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	e8 43 e0 ff ff       	call   f010004c <_panic>$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	e8 33 f5 ff ff       	call   f0101544 <page_free>$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	00 $/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	00 $/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	e8 5f f7 ff ff       	call   f0101791 <page_insert>$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	85 c0                	test   %eax,%eax$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	74 24                	je     f010205a <mem_init+0x857>$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	c7 44 24 0c 3c 78 10 	movl   $0xf010783c,0xc(%esp)$/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	f0 $/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	f0 $/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	00 $/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	e8 f2 df ff ff       	call   f010004c <_panic>$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	8b 0d ac 3e 34 f0    	mov    0xf0343eac,%ecx$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	a1 b0 3e 34 f0       	mov    0xf0343eb0,%eax$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	8b 11                	mov    (%ecx),%edx$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	89 d8                	mov    %ebx,%eax$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	39 c2                	cmp    %eax,%edx$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	74 24                	je     f01020a6 <mem_init+0x8a3>$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	c7 44 24 0c 6c 78 10 	movl   $0xf010786c,0xc(%esp)$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	f0 $/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	f0 $/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	00 $/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	e8 a6 df ff ff       	call   f010004c <_panic>$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	e8 c8 ed ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	89 fa                	mov    %edi,%edx$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	39 d0                	cmp    %edx,%eax$/;"	l
f01020c0	obj/kern/kernel.asm	/^f01020c0:	74 24                	je     f01020e6 <mem_init+0x8e3>$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 44 24 0c 94 78 10 	movl   $0xf0107894,0xc(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	f0 $/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	f0 $/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	00 $/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	e8 66 df ff ff       	call   f010004c <_panic>$/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01020eb	obj/kern/kernel.asm	/^f01020eb:	74 24                	je     f0102111 <mem_init+0x90e>$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	c7 44 24 0c 88 7f 10 	movl   $0xf0107f88,0xc(%esp)$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	f0 $/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	f0 $/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	00 $/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	e8 3b df ff ff       	call   f010004c <_panic>$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	74 24                	je     f010213c <mem_init+0x939>$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	c7 44 24 0c 99 7f 10 	movl   $0xf0107f99,0xc(%esp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	f0 $/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	f0 $/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	c7 44 24 04 d5 03 00 	movl   $0x3d5,0x4(%esp)$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	00 $/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	e8 10 df ff ff       	call   f010004c <_panic>$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	00 $/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	00 $/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	e8 36 f6 ff ff       	call   f0101791 <page_insert>$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	85 c0                	test   %eax,%eax$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	74 24                	je     f0102183 <mem_init+0x980>$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	c7 44 24 0c c4 78 10 	movl   $0xf01078c4,0xc(%esp)$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	f0 $/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	f0 $/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	00 $/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	e8 c9 de ff ff       	call   f010004c <_panic>$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	e8 e9 ec ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	89 f2                	mov    %esi,%edx$/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	39 d0                	cmp    %edx,%eax$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	74 24                	je     f01021c8 <mem_init+0x9c5>$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	c7 44 24 0c 00 79 10 	movl   $0xf0107900,0xc(%esp)$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	f0 $/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	f0 $/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	00 $/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	e8 84 de ff ff       	call   f010004c <_panic>$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	74 24                	je     f01021f3 <mem_init+0x9f0>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 44 24 0c aa 7f 10 	movl   $0xf0107faa,0xc(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	f0 $/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	f0 $/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	00 $/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	e8 59 de ff ff       	call   f010004c <_panic>$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	e8 b0 f2 ff ff       	call   f01014af <page_alloc>$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	85 c0                	test   %eax,%eax$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	74 24                	je     f0102227 <mem_init+0xa24>$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	c7 44 24 0c 36 7f 10 	movl   $0xf0107f36,0xc(%esp)$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	f0 $/;"	l
f010220b	obj/kern/kernel.asm	/^f010220b:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	f0 $/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	00 $/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	e8 25 de ff ff       	call   f010004c <_panic>$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	00 $/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	00 $/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	e8 49 f5 ff ff       	call   f0101791 <page_insert>$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	85 c0                	test   %eax,%eax$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	74 24                	je     f0102270 <mem_init+0xa6d>$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	c7 44 24 0c c4 78 10 	movl   $0xf01078c4,0xc(%esp)$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	f0 $/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	f0 $/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	00 $/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	e8 dc dd ff ff       	call   f010004c <_panic>$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	e8 fc eb ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	89 f2                	mov    %esi,%edx$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	39 d0                	cmp    %edx,%eax$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	74 24                	je     f01022b5 <mem_init+0xab2>$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	c7 44 24 0c 00 79 10 	movl   $0xf0107900,0xc(%esp)$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	f0 $/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	f0 $/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	00 $/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	e8 97 dd ff ff       	call   f010004c <_panic>$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	74 24                	je     f01022e0 <mem_init+0xadd>$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	c7 44 24 0c aa 7f 10 	movl   $0xf0107faa,0xc(%esp)$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	f0 $/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	f0 $/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	00 $/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	e8 6c dd ff ff       	call   f010004c <_panic>$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	e8 c3 f1 ff ff       	call   f01014af <page_alloc>$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	85 c0                	test   %eax,%eax$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	74 24                	je     f0102314 <mem_init+0xb11>$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c7 44 24 0c 36 7f 10 	movl   $0xf0107f36,0xc(%esp)$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	f0 $/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	f0 $/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	00 $/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	e8 38 dd ff ff       	call   f010004c <_panic>$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	8b 15 ac 3e 34 f0    	mov    0xf0343eac,%edx$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	8b 02                	mov    (%edx),%eax$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102321	obj/kern/kernel.asm	/^f0102321:	89 c1                	mov    %eax,%ecx$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	3b 0d a8 3e 34 f0    	cmp    0xf0343ea8,%ecx$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	72 20                	jb     f010234e <mem_init+0xb4b>$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	f0 $/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	00 $/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	e8 fe dc ff ff       	call   f010004c <_panic>$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	00 $/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	00 $/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	e8 15 f2 ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	83 c2 04             	add    $0x4,%edx$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	39 d0                	cmp    %edx,%eax$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	74 24                	je     f010239c <mem_init+0xb99>$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	c7 44 24 0c 30 79 10 	movl   $0xf0107930,0xc(%esp)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	f0 $/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	f0 $/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	00 $/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	e8 b0 dc ff ff       	call   f010004c <_panic>$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	00 $/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	00 $/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	e8 d4 f3 ff ff       	call   f0101791 <page_insert>$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	85 c0                	test   %eax,%eax$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	74 24                	je     f01023e5 <mem_init+0xbe2>$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	c7 44 24 0c 70 79 10 	movl   $0xf0107970,0xc(%esp)$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	f0 $/;"	l
f01023c9	obj/kern/kernel.asm	/^f01023c9:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	f0 $/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	00 $/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	e8 67 dc ff ff       	call   f010004c <_panic>$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	8b 0d ac 3e 34 f0    	mov    0xf0343eac,%ecx$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	89 c8                	mov    %ecx,%eax$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	e8 81 ea ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	89 f2                	mov    %esi,%edx$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	39 d0                	cmp    %edx,%eax$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	74 24                	je     f0102430 <mem_init+0xc2d>$/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	c7 44 24 0c 00 79 10 	movl   $0xf0107900,0xc(%esp)$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	f0 $/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	f0 $/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	00 $/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	e8 1c dc ff ff       	call   f010004c <_panic>$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	74 24                	je     f010245b <mem_init+0xc58>$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	c7 44 24 0c aa 7f 10 	movl   $0xf0107faa,0xc(%esp)$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	f0 $/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	f0 $/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	00 $/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	e8 f1 db ff ff       	call   f010004c <_panic>$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	00 $/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	00 $/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	e8 0d f1 ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	75 24                	jne    f010249f <mem_init+0xc9c>$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	c7 44 24 0c b0 79 10 	movl   $0xf01079b0,0xc(%esp)$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	f0 $/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	f0 $/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	00 $/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	e8 ad db ff ff       	call   f010004c <_panic>$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	75 24                	jne    f01024cd <mem_init+0xcca>$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	c7 44 24 0c bb 7f 10 	movl   $0xf0107fbb,0xc(%esp)$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	f0 $/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	f0 $/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	00 $/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01024c8	obj/kern/kernel.asm	/^f01024c8:	e8 7f db ff ff       	call   f010004c <_panic>$/;"	l
f01024cd	obj/kern/kernel.asm	/^f01024cd:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	00 $/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	00 $/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	e8 a8 f2 ff ff       	call   f0101791 <page_insert>$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	85 c0                	test   %eax,%eax$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	78 24                	js     f0102511 <mem_init+0xd0e>$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	c7 44 24 0c e4 79 10 	movl   $0xf01079e4,0xc(%esp)$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	f0 $/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	f0 $/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	00 $/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	e8 3b db ff ff       	call   f010004c <_panic>$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	00 $/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	00 $/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	e8 5f f2 ff ff       	call   f0101791 <page_insert>$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	85 c0                	test   %eax,%eax$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	74 24                	je     f010255a <mem_init+0xd57>$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	c7 44 24 0c 1c 7a 10 	movl   $0xf0107a1c,0xc(%esp)$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	f0 $/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	f0 $/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	00 $/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	e8 f2 da ff ff       	call   f010004c <_panic>$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	00 $/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	00 $/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	e8 0c f0 ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	74 24                	je     f01025a0 <mem_init+0xd9d>$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	c7 44 24 0c 58 7a 10 	movl   $0xf0107a58,0xc(%esp)$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	f0 $/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	f0 $/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	00 $/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	e8 ac da ff ff       	call   f010004c <_panic>$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	e8 c9 e8 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	89 f8                	mov    %edi,%eax$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	74 24                	je     f01025ec <mem_init+0xde9>$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	c7 44 24 0c 90 7a 10 	movl   $0xf0107a90,0xc(%esp)$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	f0 $/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	f0 $/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	00 $/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	e8 60 da ff ff       	call   f010004c <_panic>$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	e8 82 e8 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	74 24                	je     f0102622 <mem_init+0xe1f>$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	c7 44 24 0c bc 7a 10 	movl   $0xf0107abc,0xc(%esp)$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	f0 $/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	f0 $/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	00 $/;"	l
f0102616	obj/kern/kernel.asm	/^f0102616:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010261d	obj/kern/kernel.asm	/^f010261d:	e8 2a da ff ff       	call   f010004c <_panic>$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	74 24                	je     f010264d <mem_init+0xe4a>$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	c7 44 24 0c d1 7f 10 	movl   $0xf0107fd1,0xc(%esp)$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	f0 $/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	f0 $/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	00 $/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	e8 ff d9 ff ff       	call   f010004c <_panic>$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	74 24                	je     f0102678 <mem_init+0xe75>$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 44 24 0c e2 7f 10 	movl   $0xf0107fe2,0xc(%esp)$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	f0 $/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	f0 $/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	00 $/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	e8 d4 d9 ff ff       	call   f010004c <_panic>$/;"	l
f0102678	obj/kern/kernel.asm	/^f0102678:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	e8 2b ee ff ff       	call   f01014af <page_alloc>$/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	85 c0                	test   %eax,%eax$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	74 04                	je     f010268c <mem_init+0xe89>$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	39 c6                	cmp    %eax,%esi$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	74 24                	je     f01026b0 <mem_init+0xead>$/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	c7 44 24 0c ec 7a 10 	movl   $0xf0107aec,0xc(%esp)$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	f0 $/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	f0 $/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	00 $/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	e8 9c d9 ff ff       	call   f010004c <_panic>$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	00 $/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	e8 7c f0 ff ff       	call   f0101741 <page_remove>$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	8b 15 ac 3e 34 f0    	mov    0xf0343eac,%edx$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	e8 a0 e7 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	74 24                	je     f0102704 <mem_init+0xf01>$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	c7 44 24 0c 10 7b 10 	movl   $0xf0107b10,0xc(%esp)$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	f0 $/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	f0 $/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	00 $/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	e8 48 d9 ff ff       	call   f010004c <_panic>$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	e8 6a e7 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	89 fa                	mov    %edi,%edx$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	74 24                	je     f0102747 <mem_init+0xf44>$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 44 24 0c bc 7a 10 	movl   $0xf0107abc,0xc(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	f0 $/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	f0 $/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	00 $/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	e8 05 d9 ff ff       	call   f010004c <_panic>$/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	74 24                	je     f0102772 <mem_init+0xf6f>$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	c7 44 24 0c 88 7f 10 	movl   $0xf0107f88,0xc(%esp)$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	f0 $/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	f0 $/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	00 $/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	e8 da d8 ff ff       	call   f010004c <_panic>$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	74 24                	je     f010279d <mem_init+0xf9a>$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	c7 44 24 0c e2 7f 10 	movl   $0xf0107fe2,0xc(%esp)$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	f0 $/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	f0 $/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	c7 44 24 04 09 04 00 	movl   $0x409,0x4(%esp)$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	00 $/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	e8 af d8 ff ff       	call   f010004c <_panic>$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	00 $/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	e8 91 ef ff ff       	call   f0101741 <page_remove>$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	e8 b9 e6 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	74 24                	je     f01027eb <mem_init+0xfe8>$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	c7 44 24 0c 10 7b 10 	movl   $0xf0107b10,0xc(%esp)$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	f0 $/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	f0 $/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	00 $/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	e8 61 d8 ff ff       	call   f010004c <_panic>$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	e8 83 e6 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	74 24                	je     f0102821 <mem_init+0x101e>$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	c7 44 24 0c 34 7b 10 	movl   $0xf0107b34,0xc(%esp)$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	f0 $/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	f0 $/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	00 $/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	e8 2b d8 ff ff       	call   f010004c <_panic>$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	74 24                	je     f010284c <mem_init+0x1049>$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	c7 44 24 0c f3 7f 10 	movl   $0xf0107ff3,0xc(%esp)$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	f0 $/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	f0 $/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	00 $/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	e8 00 d8 ff ff       	call   f010004c <_panic>$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	74 24                	je     f0102877 <mem_init+0x1074>$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	c7 44 24 0c e2 7f 10 	movl   $0xf0107fe2,0xc(%esp)$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	f0 $/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	f0 $/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	00 $/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	e8 d5 d7 ff ff       	call   f010004c <_panic>$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	e8 2c ec ff ff       	call   f01014af <page_alloc>$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	85 c0                	test   %eax,%eax$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	74 04                	je     f010288b <mem_init+0x1088>$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	39 c7                	cmp    %eax,%edi$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	74 24                	je     f01028af <mem_init+0x10ac>$/;"	l
f010288b	obj/kern/kernel.asm	/^f010288b:	c7 44 24 0c 5c 7b 10 	movl   $0xf0107b5c,0xc(%esp)$/;"	l
f0102892	obj/kern/kernel.asm	/^f0102892:	f0 $/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010289a	obj/kern/kernel.asm	/^f010289a:	f0 $/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	00 $/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	e8 9d d7 ff ff       	call   f010004c <_panic>$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	e8 f4 eb ff ff       	call   f01014af <page_alloc>$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	85 c0                	test   %eax,%eax$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	74 24                	je     f01028e3 <mem_init+0x10e0>$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	c7 44 24 0c 36 7f 10 	movl   $0xf0107f36,0xc(%esp)$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	f0 $/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	f0 $/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	00 $/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	e8 69 d7 ff ff       	call   f010004c <_panic>$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	8b 08                	mov    (%eax),%ecx$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01028f0	obj/kern/kernel.asm	/^f01028f0:	89 da                	mov    %ebx,%edx$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	74 24                	je     f0102926 <mem_init+0x1123>$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	c7 44 24 0c 6c 78 10 	movl   $0xf010786c,0xc(%esp)$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	f0 $/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	f0 $/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	00 $/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	e8 26 d7 ff ff       	call   f010004c <_panic>$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	74 24                	je     f0102957 <mem_init+0x1154>$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	c7 44 24 0c 99 7f 10 	movl   $0xf0107f99,0xc(%esp)$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	f0 $/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	f0 $/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	00 $/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	e8 f5 d6 ff ff       	call   f010004c <_panic>$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	e8 df eb ff ff       	call   f0101544 <page_free>$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	00 $/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	00 $/;"	l
f0102975	obj/kern/kernel.asm	/^f0102975:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	e8 01 ec ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	8b 0d ac 3e 34 f0    	mov    0xf0343eac,%ecx$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	8b 15 a8 3e 34 f0    	mov    0xf0343ea8,%edx$/;"	l
f010299d	obj/kern/kernel.asm	/^f010299d:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	72 23                	jb     f01029d4 <mem_init+0x11d1>$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	f0 $/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	c7 44 24 04 22 04 00 	movl   $0x422,0x4(%esp)$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	00 $/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	e8 78 d6 ff ff       	call   f010004c <_panic>$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	39 d0                	cmp    %edx,%eax$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	74 24                	je     f0102a05 <mem_init+0x1202>$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	c7 44 24 0c 04 80 10 	movl   $0xf0108004,0xc(%esp)$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	f0 $/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	f0 $/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	00 $/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	e8 47 d6 ff ff       	call   f010004c <_panic>$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	89 d8                	mov    %ebx,%eax$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	89 c1                	mov    %eax,%ecx$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	77 20                	ja     f0102a4a <mem_init+0x1247>$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	f0 $/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	00 $/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	e8 02 d6 ff ff       	call   f010004c <_panic>$/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	00 $/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	00 $/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	e8 30 37 00 00       	call   f0106197 <memset>$/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	e8 d5 ea ff ff       	call   f0101544 <page_free>$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	00 $/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	00 $/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	e8 f7 ea ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	89 da                	mov    %ebx,%edx$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	89 d0                	mov    %edx,%eax$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	72 20                	jb     f0102ac7 <mem_init+0x12c4>$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	f0 $/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	00 $/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	e8 85 d5 ff ff       	call   f010004c <_panic>$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	75 11                	jne    f0102aea <mem_init+0x12e7>$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f0102adf	obj/kern/kernel.asm	/^f0102adf:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	74 24                	je     f0102b0e <mem_init+0x130b>$/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	c7 44 24 0c 1c 80 10 	movl   $0xf010801c,0xc(%esp)$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	f0 $/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	f0 $/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	00 $/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	e8 3e d5 ff ff       	call   f010004c <_panic>$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	39 d0                	cmp    %edx,%eax$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	75 d0                	jne    f0102ae5 <mem_init+0x12e2>$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	89 0d 60 32 34 f0    	mov    %ecx,0xf0343260$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	e8 0d ea ff ff       	call   f0101544 <page_free>$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102b3a	obj/kern/kernel.asm	/^f0102b3a:	e8 05 ea ff ff       	call   f0101544 <page_free>$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102b42	obj/kern/kernel.asm	/^f0102b42:	e8 fd e9 ff ff       	call   f0101544 <page_free>$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	c7 04 24 33 80 10 f0 	movl   $0xf0108033,(%esp)$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	e8 d9 14 00 00       	call   f010402c <cprintf>$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	a1 b0 3e 34 f0       	mov    0xf0343eb0,%eax$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	77 20                	ja     f0102b7f <mem_init+0x137c>$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	f0 $/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	c7 44 24 04 bc 00 00 	movl   $0xbc,0x4(%esp)$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	00 $/;"	l
f0102b73	obj/kern/kernel.asm	/^f0102b73:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	e8 cd d4 ff ff       	call   f010004c <_panic>$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	00 $/;"	l
f0102b87	obj/kern/kernel.asm	/^f0102b87:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	e8 7e ea ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	a1 6c 32 34 f0       	mov    0xf034326c,%eax$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	77 20                	ja     f0102bcf <mem_init+0x13cc>$/;"	l
f0102baf	obj/kern/kernel.asm	/^f0102baf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	f0 $/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	00 $/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	e8 7d d4 ff ff       	call   f010004c <_panic>$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102bd6	obj/kern/kernel.asm	/^f0102bd6:	00 $/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	e8 2e ea ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	b8 00 00 12 f0       	mov    $0xf0120000,%eax$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	77 20                	ja     f0102c1f <mem_init+0x141c>$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	f0 $/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
f0102c12	obj/kern/kernel.asm	/^f0102c12:	00 $/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	e8 2d d4 ff ff       	call   f010004c <_panic>$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	00 $/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	c7 04 24 00 00 12 00 	movl   $0x120000,(%esp)$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	e8 df e9 ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	00 $/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c51	obj/kern/kernel.asm	/^f0102c51:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	e8 bc e9 ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	00 $/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	c7 04 24 00 00 00 fe 	movl   $0xfe000000,(%esp)$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	b9 00 00 00 02       	mov    $0x2000000,%ecx$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	ba 00 00 00 fe       	mov    $0xfe000000,%edx$/;"	l
f0102c7e	obj/kern/kernel.asm	/^f0102c7e:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	e8 99 e9 ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	b8 00 50 34 f0       	mov    $0xf0345000,%eax$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	0f 87 79 08 00 00    	ja     f0103511 <mem_init+0x1d0e>$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	eb 0c                	jmp    f0102ca6 <mem_init+0x14a3>$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	89 d8                	mov    %ebx,%eax$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	77 27                	ja     f0102ccb <mem_init+0x14c8>$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	eb 05                	jmp    f0102cab <mem_init+0x14a8>$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	b8 00 50 34 f0       	mov    $0xf0345000,%eax$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	f0 $/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	c7 44 24 04 14 01 00 	movl   $0x114,0x4(%esp)$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	00 $/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	e8 81 d3 ff ff       	call   f010004c <_panic>$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	00 $/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	89 f2                	mov    %esi,%edx$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	e8 34 e9 ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	81 fe 00 80 b7 ef    	cmp    $0xefb78000,%esi$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	75 99                	jne    f0102c9a <mem_init+0x1497>$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	8b 35 ac 3e 34 f0    	mov    0xf0343eac,%esi$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	a1 a8 3e 34 f0       	mov    0xf0343ea8,%eax$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	8d 3c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%edi$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	0f 84 80 00 00 00    	je     f0102da2 <mem_init+0x159f>$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	89 f0                	mov    %esi,%eax$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	e8 47 e1 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	8b 15 b0 3e 34 f0    	mov    0xf0343eb0,%edx$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	77 20                	ja     f0102d62 <mem_init+0x155f>$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	f0 $/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	c7 44 24 04 55 03 00 	movl   $0x355,0x4(%esp)$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	00 $/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	e8 ea d2 ff ff       	call   f010004c <_panic>$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	39 d0                	cmp    %edx,%eax$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	74 24                	je     f0102d91 <mem_init+0x158e>$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	c7 44 24 0c 80 7b 10 	movl   $0xf0107b80,0xc(%esp)$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	f0 $/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	f0 $/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	c7 44 24 04 55 03 00 	movl   $0x355,0x4(%esp)$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	00 $/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	e8 bb d2 ff ff       	call   f010004c <_panic>$/;"	l
f0102d91	obj/kern/kernel.asm	/^f0102d91:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	39 df                	cmp    %ebx,%edi$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	77 8c                	ja     f0102d27 <mem_init+0x1524>$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	eb 05                	jmp    f0102da7 <mem_init+0x15a4>$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	89 f0                	mov    %esi,%eax$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	e8 c7 e0 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	8b 15 6c 32 34 f0    	mov    0xf034326c,%edx$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	77 20                	ja     f0102de2 <mem_init+0x15df>$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	f0 $/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	c7 44 24 04 5a 03 00 	movl   $0x35a,0x4(%esp)$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	00 $/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	e8 6a d2 ff ff       	call   f010004c <_panic>$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	39 d0                	cmp    %edx,%eax$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	74 24                	je     f0102e11 <mem_init+0x160e>$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	c7 44 24 0c b4 7b 10 	movl   $0xf0107bb4,0xc(%esp)$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	f0 $/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	f0 $/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	c7 44 24 04 5a 03 00 	movl   $0x35a,0x4(%esp)$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	00 $/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	e8 3b d2 ff ff       	call   f010004c <_panic>$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	81 fb 00 00 02 00    	cmp    $0x20000,%ebx$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	75 88                	jne    f0102da7 <mem_init+0x15a4>$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	89 f0                	mov    %esi,%eax$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	e8 29 e0 ff ff       	call   f0100e54 <check_va2pa_large>$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	85 c0                	test   %eax,%eax$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	74 0a                	je     f0102e39 <mem_init+0x1636>$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	75 61                	jne    f0102e98 <mem_init+0x1695>$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	eb 58                	jmp    f0102e91 <mem_init+0x168e>$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	74 44                	je     f0102e85 <mem_init+0x1682>$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	89 f0                	mov    %esi,%eax$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	e8 01 e0 ff ff       	call   f0100e54 <check_va2pa_large>$/;"	l
f0102e53	obj/kern/kernel.asm	/^f0102e53:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	74 24                	je     f0102e7b <mem_init+0x1678>$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	c7 44 24 0c e8 7b 10 	movl   $0xf0107be8,0xc(%esp)$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	f0 $/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	f0 $/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	c7 44 24 04 5f 03 00 	movl   $0x35f,0x4(%esp)$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	00 $/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	e8 d1 d1 ff ff       	call   f010004c <_panic>$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	72 c1                	jb     f0102e46 <mem_init+0x1643>$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	c7 04 24 4c 80 10 f0 	movl   $0xf010804c,(%esp)$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	e8 9b 11 00 00       	call   f010402c <cprintf>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	eb 46                	jmp    f0102ede <mem_init+0x16db>$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	89 f0                	mov    %esi,%eax$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	e8 d1 df ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	74 24                	je     f0102ed2 <mem_init+0x16cf>$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	c7 44 24 0c 14 7c 10 	movl   $0xf0107c14,0xc(%esp)$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	f0 $/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	f0 $/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	c7 44 24 04 64 03 00 	movl   $0x364,0x4(%esp)$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	00 $/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	e8 7a d1 ff ff       	call   f010004c <_panic>$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	72 c1                	jb     f0102e9d <mem_init+0x169a>$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	eb b3                	jmp    f0102e91 <mem_init+0x168e>$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	89 da                	mov    %ebx,%edx$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	89 f0                	mov    %esi,%eax$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	e8 94 df ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	74 24                	je     f0102f0f <mem_init+0x170c>$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	c7 44 24 0c 63 80 10 	movl   $0xf0108063,0xc(%esp)$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	f0 $/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	f0 $/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	00 $/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	e8 3d d1 ff ff       	call   f010004c <_panic>$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	75 c1                	jne    f0102ede <mem_init+0x16db>$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	c7 45 cc 00 50 34 f0 	movl   $0xf0345000,-0x34(%ebp)$/;"	l
f0102f24	obj/kern/kernel.asm	/^f0102f24:	bf 00 00 bf ef       	mov    $0xefbf0000,%edi$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	8d 9f 00 80 00 00    	lea    0x8000(%edi),%ebx$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	89 d6                	mov    %edx,%esi$/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	8d 8f 00 00 01 00    	lea    0x10000(%edi),%ecx$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	89 da                	mov    %ebx,%edx$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	e8 28 df ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102f5a	obj/kern/kernel.asm	/^f0102f5a:	77 23                	ja     f0102f7f <mem_init+0x177c>$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	f0 $/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	c7 44 24 04 75 03 00 	movl   $0x375,0x4(%esp)$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	00 $/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	e8 cd d0 ff ff       	call   f010004c <_panic>$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	39 f0                	cmp    %esi,%eax$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	74 24                	je     f0102fa7 <mem_init+0x17a4>$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	c7 44 24 0c 3c 7c 10 	movl   $0xf0107c3c,0xc(%esp)$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	f0 $/;"	l
f0102f8b	obj/kern/kernel.asm	/^f0102f8b:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	f0 $/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	c7 44 24 04 75 03 00 	movl   $0x375,0x4(%esp)$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	00 $/;"	l
f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	e8 a5 d0 ff ff       	call   f010004c <_panic>$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	0f 85 87 05 00 00    	jne    f0103543 <mem_init+0x1d40>$/;"	l
f0102fbc	obj/kern/kernel.asm	/^f0102fbc:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	89 f0                	mov    %esi,%eax$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	e8 ad de ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	74 24                	je     f0102ff7 <mem_init+0x17f4>$/;"	l
f0102fd3	obj/kern/kernel.asm	/^f0102fd3:	c7 44 24 0c 84 7c 10 	movl   $0xf0107c84,0xc(%esp)$/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	f0 $/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	f0 $/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	c7 44 24 04 77 03 00 	movl   $0x377,0x4(%esp)$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	00 $/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	e8 55 d0 ff ff       	call   f010004c <_panic>$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	75 bf                	jne    f0102fc4 <mem_init+0x17c1>$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	81 ef 00 00 01 00    	sub    $0x10000,%edi$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	81 45 cc 00 80 00 00 	addl   $0x8000,-0x34(%ebp)$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	81 ff 00 00 b7 ef    	cmp    $0xefb70000,%edi$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	0f 85 0e ff ff ff    	jne    f0102f2c <mem_init+0x1729>$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103026	obj/kern/kernel.asm	/^f0103026:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	77 2e                	ja     f010305f <mem_init+0x185c>$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	0f 85 aa 00 00 00    	jne    f01030e5 <mem_init+0x18e2>$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	c7 44 24 0c 7e 80 10 	movl   $0xf010807e,0xc(%esp)$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	f0 $/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	f0 $/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	c7 44 24 04 81 03 00 	movl   $0x381,0x4(%esp)$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	00 $/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	e8 ed cf ff ff       	call   f010004c <_panic>$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	76 55                	jbe    f01030bb <mem_init+0x18b8>$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	75 24                	jne    f0103092 <mem_init+0x188f>$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	c7 44 24 0c 7e 80 10 	movl   $0xf010807e,0xc(%esp)$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	f0 $/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	f0 $/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	00 $/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	e8 ba cf ff ff       	call   f010004c <_panic>$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	75 4e                	jne    f01030e5 <mem_init+0x18e2>$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	c7 44 24 0c 8f 80 10 	movl   $0xf010808f,0xc(%esp)$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	f0 $/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	f0 $/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	c7 44 24 04 86 03 00 	movl   $0x386,0x4(%esp)$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	00 $/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	e8 91 cf ff ff       	call   f010004c <_panic>$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	74 24                	je     f01030e5 <mem_init+0x18e2>$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	c7 44 24 0c a0 80 10 	movl   $0xf01080a0,0xc(%esp)$/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	f0 $/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	f0 $/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	c7 44 24 04 88 03 00 	movl   $0x388,0x4(%esp)$/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	00 $/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	e8 67 cf ff ff       	call   f010004c <_panic>$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	40                   	inc    %eax$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	0f 85 35 ff ff ff    	jne    f0103026 <mem_init+0x1823>$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	c7 04 24 a8 7c 10 f0 	movl   $0xf0107ca8,(%esp)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	e8 2f 0f 00 00       	call   f010402c <cprintf>$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	77 20                	ja     f0103129 <mem_init+0x1926>$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	f0 $/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	c7 44 24 04 e8 00 00 	movl   $0xe8,0x4(%esp)$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	00 $/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	e8 23 cf ff ff       	call   f010004c <_panic>$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	e8 7b de ff ff       	call   f0100fb6 <check_page_free_list>$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	e8 5a e3 ff ff       	call   f01014af <page_alloc>$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	89 c6                	mov    %eax,%esi$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	85 c0                	test   %eax,%eax$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	75 24                	jne    f010317f <mem_init+0x197c>$/;"	l
f010315b	obj/kern/kernel.asm	/^f010315b:	c7 44 24 0c 8b 7e 10 	movl   $0xf0107e8b,0xc(%esp)$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	f0 $/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	f0 $/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	c7 44 24 04 b6 04 00 	movl   $0x4b6,0x4(%esp)$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	00 $/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	e8 cd ce ff ff       	call   f010004c <_panic>$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	e8 24 e3 ff ff       	call   f01014af <page_alloc>$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	89 c7                	mov    %eax,%edi$/;"	l
f010318d	obj/kern/kernel.asm	/^f010318d:	85 c0                	test   %eax,%eax$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	75 24                	jne    f01031b5 <mem_init+0x19b2>$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	c7 44 24 0c a1 7e 10 	movl   $0xf0107ea1,0xc(%esp)$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	f0 $/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	f0 $/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	c7 44 24 04 b7 04 00 	movl   $0x4b7,0x4(%esp)$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	00 $/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	e8 97 ce ff ff       	call   f010004c <_panic>$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	e8 ee e2 ff ff       	call   f01014af <page_alloc>$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	89 c3                	mov    %eax,%ebx$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	85 c0                	test   %eax,%eax$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	75 24                	jne    f01031eb <mem_init+0x19e8>$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	c7 44 24 0c b7 7e 10 	movl   $0xf0107eb7,0xc(%esp)$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	f0 $/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	f0 $/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	c7 44 24 04 b8 04 00 	movl   $0x4b8,0x4(%esp)$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	00 $/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	e8 61 ce ff ff       	call   f010004c <_panic>$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	e8 51 e3 ff ff       	call   f0101544 <page_free>$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	89 f8                	mov    %edi,%eax$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	89 c2                	mov    %eax,%edx$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	72 20                	jb     f010322e <mem_init+0x1a2b>$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	f0 $/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	00 $/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	e8 1e ce ff ff       	call   f010004c <_panic>$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	00 $/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	00 $/;"	l
f010323e	obj/kern/kernel.asm	/^f010323e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	e8 4c 2f 00 00       	call   f0106197 <memset>$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	89 d8                	mov    %ebx,%eax$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	89 c2                	mov    %eax,%edx$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	72 20                	jb     f0103286 <mem_init+0x1a83>$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	f0 $/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	00 $/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	e8 c6 cd ff ff       	call   f010004c <_panic>$/;"	l
f0103286	obj/kern/kernel.asm	/^f0103286:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	00 $/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	00 $/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	e8 f4 2e 00 00       	call   f0106197 <memset>$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	00 $/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	00 $/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	e8 cd e4 ff ff       	call   f0101791 <page_insert>$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	74 24                	je     f01032ef <mem_init+0x1aec>$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	c7 44 24 0c 88 7f 10 	movl   $0xf0107f88,0xc(%esp)$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	f0 $/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	f0 $/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	c7 44 24 04 bd 04 00 	movl   $0x4bd,0x4(%esp)$/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	00 $/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	e8 5d cd ff ff       	call   f010004c <_panic>$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	01 01 01 $/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	74 24                	je     f010331f <mem_init+0x1b1c>$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	c7 44 24 0c c8 7c 10 	movl   $0xf0107cc8,0xc(%esp)$/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	f0 $/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	f0 $/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	c7 44 24 04 be 04 00 	movl   $0x4be,0x4(%esp)$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	00 $/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	e8 2d cd ff ff       	call   f010004c <_panic>$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	00 $/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	00 $/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	e8 51 e4 ff ff       	call   f0101791 <page_insert>$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103347	obj/kern/kernel.asm	/^f0103347:	02 02 02 $/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	74 24                	je     f0103370 <mem_init+0x1b6d>$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	c7 44 24 0c ec 7c 10 	movl   $0xf0107cec,0xc(%esp)$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	f0 $/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	f0 $/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	c7 44 24 04 c0 04 00 	movl   $0x4c0,0x4(%esp)$/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	00 $/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	e8 dc cc ff ff       	call   f010004c <_panic>$/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	74 24                	je     f010339b <mem_init+0x1b98>$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	c7 44 24 0c aa 7f 10 	movl   $0xf0107faa,0xc(%esp)$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	f0 $/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	f0 $/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	c7 44 24 04 c1 04 00 	movl   $0x4c1,0x4(%esp)$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	00 $/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	e8 b1 cc ff ff       	call   f010004c <_panic>$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	74 24                	je     f01033c6 <mem_init+0x1bc3>$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	c7 44 24 0c f3 7f 10 	movl   $0xf0107ff3,0xc(%esp)$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	f0 $/;"	l
f01033aa	obj/kern/kernel.asm	/^f01033aa:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	f0 $/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	c7 44 24 04 c2 04 00 	movl   $0x4c2,0x4(%esp)$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	00 $/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	e8 86 cc ff ff       	call   f010004c <_panic>$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	03 03 03 $/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	89 d8                	mov    %ebx,%eax$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	2b 05 b0 3e 34 f0    	sub    0xf0343eb0,%eax$/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01033db	obj/kern/kernel.asm	/^f01033db:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	89 c2                	mov    %eax,%edx$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	3b 15 a8 3e 34 f0    	cmp    0xf0343ea8,%edx$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	72 20                	jb     f010340b <mem_init+0x1c08>$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	f0 $/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	00 $/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	e8 41 cc ff ff       	call   f010004c <_panic>$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	03 03 03 $/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	74 24                	je     f010343b <mem_init+0x1c38>$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	c7 44 24 0c 10 7d 10 	movl   $0xf0107d10,0xc(%esp)$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	f0 $/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	f0 $/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	c7 44 24 04 c4 04 00 	movl   $0x4c4,0x4(%esp)$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	00 $/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	e8 11 cc ff ff       	call   f010004c <_panic>$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	00 $/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	e8 f1 e2 ff ff       	call   f0101741 <page_remove>$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	74 24                	je     f010347b <mem_init+0x1c78>$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	c7 44 24 0c e2 7f 10 	movl   $0xf0107fe2,0xc(%esp)$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	f0 $/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	f0 $/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	c7 44 24 04 c6 04 00 	movl   $0x4c6,0x4(%esp)$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	00 $/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	e8 d1 cb ff ff       	call   f010004c <_panic>$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	89 f2                	mov    %esi,%edx$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	74 24                	je     f01034be <mem_init+0x1cbb>$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	c7 44 24 0c 6c 78 10 	movl   $0xf010786c,0xc(%esp)$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	f0 $/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	f0 $/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	c7 44 24 04 c9 04 00 	movl   $0x4c9,0x4(%esp)$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	00 $/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	e8 8e cb ff ff       	call   f010004c <_panic>$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	74 24                	je     f01034ef <mem_init+0x1cec>$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	c7 44 24 0c 99 7f 10 	movl   $0xf0107f99,0xc(%esp)$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	f0 $/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	f0 $/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	c7 44 24 04 cb 04 00 	movl   $0x4cb,0x4(%esp)$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	00 $/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	c7 04 24 9d 7d 10 f0 	movl   $0xf0107d9d,(%esp)$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	e8 5d cb ff ff       	call   f010004c <_panic>$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	e8 47 e0 ff ff       	call   f0101544 <page_free>$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	c7 04 24 3c 7d 10 f0 	movl   $0xf0107d3c,(%esp)$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	e8 23 0b 00 00       	call   f010402c <cprintf>$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	5b                   	pop    %ebx$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	5e                   	pop    %esi$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	5f                   	pop    %edi$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	5d                   	pop    %ebp$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	c3                   	ret    $/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	00 $/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	c7 04 24 00 50 34 00 	movl   $0x345000,(%esp)$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	e8 ed e0 ff ff       	call   f0101621 <boot_map_region>$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	bb 00 d0 34 f0       	mov    $0xf034d000,%ebx$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	be 00 80 be ef       	mov    $0xefbe8000,%esi$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	e9 57 f7 ff ff       	jmp    f0102c9a <mem_init+0x1497>$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	89 da                	mov    %ebx,%edx$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	e8 2e d9 ff ff       	call   f0100e7b <check_va2pa>$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	e9 2d fa ff ff       	jmp    f0102f7f <mem_init+0x177c>$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552 <user_mem_check>:$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	55                   	push   %ebp$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	89 e5                	mov    %esp,%ebp$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	57                   	push   %edi$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	56                   	push   %esi$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	53                   	push   %ebx$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	01 d8                	add    %ebx,%eax$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	83 cf 01             	or     $0x1,%edi$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	73 67                	jae    f01035da <user_mem_check+0x88>$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	76 17                	jbe    f0103592 <user_mem_check+0x40>$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	eb 08                	jmp    f0103585 <user_mem_check+0x33>$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	76 0d                	jbe    f0103592 <user_mem_check+0x40>$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	89 1d 68 32 34 f0    	mov    %ebx,0xf0343268$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	eb 4d                	jmp    f01035df <user_mem_check+0x8d>$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	00 $/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	8b 46 64             	mov    0x64(%esi),%eax$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	e8 da df ff ff       	call   f0101583 <pgdir_walk>$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	85 c0                	test   %eax,%eax$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	74 08                	je     f01035b5 <user_mem_check+0x63>$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	8b 00                	mov    (%eax),%eax$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	21 f8                	and    %edi,%eax$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	39 c7                	cmp    %eax,%edi$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	74 0d                	je     f01035c2 <user_mem_check+0x70>$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	89 1d 68 32 34 f0    	mov    %ebx,0xf0343268$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	eb 1d                	jmp    f01035df <user_mem_check+0x8d>$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	77 aa                	ja     f010357d <user_mem_check+0x2b>$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	eb 05                	jmp    f01035df <user_mem_check+0x8d>$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	5b                   	pop    %ebx$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	5e                   	pop    %esi$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	5f                   	pop    %edi$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	5d                   	pop    %ebp$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	c3                   	ret    $/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7 <user_mem_assert>:$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	55                   	push   %ebp$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	53                   	push   %ebx$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	83 c8 04             	or     $0x4,%eax$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	e8 41 ff ff ff       	call   f0103552 <user_mem_check>$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	85 c0                	test   %eax,%eax$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	79 24                	jns    f0103639 <user_mem_assert+0x52>$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	a1 68 32 34 f0       	mov    0xf0343268,%eax$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	c7 04 24 68 7d 10 f0 	movl   $0xf0107d68,(%esp)$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	e8 fb 09 00 00       	call   f010402c <cprintf>$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	e8 0c 07 00 00       	call   f0103d45 <env_destroy>$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	83 c4 14             	add    $0x14,%esp$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	5b                   	pop    %ebx$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	5d                   	pop    %ebp$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	c3                   	ret    $/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640 <envid2env>:$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	55                   	push   %ebp$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	89 e5                	mov    %esp,%ebp$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	57                   	push   %edi$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	56                   	push   %esi$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	53                   	push   %ebx$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	85 c0                	test   %eax,%eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	75 21                	jne    f0103674 <envid2env+0x34>$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	e8 a0 31 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	29 c2                	sub    %eax,%edx$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	89 06                	mov    %eax,(%esi)$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	eb 7d                	jmp    f01036f1 <envid2env+0xb1>$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	89 c3                	mov    %eax,%ebx$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	03 1d 6c 32 34 f0    	add    0xf034326c,%ebx$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	74 05                	je     f0103690 <envid2env+0x50>$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	74 0d                	je     f010369d <envid2env+0x5d>$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	eb 54                	jmp    f01036f1 <envid2env+0xb1>$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	74 47                	je     f01036ea <envid2env+0xaa>$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	e8 50 31 00 00       	call   f01067f8 <cpunum>$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	29 c2                	sub    %eax,%edx$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	39 1c 85 28 40 34 f0 	cmp    %ebx,-0xfcbbfd8(,%eax,4)$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	74 2d                	je     f01036ea <envid2env+0xaa>$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	e8 33 31 00 00       	call   f01067f8 <cpunum>$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	29 c2                	sub    %eax,%edx$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	74 0d                	je     f01036ea <envid2env+0xaa>$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	eb 07                	jmp    f01036f1 <envid2env+0xb1>$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01036f4	obj/kern/kernel.asm	/^f01036f4:	5b                   	pop    %ebx$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	5e                   	pop    %esi$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	5f                   	pop    %edi$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	5d                   	pop    %ebp$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	c3                   	ret    $/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9 <env_init_percpu>:$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	55                   	push   %ebp$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	b8 00 a3 12 f0       	mov    $0xf012a300,%eax$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	8e e8                	mov    %eax,%gs$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	8e e0                	mov    %eax,%fs$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	b0 10                	mov    $0x10,%al$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	8e c0                	mov    %eax,%es$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	8e d8                	mov    %eax,%ds$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	8e d0                	mov    %eax,%ss$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	ea 1c 37 10 f0 08 00 	ljmp   $0x8,$0xf010371c$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	b0 00                	mov    $0x0,%al$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	0f 00 d0             	lldt   %ax$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	5d                   	pop    %ebp$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	c3                   	ret    $/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723 <env_init>:$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	55                   	push   %ebp$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	89 e5                	mov    %esp,%ebp$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	56                   	push   %esi$/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	53                   	push   %ebx$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	8b 35 6c 32 34 f0    	mov    0xf034326c,%esi$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	8b 0d 70 32 34 f0    	mov    0xf0343270,%ecx$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	8d 86 80 ff 01 00    	lea    0x1ff80(%esi),%eax$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	eb 02                	jmp    f0103743 <env_init+0x20>$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	89 c3                	mov    %eax,%ebx$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%eax)$/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	4a                   	dec    %edx$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	75 ec                	jne    f0103741 <env_init+0x1e>$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	89 35 70 32 34 f0    	mov    %esi,0xf0343270$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	e8 99 ff ff ff       	call   f01036f9 <env_init_percpu>$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	5b                   	pop    %ebx$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	5e                   	pop    %esi$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	5d                   	pop    %ebp$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	c3                   	ret    $/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764 <env_alloc>:$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	55                   	push   %ebp$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	89 e5                	mov    %esp,%ebp$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	53                   	push   %ebx$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	8b 1d 70 32 34 f0    	mov    0xf0343270,%ebx$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	85 db                	test   %ebx,%ebx$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	0f 84 9f 01 00 00    	je     f0103918 <env_alloc+0x1b4>$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	e8 2a dd ff ff       	call   f01014af <page_alloc>$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	85 c0                	test   %eax,%eax$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	0f 84 92 01 00 00    	je     f010391f <env_alloc+0x1bb>$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	89 c2                	mov    %eax,%edx$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	2b 15 b0 3e 34 f0    	sub    0xf0343eb0,%edx$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	89 d1                	mov    %edx,%ecx$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	3b 0d a8 3e 34 f0    	cmp    0xf0343ea8,%ecx$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	72 20                	jb     f01037c8 <env_alloc+0x64>$/;"	l
f01037a8	obj/kern/kernel.asm	/^f01037a8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	f0 $/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	00 $/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	e8 84 c8 ff ff       	call   f010004c <_panic>$/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	89 53 64             	mov    %edx,0x64(%ebx)$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	8b 15 ac 3e 34 f0    	mov    0xf0343eac,%edx$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	8b 53 64             	mov    0x64(%ebx),%edx$/;"	l
f01037e6	obj/kern/kernel.asm	/^f01037e6:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	83 c0 04             	add    $0x4,%eax$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	75 e7                	jne    f01037da <env_alloc+0x76>$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	8b 43 64             	mov    0x64(%ebx),%eax$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	77 20                	ja     f010381d <env_alloc+0xb9>$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	f0 $/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	c7 44 24 04 c2 00 00 	movl   $0xc2,0x4(%esp)$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	00 $/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	e8 2f c8 ff ff       	call   f010004c <_panic>$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	7f 05                	jg     f0103840 <env_alloc+0xdc>$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	89 da                	mov    %ebx,%edx$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	2b 15 6c 32 34 f0    	sub    0xf034326c,%edx$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	09 d0                	or     %edx,%eax$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	00 $/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	00 $/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	e8 14 29 00 00       	call   f0106197 <memset>$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	c7 43 6c 00 00 00 00 	movl   $0x0,0x6c(%ebx)$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	a3 70 32 34 f0       	mov    %eax,0xf0343270$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	89 18                	mov    %ebx,(%eax)$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	e8 33 2f 00 00       	call   f01067f8 <cpunum>$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	29 c2                	sub    %eax,%edx$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	83 3c 85 28 40 34 f0 	cmpl   $0x0,-0xfcbbfd8(,%eax,4)$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	00 $/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	74 1d                	je     f01038f8 <env_alloc+0x194>$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	e8 18 2f 00 00       	call   f01067f8 <cpunum>$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	29 c2                	sub    %eax,%edx$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	eb 05                	jmp    f01038fd <env_alloc+0x199>$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	c7 04 24 db 80 10 f0 	movl   $0xf01080db,(%esp)$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	e8 1b 07 00 00       	call   f010402c <cprintf>$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	eb 0c                	jmp    f0103924 <env_alloc+0x1c0>$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	eb 05                	jmp    f0103924 <env_alloc+0x1c0>$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	5b                   	pop    %ebx$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	5d                   	pop    %ebp$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	c3                   	ret    $/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a <region_alloc>:$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	55                   	push   %ebp$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	89 e5                	mov    %esp,%ebp$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	57                   	push   %edi$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	56                   	push   %esi$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	53                   	push   %ebx$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	89 c3                	mov    %eax,%ebx$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	89 c7                	mov    %eax,%edi$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	03 7d 10             	add    0x10(%ebp),%edi$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	81 c7 ff 0f 00 00    	add    $0xfff,%edi$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	73 51                	jae    f01039a7 <region_alloc+0x7d>$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	e8 4d db ff ff       	call   f01014af <page_alloc>$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	85 c0                	test   %eax,%eax$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	75 1c                	jne    f0103982 <region_alloc+0x58>$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	c7 44 24 08 f0 80 10 	movl   $0xf01080f0,0x8(%esp)$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	f0 $/;"	l
f010396e	obj/kern/kernel.asm	/^f010396e:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	00 $/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	e8 ca c6 ff ff       	call   f010004c <_panic>$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	00 $/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	8b 46 64             	mov    0x64(%esi),%eax$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	e8 f4 dd ff ff       	call   f0101791 <page_insert>$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	39 df                	cmp    %ebx,%edi$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	77 af                	ja     f0103956 <region_alloc+0x2c>$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	5b                   	pop    %ebx$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	5e                   	pop    %esi$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	5f                   	pop    %edi$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	5d                   	pop    %ebp$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	c3                   	ret    $/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af <env_create>:$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	55                   	push   %ebp$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01039b2	obj/kern/kernel.asm	/^f01039b2:	57                   	push   %edi$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	56                   	push   %esi$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	53                   	push   %ebx$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	00 $/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	e8 96 fd ff ff       	call   f0103764 <env_alloc>$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	85 c0                	test   %eax,%eax$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	79 20                	jns    f01039f2 <env_create+0x43>$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	c7 44 24 08 05 81 10 	movl   $0xf0108105,0x8(%esp)$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	f0 $/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	c7 44 24 04 8a 01 00 	movl   $0x18a,0x4(%esp)$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	00 $/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	e8 5a c6 ff ff       	call   f010004c <_panic>$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	89 46 50             	mov    %eax,0x50(%esi)$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	74 1c                	je     f0103a1f <env_create+0x70>$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	c7 44 24 08 b0 80 10 	movl   $0xf01080b0,0x8(%esp)$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	f0 $/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	00 $/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	e8 2d c6 ff ff       	call   f010004c <_panic>$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	8b 5f 1c             	mov    0x1c(%edi),%ebx$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	8b 57 2c             	mov    0x2c(%edi),%edx$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	8b 46 64             	mov    0x64(%esi),%eax$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	77 20                	ja     f0103a4f <env_create+0xa0>$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	f0 $/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 44 24 04 6a 01 00 	movl   $0x16a,0x4(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	00 $/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	e8 fd c5 ff ff       	call   f010004c <_panic>$/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	01 fb                	add    %edi,%ebx$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	01 da                	add    %ebx,%edx$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	39 d3                	cmp    %edx,%ebx$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	73 58                	jae    f0103ac0 <env_create+0x111>$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	75 4b                	jne    f0103ab8 <env_create+0x109>$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	e8 a7 fe ff ff       	call   f010392a <region_alloc>$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	00 $/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	e8 fa 26 00 00       	call   f0106197 <memset>$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	89 f8                	mov    %edi,%eax$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	e8 29 27 00 00       	call   f01061e1 <memmove>$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	77 a8                	ja     f0103a68 <env_create+0xb9>$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	77 20                	ja     f0103aec <env_create+0x13d>$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	f0 $/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	c7 44 24 04 72 01 00 	movl   $0x172,0x4(%esp)$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	00 $/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	e8 60 c5 ff ff       	call   f010004c <_panic>$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	00 $/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	c7 44 24 04 00 d0 bf 	movl   $0xeebfd000,0x4(%esp)$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	ee $/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	e8 18 fe ff ff       	call   f010392a <region_alloc>$/;"	l
f0103b12	obj/kern/kernel.asm	/^f0103b12:	c7 46 60 00 d0 bf ee 	movl   $0xeebfd000,0x60(%esi)$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	5b                   	pop    %ebx$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	5e                   	pop    %esi$/;"	l
f0103b1e	obj/kern/kernel.asm	/^f0103b1e:	5f                   	pop    %edi$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	5d                   	pop    %ebp$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	c3                   	ret    $/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21 <env_free>:$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	55                   	push   %ebp$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	57                   	push   %edi$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	56                   	push   %esi$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	53                   	push   %ebx$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	e8 c6 2c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	29 c2                	sub    %eax,%edx$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	39 3c 85 28 40 34 f0 	cmp    %edi,-0xfcbbfd8(,%eax,4)$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	75 34                	jne    f0103b7b <env_free+0x5a>$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	a1 ac 3e 34 f0       	mov    0xf0343eac,%eax$/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	77 20                	ja     f0103b73 <env_free+0x52>$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	f0 $/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	c7 44 24 04 9d 01 00 	movl   $0x19d,0x4(%esp)$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	00 $/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	e8 d9 c4 ff ff       	call   f010004c <_panic>$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	e8 75 2c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	29 c2                	sub    %eax,%edx$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	83 3c 85 28 40 34 f0 	cmpl   $0x0,-0xfcbbfd8(,%eax,4)$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	00 $/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	74 1d                	je     f0103bb6 <env_free+0x95>$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	e8 5a 2c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	29 c2                	sub    %eax,%edx$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	eb 05                	jmp    f0103bbb <env_free+0x9a>$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	c7 04 24 14 81 10 f0 	movl   $0xf0108114,(%esp)$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	e8 5d 04 00 00       	call   f010402c <cprintf>$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	0f 84 b6 00 00 00    	je     f0103caa <env_free+0x189>$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	89 f0                	mov    %esi,%eax$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	72 20                	jb     f0103c2a <env_free+0x109>$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103c0e	obj/kern/kernel.asm	/^f0103c0e:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	f0 $/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	c7 44 24 04 ac 01 00 	movl   $0x1ac,0x4(%esp)$/;"	l
f0103c1d	obj/kern/kernel.asm	/^f0103c1d:	00 $/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	e8 22 c4 ff ff       	call   f010004c <_panic>$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	01 $/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	74 17                	je     f0103c59 <env_free+0x138>$/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	89 d8                	mov    %ebx,%eax$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	e8 e8 da ff ff       	call   f0101741 <page_remove>$/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	43                   	inc    %ebx$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	75 d6                	jne    f0103c38 <env_free+0x117>$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	72 1c                	jb     f0103c96 <env_free+0x175>$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	c7 44 24 08 38 77 10 	movl   $0xf0107738,0x8(%esp)$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	f0 $/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	00 $/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	e8 b6 c3 ff ff       	call   f010004c <_panic>$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	03 05 b0 3e 34 f0    	add    0xf0343eb0,%eax$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	e8 b9 d8 ff ff       	call   f0101563 <page_decref>$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	0f 85 1c ff ff ff    	jne    f0103bd6 <env_free+0xb5>$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	77 20                	ja     f0103ce4 <env_free+0x1c3>$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	f0 $/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	00 $/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	e8 68 c3 ff ff       	call   f010004c <_panic>$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	c7 47 64 00 00 00 00 	movl   $0x0,0x64(%edi)$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	72 1c                	jb     f0103d17 <env_free+0x1f6>$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	c7 44 24 08 38 77 10 	movl   $0xf0107738,0x8(%esp)$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	f0 $/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	00 $/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	e8 35 c3 ff ff       	call   f010004c <_panic>$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	03 05 b0 3e 34 f0    	add    0xf0343eb0,%eax$/;"	l
f0103d20	obj/kern/kernel.asm	/^f0103d20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	e8 3b d8 ff ff       	call   f0101563 <page_decref>$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	a1 70 32 34 f0       	mov    0xf0343270,%eax$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	89 3d 70 32 34 f0    	mov    %edi,0xf0343270$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	5b                   	pop    %ebx$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	5e                   	pop    %esi$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	5f                   	pop    %edi$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	5d                   	pop    %ebp$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	c3                   	ret    $/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45 <env_destroy>:$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	55                   	push   %ebp$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	53                   	push   %ebx$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	75 23                	jne    f0103d78 <env_destroy+0x33>$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	e8 9e 2a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	29 c2                	sub    %eax,%edx$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	39 1c 85 28 40 34 f0 	cmp    %ebx,-0xfcbbfd8(,%eax,4)$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	74 09                	je     f0103d78 <env_destroy+0x33>$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	eb 39                	jmp    f0103db1 <env_destroy+0x6c>$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	e8 a1 fd ff ff       	call   f0103b21 <env_free>$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	e8 73 2a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	29 c2                	sub    %eax,%edx$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	39 1c 85 28 40 34 f0 	cmp    %ebx,-0xfcbbfd8(,%eax,4)$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	75 17                	jne    f0103db1 <env_destroy+0x6c>$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	e8 59 2a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	c7 80 28 40 34 f0 00 	movl   $0x0,-0xfcbbfd8(%eax)$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	00 00 00 $/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	e8 1b 0d 00 00       	call   f0104acc <sched_yield>$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	5b                   	pop    %ebx$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	5d                   	pop    %ebp$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	c3                   	ret    $/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7 <env_pop_tf>:$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	55                   	push   %ebp$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	53                   	push   %ebx$/;"	l
f0103dbb	obj/kern/kernel.asm	/^f0103dbb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	e8 35 2a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	29 c2                	sub    %eax,%edx$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	8b 1c 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%ebx$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	e8 1d 2a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	61                   	popa   $/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	07                   	pop    %es$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	1f                   	pop    %ds$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	cf                   	iret   $/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	c7 44 24 08 2a 81 10 	movl   $0xf010812a,0x8(%esp)$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	f0 $/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	c7 44 24 04 f0 01 00 	movl   $0x1f0,0x4(%esp)$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	00 $/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	e8 48 c2 ff ff       	call   f010004c <_panic>$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04 <env_run>:$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	55                   	push   %ebp$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	53                   	push   %ebx$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	e8 e5 29 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	29 c2                	sub    %eax,%edx$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	39 1c 85 28 40 34 f0 	cmp    %ebx,-0xfcbbfd8(,%eax,4)$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	0f 84 98 00 00 00    	je     f0103ec4 <env_run+0xc0>$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	e8 c7 29 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	29 c2                	sub    %eax,%edx$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	83 3c 85 28 40 34 f0 	cmpl   $0x0,-0xfcbbfd8(,%eax,4)$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	00 $/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	74 29                	je     f0103e70 <env_run+0x6c>$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	e8 ac 29 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103e59	obj/kern/kernel.asm	/^f0103e59:	75 15                	jne    f0103e70 <env_run+0x6c>$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	e8 98 29 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	e8 83 29 00 00       	call   f01067f8 <cpunum>$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	29 c2                	sub    %eax,%edx$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	89 1c 85 28 40 34 f0 	mov    %ebx,-0xfcbbfd8(,%eax,4)$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	ff 43 58             	incl   0x58(%ebx)$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	8b 43 64             	mov    0x64(%ebx),%eax$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	77 20                	ja     f0103ebc <env_run+0xb8>$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	f0 $/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	c7 44 24 04 12 02 00 	movl   $0x212,0x4(%esp)$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	00 $/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	c7 04 24 d0 80 10 f0 	movl   $0xf01080d0,(%esp)$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	e8 90 c1 ff ff       	call   f010004c <_panic>$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	e8 a6 2c 00 00       	call   f0106b76 <spin_unlock>$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	f3 90                	pause  $/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	e8 dd fe ff ff       	call   f0103db7 <env_pop_tf>$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc <mc146818_read>:$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	55                   	push   %ebp$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	ee                   	out    %al,(%dx)$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	b2 71                	mov    $0x71,%dl$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	ec                   	in     (%dx),%al$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	5d                   	pop    %ebp$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	c3                   	ret    $/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0 <mc146818_write>:$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	55                   	push   %ebp$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	ee                   	out    %al,(%dx)$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	b2 71                	mov    $0x71,%dl$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	ee                   	out    %al,(%dx)$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	5d                   	pop    %ebp$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	c3                   	ret    $/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04 <irq_setmask_8259A>:$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	55                   	push   %ebp$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	56                   	push   %esi$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	53                   	push   %ebx$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	89 c6                	mov    %eax,%esi$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	66 a3 88 a3 12 f0    	mov    %ax,0xf012a388$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	83 3d 74 32 34 f0 00 	cmpl   $0x0,0xf0343274$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	74 51                	je     f0103f71 <irq_setmask_8259A+0x6d>$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	ee                   	out    %al,(%dx)$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	89 f0                	mov    %esi,%eax$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	ee                   	out    %al,(%dx)$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	c7 04 24 36 81 10 f0 	movl   $0xf0108136,(%esp)$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	e8 f1 00 00 00       	call   f010402c <cprintf>$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	f7 d6                	not    %esi$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	89 f0                	mov    %esi,%eax$/;"	l
f0103f47	obj/kern/kernel.asm	/^f0103f47:	88 d9                	mov    %bl,%cl$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	d3 f8                	sar    %cl,%eax$/;"	d
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	a8 01                	test   $0x1,%al$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	74 10                	je     f0103f5f <irq_setmask_8259A+0x5b>$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	c7 04 24 a7 86 10 f0 	movl   $0xf01086a7,(%esp)$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	e8 cd 00 00 00       	call   f010402c <cprintf>$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	43                   	inc    %ebx$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	75 e0                	jne    f0103f45 <irq_setmask_8259A+0x41>$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	c7 04 24 4a 80 10 f0 	movl   $0xf010804a,(%esp)$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	e8 bb 00 00 00       	call   f010402c <cprintf>$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	5b                   	pop    %ebx$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	5e                   	pop    %esi$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	5d                   	pop    %ebp$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	c3                   	ret    $/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78 <pic_init>:$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	55                   	push   %ebp$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	c7 05 74 32 34 f0 01 	movl   $0x1,0xf0343274$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	00 00 00 $/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	b0 ff                	mov    $0xff,%al$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	ee                   	out    %al,(%dx)$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	ee                   	out    %al,(%dx)$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	b0 11                	mov    $0x11,%al$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	ee                   	out    %al,(%dx)$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	b2 21                	mov    $0x21,%dl$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	b0 20                	mov    $0x20,%al$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	ee                   	out    %al,(%dx)$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	b0 04                	mov    $0x4,%al$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	ee                   	out    %al,(%dx)$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	b0 03                	mov    $0x3,%al$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	ee                   	out    %al,(%dx)$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	b0 11                	mov    $0x11,%al$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	ee                   	out    %al,(%dx)$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	b0 28                	mov    $0x28,%al$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	ee                   	out    %al,(%dx)$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	b0 02                	mov    $0x2,%al$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	ee                   	out    %al,(%dx)$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	b0 01                	mov    $0x1,%al$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	ee                   	out    %al,(%dx)$/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	b2 20                	mov    $0x20,%dl$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	b0 68                	mov    $0x68,%al$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	ee                   	out    %al,(%dx)$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	b0 0a                	mov    $0xa,%al$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	ee                   	out    %al,(%dx)$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	b0 68                	mov    $0x68,%al$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	ee                   	out    %al,(%dx)$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	b0 0a                	mov    $0xa,%al$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	ee                   	out    %al,(%dx)$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	66 a1 88 a3 12 f0    	mov    0xf012a388,%ax$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	74 0b                	je     f0103fda <pic_init+0x62>$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	e8 2a ff ff ff       	call   f0103f04 <irq_setmask_8259A>$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	c9                   	leave  $/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	c3                   	ret    $/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc <putch>:$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	55                   	push   %ebp$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	53                   	push   %ebx$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fe9	obj/kern/kernel.asm	/^f0103fe9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	e8 c8 c8 ff ff       	call   f01008b9 <cputchar>$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	ff 03                	incl   (%ebx)$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	5b                   	pop    %ebx$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	5d                   	pop    %ebp$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	c3                   	ret    $/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9 <vcprintf>:$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	55                   	push   %ebp$/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	c7 04 24 dc 3f 10 f0 	movl   $0xf0103fdc,(%esp)$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	e8 9d 19 00 00       	call   f01059c4 <vprintfmt>$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	c9                   	leave  $/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	c3                   	ret    $/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c <cprintf>:$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	55                   	push   %ebp$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	89 e5                	mov    %esp,%ebp$/;"	l
f010402f	obj/kern/kernel.asm	/^f010402f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	e8 b5 ff ff ff       	call   f0103ff9 <vcprintf>$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	c9                   	leave  $/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	c3                   	ret    $/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048 <trap_init_percpu>:$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	55                   	push   %ebp$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	89 e5                	mov    %esp,%ebp$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	57                   	push   %edi$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	56                   	push   %esi$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	53                   	push   %ebx$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	e8 a2 27 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	29 c2                	sub    %eax,%edx$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	0f b6 1c 85 20 40 34 	movzbl -0xfcbbfe0(,%eax,4),%ebx$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	f0 $/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	e8 89 27 00 00       	call   f01067f8 <cpunum>$/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	29 c2                	sub    %eax,%edx$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	89 da                	mov    %ebx,%edx$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	f7 da                	neg    %edx$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	81 ea 00 00 40 10    	sub    $0x10400000,%edx$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	89 14 85 30 40 34 f0 	mov    %edx,-0xfcbbfd0(,%eax,4)$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	e8 64 27 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	29 c2                	sub    %eax,%edx$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	66 c7 04 85 34 40 34 	movw   $0x10,-0xfcbbfcc(,%eax,4)$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	f0 10 00 $/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	0f 30                	wrmsr  $/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	e8 38 27 00 00       	call   f01067f8 <cpunum>$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	29 c2                	sub    %eax,%edx$/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	8b 04 85 30 40 34 f0 	mov    -0xfcbbfd0(,%eax,4),%eax$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	0f 30                	wrmsr  $/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	b8 7e 4a 10 f0       	mov    $0xf0104a7e,%eax$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	b1 76                	mov    $0x76,%cl$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	0f 30                	wrmsr  $/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	8d 1c dd 28 00 00 00 	lea    0x28(,%ebx,8),%ebx$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	e8 fe 26 00 00       	call   f01067f8 <cpunum>$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	89 c6                	mov    %eax,%esi$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	e8 f7 26 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	89 c7                	mov    %eax,%edi$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	e8 f0 26 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	66 c7 04 dd 20 a3 12 	movw   $0x68,-0xfed5ce0(,%ebx,8)$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	f0 68 00 $/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	8d 14 f5 00 00 00 00 	lea    0x0(,%esi,8),%edx$/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	29 f2                	sub    %esi,%edx$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	8d 14 95 2c 40 34 f0 	lea    -0xfcbbfd4(,%edx,4),%edx$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	66 89 14 dd 22 a3 12 	mov    %dx,-0xfed5cde(,%ebx,8)$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	f0 $/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	29 fa                	sub    %edi,%edx$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	8d 14 95 2c 40 34 f0 	lea    -0xfcbbfd4(,%edx,4),%edx$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	88 14 dd 24 a3 12 f0 	mov    %dl,-0xfed5cdc(,%ebx,8)$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	c6 04 dd 26 a3 12 f0 	movb   $0x40,-0xfed5cda(,%ebx,8)$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	40 $/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	29 c2                	sub    %eax,%edx$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	8d 04 85 2c 40 34 f0 	lea    -0xfcbbfd4(,%eax,4),%eax$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	88 04 dd 27 a3 12 f0 	mov    %al,-0xfed5cd9(,%ebx,8)$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	c6 04 dd 25 a3 12 f0 	movb   $0x89,-0xfed5cdb(,%ebx,8)$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	89 $/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	0f 00 d8             	ltr    %ax$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	b8 8c a3 12 f0       	mov    $0xf012a38c,%eax$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	5b                   	pop    %ebx$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	5e                   	pop    %esi$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	5f                   	pop    %edi$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	5d                   	pop    %ebp$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	c3                   	ret    $/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d <trap_init>:$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	55                   	push   %ebp$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	b8 08 4a 10 f0       	mov    $0xf0104a08,%eax$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	66 a3 80 32 34 f0    	mov    %ax,0xf0343280$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	66 c7 05 82 32 34 f0 	movw   $0x8,0xf0343282$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	08 00 $/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	c6 05 84 32 34 f0 00 	movb   $0x0,0xf0343284$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	c6 05 85 32 34 f0 8e 	movb   $0x8e,0xf0343285$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	66 a3 86 32 34 f0    	mov    %ax,0xf0343286$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	b8 12 4a 10 f0       	mov    $0xf0104a12,%eax$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	66 a3 88 32 34 f0    	mov    %ax,0xf0343288$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	66 c7 05 8a 32 34 f0 	movw   $0x8,0xf034328a$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	08 00 $/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	c6 05 8c 32 34 f0 00 	movb   $0x0,0xf034328c$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	c6 05 8d 32 34 f0 8e 	movb   $0x8e,0xf034328d$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	66 a3 8e 32 34 f0    	mov    %ax,0xf034328e$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	b8 1c 4a 10 f0       	mov    $0xf0104a1c,%eax$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	66 a3 90 32 34 f0    	mov    %ax,0xf0343290$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	66 c7 05 92 32 34 f0 	movw   $0x8,0xf0343292$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	08 00 $/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	c6 05 94 32 34 f0 00 	movb   $0x0,0xf0343294$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	c6 05 95 32 34 f0 8e 	movb   $0x8e,0xf0343295$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	66 a3 96 32 34 f0    	mov    %ax,0xf0343296$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	b8 26 4a 10 f0       	mov    $0xf0104a26,%eax$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	66 a3 98 32 34 f0    	mov    %ax,0xf0343298$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	66 c7 05 9a 32 34 f0 	movw   $0x8,0xf034329a$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	08 00 $/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	c6 05 9c 32 34 f0 00 	movb   $0x0,0xf034329c$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	c6 05 9d 32 34 f0 ee 	movb   $0xee,0xf034329d$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	66 a3 9e 32 34 f0    	mov    %ax,0xf034329e$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	b8 30 4a 10 f0       	mov    $0xf0104a30,%eax$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	66 a3 a0 32 34 f0    	mov    %ax,0xf03432a0$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	66 c7 05 a2 32 34 f0 	movw   $0x8,0xf03432a2$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	08 00 $/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	c6 05 a4 32 34 f0 00 	movb   $0x0,0xf03432a4$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	c6 05 a5 32 34 f0 ee 	movb   $0xee,0xf03432a5$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	66 a3 a6 32 34 f0    	mov    %ax,0xf03432a6$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	b8 36 4a 10 f0       	mov    $0xf0104a36,%eax$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	66 a3 a8 32 34 f0    	mov    %ax,0xf03432a8$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	66 c7 05 aa 32 34 f0 	movw   $0x8,0xf03432aa$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	08 00 $/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	c6 05 ac 32 34 f0 00 	movb   $0x0,0xf03432ac$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	c6 05 ad 32 34 f0 ee 	movb   $0xee,0xf03432ad$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	66 a3 ae 32 34 f0    	mov    %ax,0xf03432ae$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	b8 3c 4a 10 f0       	mov    $0xf0104a3c,%eax$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	66 a3 b0 32 34 f0    	mov    %ax,0xf03432b0$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	66 c7 05 b2 32 34 f0 	movw   $0x8,0xf03432b2$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	08 00 $/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	c6 05 b4 32 34 f0 00 	movb   $0x0,0xf03432b4$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	c6 05 b5 32 34 f0 8e 	movb   $0x8e,0xf03432b5$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	66 a3 b6 32 34 f0    	mov    %ax,0xf03432b6$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	b8 42 4a 10 f0       	mov    $0xf0104a42,%eax$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	66 a3 b8 32 34 f0    	mov    %ax,0xf03432b8$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	66 c7 05 ba 32 34 f0 	movw   $0x8,0xf03432ba$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	08 00 $/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	c6 05 bc 32 34 f0 00 	movb   $0x0,0xf03432bc$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	c6 05 bd 32 34 f0 8e 	movb   $0x8e,0xf03432bd$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	66 a3 be 32 34 f0    	mov    %ax,0xf03432be$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	b8 48 4a 10 f0       	mov    $0xf0104a48,%eax$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	66 a3 c0 32 34 f0    	mov    %ax,0xf03432c0$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	66 c7 05 c2 32 34 f0 	movw   $0x8,0xf03432c2$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	08 00 $/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	c6 05 c4 32 34 f0 00 	movb   $0x0,0xf03432c4$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	c6 05 c5 32 34 f0 8e 	movb   $0x8e,0xf03432c5$/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	66 a3 c6 32 34 f0    	mov    %ax,0xf03432c6$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	b8 4c 4a 10 f0       	mov    $0xf0104a4c,%eax$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	66 a3 d0 32 34 f0    	mov    %ax,0xf03432d0$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	66 c7 05 d2 32 34 f0 	movw   $0x8,0xf03432d2$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	08 00 $/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	c6 05 d4 32 34 f0 00 	movb   $0x0,0xf03432d4$/;"	l
f0104331	obj/kern/kernel.asm	/^f0104331:	c6 05 d5 32 34 f0 8e 	movb   $0x8e,0xf03432d5$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	66 a3 d6 32 34 f0    	mov    %ax,0xf03432d6$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	b8 50 4a 10 f0       	mov    $0xf0104a50,%eax$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	66 a3 d8 32 34 f0    	mov    %ax,0xf03432d8$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	66 c7 05 da 32 34 f0 	movw   $0x8,0xf03432da$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	08 00 $/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	c6 05 dc 32 34 f0 00 	movb   $0x0,0xf03432dc$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	c6 05 dd 32 34 f0 8e 	movb   $0x8e,0xf03432dd$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	66 a3 de 32 34 f0    	mov    %ax,0xf03432de$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	b8 54 4a 10 f0       	mov    $0xf0104a54,%eax$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	66 a3 e0 32 34 f0    	mov    %ax,0xf03432e0$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	66 c7 05 e2 32 34 f0 	movw   $0x8,0xf03432e2$/;"	l
f010437e	obj/kern/kernel.asm	/^f010437e:	08 00 $/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	c6 05 e4 32 34 f0 00 	movb   $0x0,0xf03432e4$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	c6 05 e5 32 34 f0 8e 	movb   $0x8e,0xf03432e5$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	66 a3 e6 32 34 f0    	mov    %ax,0xf03432e6$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	b8 58 4a 10 f0       	mov    $0xf0104a58,%eax$/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	66 a3 e8 32 34 f0    	mov    %ax,0xf03432e8$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	66 c7 05 ea 32 34 f0 	movw   $0x8,0xf03432ea$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	08 00 $/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	c6 05 ec 32 34 f0 00 	movb   $0x0,0xf03432ec$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	c6 05 ed 32 34 f0 8e 	movb   $0x8e,0xf03432ed$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	66 a3 ee 32 34 f0    	mov    %ax,0xf03432ee$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	b8 5c 4a 10 f0       	mov    $0xf0104a5c,%eax$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	66 a3 f0 32 34 f0    	mov    %ax,0xf03432f0$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	66 c7 05 f2 32 34 f0 	movw   $0x8,0xf03432f2$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	08 00 $/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	c6 05 f4 32 34 f0 00 	movb   $0x0,0xf03432f4$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	c6 05 f5 32 34 f0 8e 	movb   $0x8e,0xf03432f5$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	66 a3 f6 32 34 f0    	mov    %ax,0xf03432f6$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	b8 60 4a 10 f0       	mov    $0xf0104a60,%eax$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	66 a3 00 33 34 f0    	mov    %ax,0xf0343300$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	66 c7 05 02 33 34 f0 	movw   $0x8,0xf0343302$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	08 00 $/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	c6 05 04 33 34 f0 00 	movb   $0x0,0xf0343304$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	c6 05 05 33 34 f0 8e 	movb   $0x8e,0xf0343305$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	66 a3 06 33 34 f0    	mov    %ax,0xf0343306$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	b8 66 4a 10 f0       	mov    $0xf0104a66,%eax$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	66 a3 08 33 34 f0    	mov    %ax,0xf0343308$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	66 c7 05 0a 33 34 f0 	movw   $0x8,0xf034330a$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	08 00 $/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	c6 05 0c 33 34 f0 00 	movb   $0x0,0xf034330c$/;"	l
f0104433	obj/kern/kernel.asm	/^f0104433:	c6 05 0d 33 34 f0 8e 	movb   $0x8e,0xf034330d$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	66 a3 0e 33 34 f0    	mov    %ax,0xf034330e$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	b8 6c 4a 10 f0       	mov    $0xf0104a6c,%eax$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	66 a3 10 33 34 f0    	mov    %ax,0xf0343310$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	66 c7 05 12 33 34 f0 	movw   $0x8,0xf0343312$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	08 00 $/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	c6 05 14 33 34 f0 00 	movb   $0x0,0xf0343314$/;"	l
f010445e	obj/kern/kernel.asm	/^f010445e:	c6 05 15 33 34 f0 8e 	movb   $0x8e,0xf0343315$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	66 a3 16 33 34 f0    	mov    %ax,0xf0343316$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	b8 72 4a 10 f0       	mov    $0xf0104a72,%eax$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	66 a3 18 33 34 f0    	mov    %ax,0xf0343318$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	66 c7 05 1a 33 34 f0 	movw   $0x8,0xf034331a$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	08 00 $/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	c6 05 1c 33 34 f0 00 	movb   $0x0,0xf034331c$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	c6 05 1d 33 34 f0 8e 	movb   $0x8e,0xf034331d$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	66 a3 1e 33 34 f0    	mov    %ax,0xf034331e$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	b8 78 4a 10 f0       	mov    $0xf0104a78,%eax$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	66 a3 00 34 34 f0    	mov    %ax,0xf0343400$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	66 c7 05 02 34 34 f0 	movw   $0x8,0xf0343402$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	08 00 $/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	c6 05 04 34 34 f0 00 	movb   $0x0,0xf0343404$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	c6 05 05 34 34 f0 ee 	movb   $0xee,0xf0343405$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	66 a3 06 34 34 f0    	mov    %ax,0xf0343406$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	e8 7f fb ff ff       	call   f0104048 <trap_init_percpu>$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	c9                   	leave  $/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	c3                   	ret    $/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb <print_regs>:$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	55                   	push   %ebp$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	53                   	push   %ebx$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	8b 03                	mov    (%ebx),%eax$/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	c7 04 24 4a 81 10 f0 	movl   $0xf010814a,(%esp)$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	e8 45 fb ff ff       	call   f010402c <cprintf>$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	c7 04 24 59 81 10 f0 	movl   $0xf0108159,(%esp)$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	e8 32 fb ff ff       	call   f010402c <cprintf>$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	c7 04 24 68 81 10 f0 	movl   $0xf0108168,(%esp)$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	e8 1f fb ff ff       	call   f010402c <cprintf>$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	c7 04 24 77 81 10 f0 	movl   $0xf0108177,(%esp)$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	e8 0c fb ff ff       	call   f010402c <cprintf>$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	c7 04 24 86 81 10 f0 	movl   $0xf0108186,(%esp)$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	e8 f9 fa ff ff       	call   f010402c <cprintf>$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	c7 04 24 95 81 10 f0 	movl   $0xf0108195,(%esp)$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	e8 e6 fa ff ff       	call   f010402c <cprintf>$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	c7 04 24 a4 81 10 f0 	movl   $0xf01081a4,(%esp)$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	e8 d3 fa ff ff       	call   f010402c <cprintf>$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	c7 04 24 b3 81 10 f0 	movl   $0xf01081b3,(%esp)$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	e8 c0 fa ff ff       	call   f010402c <cprintf>$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	5b                   	pop    %ebx$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	5d                   	pop    %ebp$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	c3                   	ret    $/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572 <print_trapframe>:$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	55                   	push   %ebp$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	89 e5                	mov    %esp,%ebp$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	53                   	push   %ebx$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	e8 77 22 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	c7 04 24 17 82 10 f0 	movl   $0xf0108217,(%esp)$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	e8 97 fa ff ff       	call   f010402c <cprintf>$/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	e8 2e ff ff ff       	call   f01044cb <print_regs>$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	c7 04 24 35 82 10 f0 	movl   $0xf0108235,(%esp)$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	e8 7b fa ff ff       	call   f010402c <cprintf>$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	c7 04 24 48 82 10 f0 	movl   $0xf0108248,(%esp)$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	e8 67 fa ff ff       	call   f010402c <cprintf>$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	77 09                	ja     f01045d6 <print_trapframe+0x64>$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	8b 14 85 60 85 10 f0 	mov    -0xfef7aa0(,%eax,4),%edx$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	eb 20                	jmp    f01045f6 <print_trapframe+0x84>$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	74 0f                	je     f01045ea <print_trapframe+0x78>$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	77 0e                	ja     f01045f1 <print_trapframe+0x7f>$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	ba ce 81 10 f0       	mov    $0xf01081ce,%edx$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	eb 0c                	jmp    f01045f6 <print_trapframe+0x84>$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	ba c2 81 10 f0       	mov    $0xf01081c2,%edx$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	eb 05                	jmp    f01045f6 <print_trapframe+0x84>$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	ba e1 81 10 f0       	mov    $0xf01081e1,%edx$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	c7 04 24 5b 82 10 f0 	movl   $0xf010825b,(%esp)$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	e8 22 fa ff ff       	call   f010402c <cprintf>$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	3b 1d 80 3a 34 f0    	cmp    0xf0343a80,%ebx$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	75 19                	jne    f010462b <print_trapframe+0xb9>$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	75 13                	jne    f010462b <print_trapframe+0xb9>$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	c7 04 24 6d 82 10 f0 	movl   $0xf010826d,(%esp)$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	e8 01 fa ff ff       	call   f010402c <cprintf>$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	c7 04 24 7c 82 10 f0 	movl   $0xf010827c,(%esp)$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	e8 ee f9 ff ff       	call   f010402c <cprintf>$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	75 4d                	jne    f0104691 <print_trapframe+0x11f>$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	a8 01                	test   $0x1,%al$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	74 07                	je     f0104652 <print_trapframe+0xe0>$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	b9 f0 81 10 f0       	mov    $0xf01081f0,%ecx$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	eb 05                	jmp    f0104657 <print_trapframe+0xe5>$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	b9 fb 81 10 f0       	mov    $0xf01081fb,%ecx$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	a8 02                	test   $0x2,%al$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	74 07                	je     f0104662 <print_trapframe+0xf0>$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	ba 07 82 10 f0       	mov    $0xf0108207,%edx$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	eb 05                	jmp    f0104667 <print_trapframe+0xf5>$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	ba 0d 82 10 f0       	mov    $0xf010820d,%edx$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	a8 04                	test   $0x4,%al$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	74 07                	je     f0104672 <print_trapframe+0x100>$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	b8 12 82 10 f0       	mov    $0xf0108212,%eax$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	eb 05                	jmp    f0104677 <print_trapframe+0x105>$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	b8 b8 83 10 f0       	mov    $0xf01083b8,%eax$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	c7 04 24 8a 82 10 f0 	movl   $0xf010828a,(%esp)$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	e8 9d f9 ff ff       	call   f010402c <cprintf>$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	eb 0c                	jmp    f010469d <print_trapframe+0x12b>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	c7 04 24 4a 80 10 f0 	movl   $0xf010804a,(%esp)$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	e8 8f f9 ff ff       	call   f010402c <cprintf>$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	c7 04 24 99 82 10 f0 	movl   $0xf0108299,(%esp)$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	e8 7c f9 ff ff       	call   f010402c <cprintf>$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	c7 04 24 a8 82 10 f0 	movl   $0xf01082a8,(%esp)$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	e8 68 f9 ff ff       	call   f010402c <cprintf>$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	c7 04 24 bb 82 10 f0 	movl   $0xf01082bb,(%esp)$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	e8 55 f9 ff ff       	call   f010402c <cprintf>$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	74 27                	je     f0104704 <print_trapframe+0x192>$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	c7 04 24 ca 82 10 f0 	movl   $0xf01082ca,(%esp)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	e8 3c f9 ff ff       	call   f010402c <cprintf>$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	c7 04 24 d9 82 10 f0 	movl   $0xf01082d9,(%esp)$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	e8 28 f9 ff ff       	call   f010402c <cprintf>$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	5b                   	pop    %ebx$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	5d                   	pop    %ebp$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	c3                   	ret    $/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a <page_fault_handler>:$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	55                   	push   %ebp$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	89 e5                	mov    %esp,%ebp$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	57                   	push   %edi$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	56                   	push   %esi$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	53                   	push   %ebx$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	75 1c                	jne    f010473b <page_fault_handler+0x31>$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	c7 44 24 08 ec 82 10 	movl   $0xf01082ec,0x8(%esp)$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	f0 $/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	c7 44 24 04 5c 01 00 	movl   $0x15c,0x4(%esp)$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	00 $/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	c7 04 24 fe 82 10 f0 	movl   $0xf01082fe,(%esp)$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	e8 11 b9 ff ff       	call   f010004c <_panic>$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	8b 7e 30             	mov    0x30(%esi),%edi$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	e8 b5 20 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	29 c2                	sub    %eax,%edx$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	c7 04 24 04 85 10 f0 	movl   $0xf0108504,(%esp)$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	e8 bb f8 ff ff       	call   f010402c <cprintf>$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	e8 f9 fd ff ff       	call   f0104572 <print_trapframe>$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	e8 7a 20 00 00       	call   f01067f8 <cpunum>$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	29 c2                	sub    %eax,%edx$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	e8 ac f5 ff ff       	call   f0103d45 <env_destroy>$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	5b                   	pop    %ebx$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	5e                   	pop    %esi$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	5f                   	pop    %edi$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	5d                   	pop    %ebp$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	c3                   	ret    $/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1 <trap>:$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	55                   	push   %ebp$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	57                   	push   %edi$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	56                   	push   %esi$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	fc                   	cld    $/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	83 3d a0 3e 34 f0 00 	cmpl   $0x0,0xf0343ea0$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	74 01                	je     f01047b7 <trap+0x16>$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	f4                   	hlt    $/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	9c                   	pushf  $/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	58                   	pop    %eax$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	74 24                	je     f01047e2 <trap+0x41>$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	c7 44 24 0c 0a 83 10 	movl   $0xf010830a,0xc(%esp)$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	f0 $/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	f0 $/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	c7 44 24 04 29 01 00 	movl   $0x129,0x4(%esp)$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	00 $/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	c7 04 24 fe 82 10 f0 	movl   $0xf01082fe,(%esp)$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	e8 6a b8 ff ff       	call   f010004c <_panic>$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	83 e0 03             	and    $0x3,%eax$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	0f 85 a7 00 00 00    	jne    f0104899 <trap+0xf8>$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	e8 a1 22 00 00       	call   f0106a9f <spin_lock>$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	e8 f5 1f 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	83 b8 28 40 34 f0 00 	cmpl   $0x0,-0xfcbbfd8(%eax)$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	75 24                	jne    f0104833 <trap+0x92>$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	c7 44 24 0c 23 83 10 	movl   $0xf0108323,0xc(%esp)$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	f0 $/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	c7 44 24 08 c3 7d 10 	movl   $0xf0107dc3,0x8(%esp)$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	f0 $/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	00 $/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	c7 04 24 fe 82 10 f0 	movl   $0xf01082fe,(%esp)$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	e8 19 b8 ff ff       	call   f010004c <_panic>$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	e8 c0 1f 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	75 2d                	jne    f0104874 <trap+0xd3>$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	e8 ac 1f 00 00       	call   f01067f8 <cpunum>$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	e8 c4 f2 ff ff       	call   f0103b21 <env_free>$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	e8 96 1f 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	c7 80 28 40 34 f0 00 	movl   $0x0,-0xfcbbfd8(%eax)$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	00 00 00 $/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	e8 58 02 00 00       	call   f0104acc <sched_yield>$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	e8 7f 1f 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	89 c7                	mov    %eax,%edi$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	e8 68 1f 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	8b b0 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%esi$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	89 35 80 3a 34 f0    	mov    %esi,0xf0343a80$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	74 50                	je     f01048f7 <trap+0x156>$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	77 0f                	ja     f01048bb <trap+0x11a>$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	85 c0                	test   %eax,%eax$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	74 39                	je     f01048e9 <trap+0x148>$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	0f 85 a1 00 00 00    	jne    f010495a <trap+0x1b9>$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	eb 15                	jmp    f01048d0 <trap+0x12f>$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	74 5e                	je     f010491e <trap+0x17d>$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	74 63                	je     f0104928 <trap+0x187>$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	0f 85 8c 00 00 00    	jne    f010495a <trap+0x1b9>$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	eb 40                	jmp    f0104910 <trap+0x16f>$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	c7 04 24 2a 83 10 f0 	movl   $0xf010832a,(%esp)$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	e8 50 f7 ff ff       	call   f010402c <cprintf>$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	e8 17 c5 ff ff       	call   f0100dfb <monitor>$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	e9 de 00 00 00       	jmp    f01049c7 <trap+0x226>$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	c7 04 24 48 83 10 f0 	movl   $0xf0108348,(%esp)$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	e8 37 f7 ff ff       	call   f010402c <cprintf>$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	eb 73                	jmp    f010496a <trap+0x1c9>$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	c7 04 24 64 83 10 f0 	movl   $0xf0108364,(%esp)$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	e8 29 f7 ff ff       	call   f010402c <cprintf>$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	e8 f0 c4 ff ff       	call   f0100dfb <monitor>$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	e9 b7 00 00 00       	jmp    f01049c7 <trap+0x226>$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	c7 04 24 28 85 10 f0 	movl   $0xf0108528,(%esp)$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	e8 10 f7 ff ff       	call   f010402c <cprintf>$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	eb 4c                	jmp    f010496a <trap+0x1c9>$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	e8 e4 fd ff ff       	call   f010470a <page_fault_handler>$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	eb 42                	jmp    f010496a <trap+0x1c9>$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	8b 06                	mov    (%esi),%eax$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	e8 e7 02 00 00       	call   f0104c3c <syscall>$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	eb 6d                	jmp    f01049c7 <trap+0x226>$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	c7 04 24 7d 83 10 f0 	movl   $0xf010837d,(%esp)$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	e8 c2 f6 ff ff       	call   f010402c <cprintf>$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	83 7e 28 27          	cmpl   $0x27,0x28(%esi)$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	75 16                	jne    f0104986 <trap+0x1e5>$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	c7 04 24 89 83 10 f0 	movl   $0xf0108389,(%esp)$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	e8 b0 f6 ff ff       	call   f010402c <cprintf>$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	e8 ee fb ff ff       	call   f0104572 <print_trapframe>$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	eb 41                	jmp    f01049c7 <trap+0x226>$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	e8 e4 fb ff ff       	call   f0104572 <print_trapframe>$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	75 1c                	jne    f01049b1 <trap+0x210>$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	c7 44 24 08 a6 83 10 	movl   $0xf01083a6,0x8(%esp)$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	f0 $/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	c7 44 24 04 13 01 00 	movl   $0x113,0x4(%esp)$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	00 $/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	c7 04 24 fe 82 10 f0 	movl   $0xf01082fe,(%esp)$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	e8 9b b6 ff ff       	call   f010004c <_panic>$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	e8 42 1e 00 00       	call   f01067f8 <cpunum>$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	e8 7e f3 ff ff       	call   f0103d45 <env_destroy>$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	e8 2c 1e 00 00       	call   f01067f8 <cpunum>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	83 b8 28 40 34 f0 00 	cmpl   $0x0,-0xfcbbfd8(%eax)$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	74 2a                	je     f0104a02 <trap+0x261>$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	e8 1b 1e 00 00       	call   f01067f8 <cpunum>$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	75 16                	jne    f0104a02 <trap+0x261>$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	e8 07 1e 00 00       	call   f01067f8 <cpunum>$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	e8 02 f4 ff ff       	call   f0103e04 <env_run>$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	e8 c5 00 00 00       	call   f0104acc <sched_yield>$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08 <ENTRY_DIVIDE>:$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	6a 00                	push   $0x0$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	6a 00                	push   $0x0$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	e9 9f 00 00 00       	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	90                   	nop$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12 <ENTRY_DEBUG>:$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	6a 00                	push   $0x0$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	6a 01                	push   $0x1$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	e9 95 00 00 00       	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	90                   	nop$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c <ENTRY_NMI>:$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	6a 00                	push   $0x0$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	6a 02                	push   $0x2$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	e9 8b 00 00 00       	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	90                   	nop$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26 <ENTRY_BRKPT>:$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	6a 00                	push   $0x0$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	6a 03                	push   $0x3$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	e9 81 00 00 00       	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	90                   	nop$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30 <ENTRY_OFLOW>:$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	6a 00                	push   $0x0$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	6a 04                	push   $0x4$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	eb 7a                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36 <ENTRY_BOUND>:$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	6a 00                	push   $0x0$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	6a 05                	push   $0x5$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	eb 74                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c <ENTRY_ILLOP>:$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	6a 00                	push   $0x0$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	6a 06                	push   $0x6$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	eb 6e                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42 <ENTRY_DEVICE>:$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	6a 00                	push   $0x0$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	6a 07                	push   $0x7$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	eb 68                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48 <ENTRY_DBLFLT>:$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	6a 08                	push   $0x8$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	eb 64                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c <ENTRY_TSS>:$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	6a 0a                	push   $0xa$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	eb 60                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50 <ENTRY_SEGNP>:$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	6a 0b                	push   $0xb$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	eb 5c                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54 <ENTRY_STACK>:$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	6a 0c                	push   $0xc$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	eb 58                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58 <ENTRY_GPFLT>:$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	6a 0d                	push   $0xd$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	eb 54                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c <ENTRY_PGFLT>:$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	6a 0e                	push   $0xe$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	eb 50                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60 <ENTRY_FPERR>:$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	6a 00                	push   $0x0$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	6a 10                	push   $0x10$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	eb 4a                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66 <ENTRY_ALIGN>:$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	6a 00                	push   $0x0$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	6a 11                	push   $0x11$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	eb 44                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c <ENTRY_MCHK>:$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	6a 00                	push   $0x0$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	6a 12                	push   $0x12$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	eb 3e                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72 <ENTRY_SIMDERR>:$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	6a 00                	push   $0x0$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	6a 13                	push   $0x13$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	eb 38                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78 <ENTRY_SYSCALL>:$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	6a 00                	push   $0x0$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	6a 30                	push   $0x30$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	eb 32                	jmp    f0104ab0 <_alltraps>$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e <sysenter_handler>:$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	66 6a 00             	pushw  $0x0$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	66 6a 23             	pushw  $0x23$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	55                   	push   %ebp$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	9c                   	pushf  $/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	66 6a 00             	pushw  $0x0$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	66 6a 1b             	pushw  $0x1b$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	56                   	push   %esi$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	6a 00                	push   $0x0$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	6a 00                	push   $0x0$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	66 6a 00             	pushw  $0x0$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	66 1e                	pushw  %ds$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	66 6a 00             	pushw  $0x0$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	66 06                	pushw  %es$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	60                   	pusha  $/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	54                   	push   %esp$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	ff 75 04             	pushl  0x4(%ebp)$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	57                   	push   %edi$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	53                   	push   %ebx$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	51                   	push   %ecx$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	52                   	push   %edx$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	50                   	push   %eax$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	e8 ea 06 00 00       	call   f0105194 <syscall_wrapper>$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 f2                	mov    %esi,%edx$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	0f 35                	sysexit $/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0 <_alltraps>:$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	66 6a 00             	pushw  $0x0$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	66 1e                	pushw  %ds$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	66 6a 00             	pushw  $0x0$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	66 06                	pushw  %es$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	60                   	pusha  $/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	66 6a 10             	pushw  $0x10$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	66 1f                	popw   %ds$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	66 6a 10             	pushw  $0x10$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	66 07                	popw   %es$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	54                   	push   %esp$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	e8 d6 fc ff ff       	call   f01047a1 <trap>$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc <sched_yield>:$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	55                   	push   %ebp$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	89 e5                	mov    %esp,%ebp$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	53                   	push   %ebx$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	e8 20 1d 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	29 c2                	sub    %eax,%edx$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	83 3c 85 28 40 34 f0 	cmpl   $0x0,-0xfcbbfd8(,%eax,4)$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	00 $/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	75 12                	jne    f0104b00 <sched_yield+0x34>$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	8b 15 6c 32 34 f0    	mov    0xf034326c,%edx$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	eb 2a                	jmp    f0104b2a <sched_yield+0x5e>$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	e8 f3 1c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	8d 41 01             	lea    0x1(%ecx),%eax$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	bb 00 04 00 00       	mov    $0x400,%ebx$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	99                   	cltd   $/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	f7 fb                	idiv   %ebx$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	89 d3                	mov    %edx,%ebx$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	39 d1                	cmp    %edx,%ecx$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	75 d0                	jne    f0104af8 <sched_yield+0x2c>$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	eb 32                	jmp    f0104b5c <sched_yield+0x90>$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	89 d8                	mov    %ebx,%eax$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	01 d0                	add    %edx,%eax$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	83 78 50 01          	cmpl   $0x1,0x50(%eax)$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	74 0e                	je     f0104b45 <sched_yield+0x79>$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	75 08                	jne    f0104b45 <sched_yield+0x79>$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	e8 bf f2 ff ff       	call   f0103e04 <env_run>$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	25 ff 03 00 80       	and    $0x800003ff,%eax$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	79 07                	jns    f0104b56 <sched_yield+0x8a>$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	48                   	dec    %eax$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	0d 00 fc ff ff       	or     $0xfffffc00,%eax$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	40                   	inc    %eax$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	89 c3                	mov    %eax,%ebx$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	75 ce                	jne    f0104b2a <sched_yield+0x5e>$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	e8 97 1c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	83 b8 28 40 34 f0 00 	cmpl   $0x0,-0xfcbbfd8(%eax)$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	74 3e                	je     f0104bab <sched_yield+0xdf>$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	e8 86 1c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	83 78 50 01          	cmpl   $0x1,0x50(%eax)$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	74 2a                	je     f0104bab <sched_yield+0xdf>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	e8 72 1c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	75 16                	jne    f0104bab <sched_yield+0xdf>$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	e8 5e 1c 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	8b 80 28 40 34 f0    	mov    -0xfcbbfd8(%eax),%eax$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	e8 59 f2 ff ff       	call   f0103e04 <env_run>$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	8b 1d 6c 32 34 f0    	mov    0xf034326c,%ebx$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	8d 43 50             	lea    0x50(%ebx),%eax$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	83 38 01             	cmpl   $0x1,(%eax)$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	74 0b                	je     f0104bc9 <sched_yield+0xfd>$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	76 0e                	jbe    f0104bd7 <sched_yield+0x10b>$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	42                   	inc    %edx$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	75 e4                	jne    f0104bb9 <sched_yield+0xed>$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	eb 08                	jmp    f0104bdf <sched_yield+0x113>$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	75 1a                	jne    f0104bf9 <sched_yield+0x12d>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	c7 04 24 b0 85 10 f0 	movl   $0xf01085b0,(%esp)$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	e8 41 f4 ff ff       	call   f010402c <cprintf>$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	e8 04 c2 ff ff       	call   f0100dfb <monitor>$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	eb f2                	jmp    f0104beb <sched_yield+0x11f>$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	e8 fa 1b 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	01 c3                	add    %eax,%ebx$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	76 25                	jbe    f0104c33 <sched_yield+0x167>$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	e8 e5 1b 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	c7 44 24 08 d0 85 10 	movl   $0xf01085d0,0x8(%esp)$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	f0 $/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	00 $/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	c7 04 24 ed 85 10 f0 	movl   $0xf01085ed,(%esp)$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	e8 19 b4 ff ff       	call   f010004c <_panic>$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	e8 c9 f1 ff ff       	call   f0103e04 <env_run>$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c <syscall>:$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	55                   	push   %ebp$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	57                   	push   %edi$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	56                   	push   %esi$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	53                   	push   %ebx$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	0f 87 2e 05 00 00    	ja     f0105185 <syscall+0x549>$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	ff 24 85 44 86 10 f0 	jmp    *-0xfef79bc(,%eax,4)$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	e8 95 1b 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	00 $/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104c73	obj/kern/kernel.asm	/^f0104c73:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	29 c2                	sub    %eax,%edx$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	e8 59 e9 ff ff       	call   f01035e7 <user_mem_assert>$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	c7 04 24 fa 85 10 f0 	movl   $0xf01085fa,(%esp)$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	e8 8a f3 ff ff       	call   f010402c <cprintf>$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	e9 de 04 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	e8 ce ba ff ff       	call   f010077f <cons_getc>$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	89 c6                	mov    %eax,%esi$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	e9 d2 04 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	e8 3b 1b 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	29 c2                	sub    %eax,%edx$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	e9 b2 04 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	00 $/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	e8 51 e9 ff ff       	call   f0103640 <envid2env>$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	89 c6                	mov    %eax,%esi$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	85 c0                	test   %eax,%eax$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	0f 88 91 04 00 00    	js     f010518a <syscall+0x54e>$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	e8 fa 1a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	29 c1                	sub    %eax,%ecx$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	8d 04 88             	lea    (%eax,%ecx,4),%eax$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	39 14 85 28 40 34 f0 	cmp    %edx,-0xfcbbfd8(,%eax,4)$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	75 2d                	jne    f0104d43 <syscall+0x107>$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	e8 dd 1a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	29 c2                	sub    %eax,%edx$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	c7 04 24 ff 85 10 f0 	movl   $0xf01085ff,(%esp)$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	e8 eb f2 ff ff       	call   f010402c <cprintf>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	eb 32                	jmp    f0104d75 <syscall+0x139>$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	e8 ad 1a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	29 c2                	sub    %eax,%edx$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	c7 04 24 1a 86 10 f0 	movl   $0xf010861a,(%esp)$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	e8 b7 f2 ff ff       	call   f010402c <cprintf>$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	e8 c5 ef ff ff       	call   f0103d45 <env_destroy>$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	e9 00 04 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	77 20                	ja     f0104db2 <syscall+0x176>$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	c7 44 24 08 04 6f 10 	movl   $0xf0106f04,0x8(%esp)$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	f0 $/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	00 $/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	c7 04 24 32 86 10 f0 	movl   $0xf0108632,(%esp)$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	e8 9a b2 ff ff       	call   f010004c <_panic>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	81 c7 00 00 00 10    	add    $0x10000000,%edi$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	3b 3d a8 3e 34 f0    	cmp    0xf0343ea8,%edi$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	72 1c                	jb     f0104ddf <syscall+0x1a3>$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	c7 44 24 08 38 77 10 	movl   $0xf0107738,0x8(%esp)$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	f0 $/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	00 $/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	c7 04 24 a9 7d 10 f0 	movl   $0xf0107da9,(%esp)$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	e8 6d b2 ff ff       	call   f010004c <_panic>$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	c1 e7 03             	shl    $0x3,%edi$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	03 3d b0 3e 34 f0    	add    0xf0343eb0,%edi$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	74 3a                	je     f0104e24 <syscall+0x1e8>$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	e8 09 1a 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	00 $/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	29 c2                	sub    %eax,%edx$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	e8 74 c9 ff ff       	call   f0101791 <page_insert>$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	89 c6                	mov    %eax,%esi$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	e9 66 03 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	e9 5c 03 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	e8 c5 19 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	29 c2                	sub    %eax,%edx$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	8b 58 60             	mov    0x60(%eax),%ebx$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	29 fb                	sub    %edi,%ebx$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	e8 a8 19 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	29 c2                	sub    %eax,%edx$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	e8 b7 ea ff ff       	call   f010392a <region_alloc>$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	e8 80 19 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	29 c2                	sub    %eax,%edx$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	8b 1c 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%ebx$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	e8 68 19 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	29 c2                	sub    %eax,%edx$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	8b 70 60             	mov    0x60(%eax),%esi$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	29 fe                	sub    %edi,%esi$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	89 73 60             	mov    %esi,0x60(%ebx)$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	e9 d4 02 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	e8 11 fc ff ff       	call   f0104acc <sched_yield>$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	e8 38 19 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	29 c2                	sub    %eax,%edx$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	e8 7f e8 ff ff       	call   f0103764 <env_alloc>$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	89 c6                	mov    %eax,%esi$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	85 c0                	test   %eax,%eax$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	0f 88 9b 02 00 00    	js     f010518a <syscall+0x54e>$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	e8 01 19 00 00       	call   f01067f8 <cpunum>$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	29 c2                	sub    %eax,%edx$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	8b 34 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%esi$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	89 df                	mov    %ebx,%edi$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	e9 5e 02 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	00 $/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	e8 fd e6 ff ff       	call   f0103640 <envid2env>$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	89 c6                	mov    %eax,%esi$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	85 c0                	test   %eax,%eax$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	0f 88 3d 02 00 00    	js     f010518a <syscall+0x54e>$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	83 fb 02             	cmp    $0x2,%ebx$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	74 05                	je     f0104f57 <syscall+0x31b>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	75 10                	jne    f0104f67 <syscall+0x32b>$/;"	l
f0104f57	obj/kern/kernel.asm	/^f0104f57:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	89 58 54             	mov    %ebx,0x54(%eax)$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	e9 23 02 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	e9 19 02 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	77 78                	ja     f0104ff1 <syscall+0x3b5>$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	75 7a                	jne    f0104ffb <syscall+0x3bf>$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	75 77                	jne    f0105005 <syscall+0x3c9>$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	00 $/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	e8 9b e6 ff ff       	call   f0103640 <envid2env>$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	89 c6                	mov    %eax,%esi$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	85 c0                	test   %eax,%eax$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	0f 88 db 01 00 00    	js     f010518a <syscall+0x54e>$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	e8 f4 c4 ff ff       	call   f01014af <page_alloc>$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	89 c7                	mov    %eax,%edi$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	85 c0                	test   %eax,%eax$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	74 4e                	je     f010500f <syscall+0x3d3>$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	e8 b3 c7 ff ff       	call   f0101791 <page_insert>$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	89 c6                	mov    %eax,%esi$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	85 c0                	test   %eax,%eax$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	79 35                	jns    f0105019 <syscall+0x3dd>$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	e8 58 c5 ff ff       	call   f0101544 <page_free>$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	e9 99 01 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	e9 8f 01 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	e9 85 01 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	e9 7b 01 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	e9 71 01 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	e9 67 01 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	0f 87 ce 00 00 00    	ja     f01050fd <syscall+0x4c1>$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	0f 85 cc 00 00 00    	jne    f0105107 <syscall+0x4cb>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	0f 87 c6 00 00 00    	ja     f010510e <syscall+0x4d2>$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	0f 85 c0 00 00 00    	jne    f0105115 <syscall+0x4d9>$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	0f 85 b6 00 00 00    	jne    f010511c <syscall+0x4e0>$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	00 $/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	e8 c3 e5 ff ff       	call   f0103640 <envid2env>$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	89 c6                	mov    %eax,%esi$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	85 c0                	test   %eax,%eax$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	0f 88 03 01 00 00    	js     f010518a <syscall+0x54e>$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	00 $/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	e8 9f e5 ff ff       	call   f0103640 <envid2env>$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	89 c6                	mov    %eax,%esi$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	85 c0                	test   %eax,%eax$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	0f 88 df 00 00 00    	js     f010518a <syscall+0x54e>$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	e8 bc c5 ff ff       	call   f0101680 <page_lookup>$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	85 c0                	test   %eax,%eax$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	74 5b                	je     f0105123 <syscall+0x4e7>$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	74 08                	je     f01050d6 <syscall+0x49a>$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	74 54                	je     f010512a <syscall+0x4ee>$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	8b 55 1c             	mov    0x1c(%ebp),%edx$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f01050ee	obj/kern/kernel.asm	/^f01050ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	e8 9b c6 ff ff       	call   f0101791 <page_insert>$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	89 c6                	mov    %eax,%esi$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	e9 8d 00 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	e9 83 00 00 00       	jmp    f010518a <syscall+0x54e>$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	eb 7c                	jmp    f010518a <syscall+0x54e>$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113:	eb 75                	jmp    f010518a <syscall+0x54e>$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	eb 6e                	jmp    f010518a <syscall+0x54e>$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	eb 67                	jmp    f010518a <syscall+0x54e>$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	eb 60                	jmp    f010518a <syscall+0x54e>$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	eb 59                	jmp    f010518a <syscall+0x54e>$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	77 3e                	ja     f0105177 <syscall+0x53b>$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	75 3d                	jne    f010517e <syscall+0x542>$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	00 $/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	e8 e8 e4 ff ff       	call   f0103640 <envid2env>$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	89 c6                	mov    %eax,%esi$/;"	l
f010515a	obj/kern/kernel.asm	/^f010515a:	85 c0                	test   %eax,%eax$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	78 2c                	js     f010518a <syscall+0x54e>$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	e8 d1 c5 ff ff       	call   f0101741 <page_remove>$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	eb 13                	jmp    f010518a <syscall+0x54e>$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	eb 0c                	jmp    f010518a <syscall+0x54e>$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	eb 05                	jmp    f010518a <syscall+0x54e>$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	89 f0                	mov    %esi,%eax$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	5b                   	pop    %ebx$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	5e                   	pop    %esi$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	5f                   	pop    %edi$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	5d                   	pop    %ebp$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	c3                   	ret    $/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194 <syscall_wrapper>:$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	55                   	push   %ebp$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	89 e5                	mov    %esp,%ebp$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	57                   	push   %edi$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	56                   	push   %esi$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	53                   	push   %ebx$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	8b 5d 20             	mov    0x20(%ebp),%ebx$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	e8 f3 18 00 00       	call   f0106a9f <spin_lock>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	e8 47 16 00 00       	call   f01067f8 <cpunum>$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	29 c2                	sub    %eax,%edx$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	89 c7                	mov    %eax,%edi$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	89 de                	mov    %ebx,%esi$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	e8 24 16 00 00       	call   f01067f8 <cpunum>$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	29 c2                	sub    %eax,%edx$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	8b 53 30             	mov    0x30(%ebx),%edx$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	e8 06 16 00 00       	call   f01067f8 <cpunum>$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	29 c2                	sub    %eax,%edx$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	8b 53 3c             	mov    0x3c(%ebx),%edx$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	e8 03 fa ff ff       	call   f0104c3c <syscall>$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	89 c6                	mov    %eax,%esi$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	c7 04 24 a0 a3 12 f0 	movl   $0xf012a3a0,(%esp)$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	e8 2f 19 00 00       	call   f0106b76 <spin_unlock>$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	f3 90                	pause  $/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	89 f0                	mov    %esi,%eax$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	5b                   	pop    %ebx$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	5e                   	pop    %esi$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	5f                   	pop    %edi$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	5d                   	pop    %ebp$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	c3                   	ret    $/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254 <stab_binsearch>:$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	55                   	push   %ebp$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	89 e5                	mov    %esp,%ebp$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	57                   	push   %edi$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	56                   	push   %esi$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	53                   	push   %ebx$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	8b 1a                	mov    (%edx),%ebx$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	8b 01                	mov    (%ecx),%eax$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	0f 8f 97 00 00 00    	jg     f010530f <stab_binsearch+0xbb>$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	01 d8                	add    %ebx,%eax$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	89 c7                	mov    %eax,%edi$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	01 c7                	add    %eax,%edi$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	d1 ff                	sar    %edi$/;"	d
f010528d	obj/kern/kernel.asm	/^f010528d:	39 df                	cmp    %ebx,%edi$/;"	l
f010528f	obj/kern/kernel.asm	/^f010528f:	7c 31                	jl     f01052c2 <stab_binsearch+0x6e>$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	39 f0                	cmp    %esi,%eax$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	0f 84 b3 00 00 00    	je     f0105357 <stab_binsearch+0x103>$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	89 f8                	mov    %edi,%eax$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	48                   	dec    %eax$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	39 d8                	cmp    %ebx,%eax$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	7c 0f                	jl     f01052c2 <stab_binsearch+0x6e>$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	39 f1                	cmp    %esi,%ecx$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	75 f1                	jne    f01052ae <stab_binsearch+0x5a>$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	e9 97 00 00 00       	jmp    f0105359 <stab_binsearch+0x105>$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	eb 39                	jmp    f0105300 <stab_binsearch+0xac>$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	89 02                	mov    %eax,(%edx)$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	eb 28                	jmp    f0105300 <stab_binsearch+0xac>$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	76 12                	jbe    f01052ef <stab_binsearch+0x9b>$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	48                   	dec    %eax$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	89 01                	mov    %eax,(%ecx)$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	eb 11                	jmp    f0105300 <stab_binsearch+0xac>$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	89 02                	mov    %eax,(%edx)$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	89 c3                	mov    %eax,%ebx$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	0f 8d 76 ff ff ff    	jge    f010527f <stab_binsearch+0x2b>$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	75 0d                	jne    f010531c <stab_binsearch+0xc8>$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	8b 02                	mov    (%edx),%eax$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	48                   	dec    %eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	89 01                	mov    %eax,(%ecx)$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	eb 55                	jmp    f0105371 <stab_binsearch+0x11d>$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	7d 26                	jge    f0105350 <stab_binsearch+0xfc>$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	39 f2                	cmp    %esi,%edx$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	74 17                	je     f0105350 <stab_binsearch+0xfc>$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0105341	obj/kern/kernel.asm	/^f0105341:	48                   	dec    %eax$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	7d 0a                	jge    f0105350 <stab_binsearch+0xfc>$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	39 f3                	cmp    %esi,%ebx$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	75 f1                	jne    f0105341 <stab_binsearch+0xed>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	89 02                	mov    %eax,(%edx)$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	eb 1a                	jmp    f0105371 <stab_binsearch+0x11d>$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	89 f8                	mov    %edi,%eax$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	0f 82 5b ff ff ff    	jb     f01052c7 <stab_binsearch+0x73>$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	e9 67 ff ff ff       	jmp    f01052d8 <stab_binsearch+0x84>$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	5b                   	pop    %ebx$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	5e                   	pop    %esi$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	5f                   	pop    %edi$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	5d                   	pop    %ebp$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	c3                   	ret    $/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379 <debuginfo_eip>:$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	55                   	push   %ebp$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	89 e5                	mov    %esp,%ebp$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	57                   	push   %edi$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	56                   	push   %esi$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	53                   	push   %ebx$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	c7 03 80 86 10 f0    	movl   $0xf0108680,(%ebx)$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	c7 43 08 80 86 10 f0 	movl   $0xf0108680,0x8(%ebx)$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	0f 87 0f 01 00 00    	ja     f01054c8 <debuginfo_eip+0x14f>$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	e8 3a 14 00 00       	call   f01067f8 <cpunum>$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	00 $/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	00 $/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	00 $/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	29 c2                	sub    %eax,%edx$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	e8 61 e1 ff ff       	call   f0103552 <user_mem_check>$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	85 c0                	test   %eax,%eax$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	0f 88 c6 02 00 00    	js     f01056bf <debuginfo_eip+0x346>$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	e8 da 13 00 00       	call   f01067f8 <cpunum>$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	00 $/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	89 fa                	mov    %edi,%edx$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	8d 0c 92             	lea    (%edx,%edx,4),%ecx$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	8d 14 4a             	lea    (%edx,%ecx,2),%edx$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	29 c2                	sub    %eax,%edx$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	e8 d4 e0 ff ff       	call   f0103552 <user_mem_check>$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	85 c0                	test   %eax,%eax$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	0f 88 40 02 00 00    	js     f01056c6 <debuginfo_eip+0x34d>$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	e8 6d 13 00 00       	call   f01067f8 <cpunum>$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	00 $/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	29 c2                	sub    %eax,%edx$/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	8b 04 85 28 40 34 f0 	mov    -0xfcbbfd8(,%eax,4),%eax$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	e8 93 e0 ff ff       	call   f0103552 <user_mem_check>$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	85 c0                	test   %eax,%eax$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	79 1f                	jns    f01054e2 <debuginfo_eip+0x169>$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	e9 05 02 00 00       	jmp    f01056cd <debuginfo_eip+0x354>$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	c7 45 bc ef f2 11 f0 	movl   $0xf011f2ef,-0x44(%ebp)$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	c7 45 b8 cd 47 11 f0 	movl   $0xf01147cd,-0x48(%ebp)$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	bf cc 47 11 f0       	mov    $0xf01147cc,%edi$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	c7 45 c4 d4 8b 10 f0 	movl   $0xf0108bd4,-0x3c(%ebp)$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	0f 83 e6 01 00 00    	jae    f01056d4 <debuginfo_eip+0x35b>$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	0f 85 e3 01 00 00    	jne    f01056db <debuginfo_eip+0x362>$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	89 f8                	mov    %edi,%eax$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	2b 45 c4             	sub    -0x3c(%ebp),%eax$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	89 d1                	mov    %edx,%ecx$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	01 ca                	add    %ecx,%edx$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	89 d1                	mov    %edx,%ecx$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	01 ca                	add    %ecx,%edx$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	e8 16 fd ff ff       	call   f0105254 <stab_binsearch>$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	85 c0                	test   %eax,%eax$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	0f 84 99 01 00 00    	je     f01056e2 <debuginfo_eip+0x369>$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	e8 e9 fc ff ff       	call   f0105254 <stab_binsearch>$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	39 d0                	cmp    %edx,%eax$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	7f 32                	jg     f01055a7 <debuginfo_eip+0x22e>$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	8b 39                	mov    (%ecx),%edi$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	73 09                	jae    f0105597 <debuginfo_eip+0x21e>$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	03 7d b8             	add    -0x48(%ebp),%edi$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	29 ce                	sub    %ecx,%esi$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	eb 0f                	jmp    f01055b6 <debuginfo_eip+0x23d>$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	00 $/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	e8 ac 0b 00 00       	call   f0106175 <strfind>$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	e8 6c fc ff ff       	call   f0105254 <stab_binsearch>$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	0f 8f f5 00 00 00    	jg     f01056e9 <debuginfo_eip+0x370>$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	39 f8                	cmp    %edi,%eax$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	7c 70                	jl     f010567f <debuginfo_eip+0x306>$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	89 f7                	mov    %esi,%edi$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	8d 34 96             	lea    (%esi,%edx,4),%esi$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	8a 4e 04             	mov    0x4(%esi),%cl$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	74 43                	je     f0105662 <debuginfo_eip+0x2e9>$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	89 c7                	mov    %eax,%edi$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	eb 1c                	jmp    f010564c <debuginfo_eip+0x2d3>$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	48                   	dec    %eax$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	7f 47                	jg     f010567c <debuginfo_eip+0x303>$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	89 d6                	mov    %edx,%esi$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	8a 4a 10             	mov    0x10(%edx),%cl$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	75 08                	jne    f010564a <debuginfo_eip+0x2d1>$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	eb 18                	jmp    f0105662 <debuginfo_eip+0x2e9>$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	89 c7                	mov    %eax,%edi$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	75 df                	jne    f0105630 <debuginfo_eip+0x2b7>$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	74 d9                	je     f0105630 <debuginfo_eip+0x2b7>$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	7c 1d                	jl     f010567f <debuginfo_eip+0x306>$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	39 d0                	cmp    %edx,%eax$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	73 0a                	jae    f010567f <debuginfo_eip+0x306>$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	03 45 b8             	add    -0x48(%ebp),%eax$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	89 03                	mov    %eax,(%ebx)$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	eb 03                	jmp    f010567f <debuginfo_eip+0x306>$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	7d 67                	jge    f01056f0 <debuginfo_eip+0x377>$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	7e 64                	jle    f01056f7 <debuginfo_eip+0x37e>$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	8d 34 40             	lea    (%eax,%eax,2),%esi$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	80 7c b7 04 a0       	cmpb   $0xa0,0x4(%edi,%esi,4)$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	75 5e                	jne    f01056fe <debuginfo_eip+0x385>$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	8d 54 97 1c          	lea    0x1c(%edi,%edx,4),%edx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	ff 43 14             	incl   0x14(%ebx)$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	40                   	inc    %eax$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	39 c1                	cmp    %eax,%ecx$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	7e 56                	jle    f0105705 <debuginfo_eip+0x38c>$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	83 c2 0c             	add    $0xc,%edx$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	80 7a f4 a0          	cmpb   $0xa0,-0xc(%edx)$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	74 ef                	je     f01056a7 <debuginfo_eip+0x32e>$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	eb 4b                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	eb 44                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	eb 3d                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	eb 36                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	eb 2f                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	eb 28                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	eb 21                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	eb 1a                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	eb 13                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	eb 0c                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	eb 05                	jmp    f010570a <debuginfo_eip+0x391>$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	5b                   	pop    %ebx$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	5e                   	pop    %esi$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	5f                   	pop    %edi$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	5d                   	pop    %ebp$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	c3                   	ret    $/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714 <printnum>:$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	55                   	push   %ebp$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	89 e5                	mov    %esp,%ebp$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	57                   	push   %edi$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	56                   	push   %esi$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	53                   	push   %ebx$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	83 fb 2d             	cmp    $0x2d,%ebx$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	0f 85 31 01 00 00    	jne    f010586c <printnum+0x158>$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	83 fa 00             	cmp    $0x0,%edx$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	77 08                	ja     f010574b <printnum+0x37>$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	0f 82 d9 01 00 00    	jb     f0105924 <printnum+0x210>$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	89 f9                	mov    %edi,%ecx$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	0f af cb             	imul   %ebx,%ecx$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	89 f0                	mov    %esi,%eax$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	f7 e3                	mul    %ebx$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	89 c6                	mov    %eax,%esi$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	89 d7                	mov    %edx,%edi$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	01 cf                	add    %ecx,%edi$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	00 $/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	e8 1b 16 00 00       	call   f0106da4 <__umoddi3>$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	01 c6                	add    %eax,%esi$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	11 d7                	adc    %edx,%edi$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	ff 45 dc             	incl   -0x24(%ebp)$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	00 $/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	e8 d6 14 00 00       	call   f0106c84 <__udivdi3>$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	83 fa 00             	cmp    $0x0,%edx$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	77 a3                	ja     f010575c <printnum+0x48>$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	72 04                	jb     f01057bf <printnum+0xab>$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	39 d8                	cmp    %ebx,%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	73 9d                	jae    f010575c <printnum+0x48>$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	0f be 81 8a 86 10 f0 	movsbl -0xfef7976(%ecx),%eax$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	ff 55 d4             	call   *-0x2c(%ebp)$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	29 45 14             	sub    %eax,0x14(%ebp)$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	85 c0                	test   %eax,%eax$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	7e 65                	jle    f0105845 <printnum+0x131>$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	00 $/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	e8 98 15 00 00       	call   f0106da4 <__umoddi3>$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	0f be 80 8a 86 10 f0 	movsbl -0xfef7976(%eax),%eax$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	ff 55 d4             	call   *-0x2c(%ebp)$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	ff 4d dc             	decl   -0x24(%ebp)$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	00 $/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105836	obj/kern/kernel.asm	/^f0105836:	e8 49 14 00 00       	call   f0106c84 <__udivdi3>$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	89 c6                	mov    %eax,%esi$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	89 d7                	mov    %edx,%edi$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	75 9b                	jne    f01057e0 <printnum+0xcc>$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	4e                   	dec    %esi$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	85 f6                	test   %esi,%esi$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	0f 8e ef 00 00 00    	jle    f0105940 <printnum+0x22c>$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	ff d7                	call   *%edi$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	4e                   	dec    %esi$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	75 f0                	jne    f0105857 <printnum+0x143>$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	e9 d4 00 00 00       	jmp    f0105940 <printnum+0x22c>$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	77 12                	ja     f0105884 <printnum+0x170>$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	39 4d d8             	cmp    %ecx,-0x28(%ebp)$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	73 0a                	jae    f0105884 <printnum+0x170>$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	4e                   	dec    %esi$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	85 f6                	test   %esi,%esi$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	7f 53                	jg     f01058d5 <printnum+0x1c1>$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	eb 61                	jmp    f01058e5 <printnum+0x1d1>$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f010588b	obj/kern/kernel.asm	/^f010588b:	4e                   	dec    %esi$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f010589b	obj/kern/kernel.asm	/^f010589b:	8b 7c 24 0c          	mov    0xc(%esp),%edi$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	00 $/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	e8 cb 13 00 00       	call   f0106c84 <__udivdi3>$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	e8 41 fe ff ff       	call   f0105714 <printnum>$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	eb 10                	jmp    f01058e5 <printnum+0x1d1>$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	ff 55 d4             	call   *-0x2c(%ebp)$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	4e                   	dec    %esi$/;"	l
f01058e3	obj/kern/kernel.asm	/^f01058e3:	75 f3                	jne    f01058d8 <printnum+0x1c4>$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	00 $/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	e8 93 14 00 00       	call   f0106da4 <__umoddi3>$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	0f be 80 8a 86 10 f0 	movsbl -0xfef7976(%eax),%eax$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	ff 55 d4             	call   *-0x2c(%ebp)$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	eb 1c                	jmp    f0105940 <printnum+0x22c>$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	0f be 81 8a 86 10 f0 	movsbl -0xfef7976(%ecx),%eax$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	ff 55 d4             	call   *-0x2c(%ebp)$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	e9 05 ff ff ff       	jmp    f0105845 <printnum+0x131>$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	5b                   	pop    %ebx$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	5e                   	pop    %esi$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	5f                   	pop    %edi$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	5d                   	pop    %ebp$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	c3                   	ret    $/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948 <getuint>:$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	55                   	push   %ebp$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	89 e5                	mov    %esp,%ebp$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	7e 0e                	jle    f010595e <getuint+0x16>$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	8b 10                	mov    (%eax),%edx$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	8b 02                	mov    (%edx),%eax$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	eb 22                	jmp    f0105980 <getuint+0x38>$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	85 d2                	test   %edx,%edx$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	74 10                	je     f0105972 <getuint+0x2a>$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	8b 10                	mov    (%eax),%edx$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	8b 02                	mov    (%edx),%eax$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	eb 0e                	jmp    f0105980 <getuint+0x38>$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	8b 10                	mov    (%eax),%edx$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	8b 02                	mov    (%edx),%eax$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	5d                   	pop    %ebp$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	c3                   	ret    $/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982 <sprintputch>:$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	55                   	push   %ebp$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	89 e5                	mov    %esp,%ebp$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	ff 40 08             	incl   0x8(%eax)$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	8b 10                	mov    (%eax),%edx$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	73 08                	jae    f010599a <sprintputch+0x18>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	42                   	inc    %edx$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	89 10                	mov    %edx,(%eax)$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	5d                   	pop    %ebp$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	c3                   	ret    $/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c <printfmt>:$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	55                   	push   %ebp$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	89 e5                	mov    %esp,%ebp$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	e8 02 00 00 00       	call   f01059c4 <vprintfmt>$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	c9                   	leave  $/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	c3                   	ret    $/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4 <vprintfmt>:$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	55                   	push   %ebp$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	57                   	push   %edi$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	56                   	push   %esi$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	53                   	push   %ebx$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	eb 15                	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	85 c0                	test   %eax,%eax$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	0f 84 8e 04 00 00    	je     f0105e68 <vprintfmt+0x4a4>$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	43                   	inc    %ebx$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	75 e2                	jne    f01059d2 <vprintfmt+0xe>$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	c6 45 dc 20          	movb   $0x20,-0x24(%ebp)$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	eb 29                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	eb 1d                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	c6 45 dc 2d          	movb   $0x2d,-0x24(%ebp)$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	eb 14                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105a32	obj/kern/kernel.asm	/^f0105a32:	eb 08                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	8a 03                	mov    (%ebx),%al$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	3c 55                	cmp    $0x55,%al$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	0f 87 ef 03 00 00    	ja     f0105e41 <vprintfmt+0x47d>$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	ff 24 85 c0 87 10 f0 	jmp    *-0xfef7840(,%eax,4)$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f0105a5f	obj/kern/kernel.asm	/^f0105a5f:	0f be 43 01          	movsbl 0x1(%ebx),%eax$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	77 48                	ja     f0105ab3 <vprintfmt+0xef>$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	eb 09                	jmp    f0105a79 <vprintfmt+0xb5>$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	c6 45 dc 30          	movb   $0x30,-0x24(%ebp)$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	eb c3                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	43                   	inc    %ebx$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	8d 0c b6             	lea    (%esi,%esi,4),%ecx$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	8d 74 48 d0          	lea    -0x30(%eax,%ecx,2),%esi$/;"	l
f0105a81	obj/kern/kernel.asm	/^f0105a81:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	76 ed                	jbe    f0105a79 <vprintfmt+0xb5>$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	eb 28                	jmp    f0105ab6 <vprintfmt+0xf2>$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	8b 30                	mov    (%eax),%esi$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	eb 18                	jmp    f0105ab6 <vprintfmt+0xf2>$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	78 84                	js     f0105a28 <vprintfmt+0x64>$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	eb 93                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	eb 89                	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	79 80                	jns    f0105a3c <vprintfmt+0x78>$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	e9 73 ff ff ff       	jmp    f0105a34 <vprintfmt+0x70>$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	42                   	inc    %edx$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	e9 72 ff ff ff       	jmp    f0105a3c <vprintfmt+0x78>$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	8b 00                	mov    (%eax),%eax$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	e9 fd fe ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	8b 00                	mov    (%eax),%eax$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	85 c0                	test   %eax,%eax$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	79 02                	jns    f0105afb <vprintfmt+0x137>$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	f7 d8                	neg    %eax$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	89 c2                	mov    %eax,%edx$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	7f 0b                	jg     f0105b0d <vprintfmt+0x149>$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	8b 04 85 20 89 10 f0 	mov    -0xfef76e0(,%eax,4),%eax$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	85 c0                	test   %eax,%eax$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	75 26                	jne    f0105b33 <vprintfmt+0x16f>$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	c7 44 24 08 a2 86 10 	movl   $0xf01086a2,0x8(%esp)$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	f0 $/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	e8 71 fe ff ff       	call   f010599c <printfmt>$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	e9 b4 fe ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	c7 44 24 08 d5 7d 10 	movl   $0xf0107dd5,0x8(%esp)$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	f0 $/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	e8 4b fe ff ff       	call   f010599c <printfmt>$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	e9 8e fe ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	89 f1                	mov    %esi,%ecx$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105b6c	obj/kern/kernel.asm	/^f0105b6c:	85 c0                	test   %eax,%eax$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	75 07                	jne    f0105b77 <vprintfmt+0x1b3>$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	c7 45 d8 9b 86 10 f0 	movl   $0xf010869b,-0x28(%ebp)$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	85 db                	test   %ebx,%ebx$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	7e 44                	jle    f0105bbf <vprintfmt+0x1fb>$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	80 7d dc 2d          	cmpb   $0x2d,-0x24(%ebp)$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	74 3e                	je     f0105bbf <vprintfmt+0x1fb>$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	e8 50 04 00 00       	call   f0105fe0 <strnlen>$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	29 c3                	sub    %eax,%ebx$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	85 db                	test   %ebx,%ebx$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	7e 26                	jle    f0105bbf <vprintfmt+0x1fb>$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	0f be 5d dc          	movsbl -0x24(%ebp),%ebx$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	89 7d dc             	mov    %edi,-0x24(%ebp)$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	4f                   	dec    %edi$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	75 f3                	jne    f0105ba9 <vprintfmt+0x1e5>$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	0f be 02             	movsbl (%edx),%eax$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	85 c0                	test   %eax,%eax$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	75 47                	jne    f0105c10 <vprintfmt+0x24c>$/;"	l
f0105bc9	obj/kern/kernel.asm	/^f0105bc9:	eb 37                	jmp    f0105c02 <vprintfmt+0x23e>$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	85 ff                	test   %edi,%edi$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	74 1b                	je     f0105bea <vprintfmt+0x226>$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	76 13                	jbe    f0105bea <vprintfmt+0x226>$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	eb 0d                	jmp    f0105bf7 <vprintfmt+0x233>$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	43                   	inc    %ebx$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	85 c0                	test   %eax,%eax$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	75 12                	jne    f0105c14 <vprintfmt+0x250>$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	7f 15                	jg     f0105c1d <vprintfmt+0x259>$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	e9 d7 fd ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	43                   	inc    %ebx$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	85 f6                	test   %esi,%esi$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	78 b3                	js     f0105bcb <vprintfmt+0x207>$/;"	l
f0105c18	obj/kern/kernel.asm	/^f0105c18:	4e                   	dec    %esi$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	79 b0                	jns    f0105bcb <vprintfmt+0x207>$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	eb e5                	jmp    f0105c02 <vprintfmt+0x23e>$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105c26	obj/kern/kernel.asm	/^f0105c26:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	ff d7                	call   *%edi$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	4b                   	dec    %ebx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	75 f0                	jne    f0105c26 <vprintfmt+0x262>$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	e9 a9 fd ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	7e 10                	jle    f0105c53 <vprintfmt+0x28f>$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	8b 30                	mov    (%eax),%esi$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	eb 26                	jmp    f0105c79 <vprintfmt+0x2b5>$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	85 d2                	test   %edx,%edx$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	74 12                	je     f0105c69 <vprintfmt+0x2a5>$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	8b 30                	mov    (%eax),%esi$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	89 f7                	mov    %esi,%edi$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	eb 10                	jmp    f0105c79 <vprintfmt+0x2b5>$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	8b 30                	mov    (%eax),%esi$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	89 f7                	mov    %esi,%edi$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	85 ff                	test   %edi,%edi$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	79 2c                	jns    f0105ca9 <vprintfmt+0x2e5>$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	89 f0                	mov    %esi,%eax$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	89 fa                	mov    %edi,%edx$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	f7 d8                	neg    %eax$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	f7 da                	neg    %edx$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	e9 d3 00 00 00       	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	0f 84 b7 00 00 00    	je     f0105d70 <vprintfmt+0x3ac>$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	89 fa                	mov    %edi,%edx$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	09 f2                	or     %esi,%edx$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	0f 84 b4 00 00 00    	je     f0105d77 <vprintfmt+0x3b3>$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	c7 04 24 2b 00 00 00 	movl   $0x2b,(%esp)$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	e9 9e 00 00 00       	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	e8 62 fc ff ff       	call   f0105948 <getuint>$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	e9 86 00 00 00       	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105cf6	obj/kern/kernel.asm	/^f0105cf6:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	e8 4a fc ff ff       	call   f0105948 <getuint>$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	eb 60                	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105d34	obj/kern/kernel.asm	/^f0105d34:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	8b 10                	mov    (%eax),%edx$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	eb 21                	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	e8 e5 fb ff ff       	call   f0105948 <getuint>$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	eb 0c                	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	eb 05                	jmp    f0105d7c <vprintfmt+0x3b8>$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	ba 0a 00 00 00       	mov    $0xa,%edx$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	0f be 45 dc          	movsbl -0x24(%ebp),%eax$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	e8 6d f9 ff ff       	call   f0105714 <printnum>$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	e9 38 fc ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	8b 18                	mov    (%eax),%ebx$/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	85 db                	test   %ebx,%ebx$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	75 2a                	jne    f0105de8 <vprintfmt+0x424>$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	c7 44 24 0c 40 87 10 	movl   $0xf0108740,0xc(%esp)$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	f0 $/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	c7 44 24 08 d5 7d 10 	movl   $0xf0107dd5,0x8(%esp)$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	f0 $/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	e8 bc fb ff ff       	call   f010599c <printfmt>$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	e9 ff fb ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	81 38 fe 00 00 00    	cmpl   $0xfe,(%eax)$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	76 2a                	jbe    f0105e1d <vprintfmt+0x459>$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	c7 44 24 0c 78 87 10 	movl   $0xf0108778,0xc(%esp)$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	f0 $/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	c7 44 24 08 d5 7d 10 	movl   $0xf0107dd5,0x8(%esp)$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	f0 $/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	e8 8a fb ff ff       	call   f010599c <printfmt>$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	c6 03 ff             	movb   $0xff,(%ebx)$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	e9 ca fb ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	8a 01                	mov    (%ecx),%al$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	88 03                	mov    %al,(%ebx)$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	e9 bb fb ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	e9 a6 fb ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	0f 84 8b fb ff ff    	je     f01059e7 <vprintfmt+0x23>$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	4b                   	dec    %ebx$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	75 f9                	jne    f0105e5c <vprintfmt+0x498>$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	e9 7f fb ff ff       	jmp    f01059e7 <vprintfmt+0x23>$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	5b                   	pop    %ebx$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	5e                   	pop    %esi$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	5f                   	pop    %edi$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	5d                   	pop    %ebp$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	c3                   	ret    $/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70 <vsnprintf>:$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	55                   	push   %ebp$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	85 c0                	test   %eax,%eax$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	74 30                	je     f0105ec1 <vsnprintf+0x51>$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	85 d2                	test   %edx,%edx$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	7e 33                	jle    f0105ec8 <vsnprintf+0x58>$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	c7 04 24 82 59 10 f0 	movl   $0xf0105982,(%esp)$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	e8 0e fb ff ff       	call   f01059c4 <vprintfmt>$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	eb 0c                	jmp    f0105ecd <vsnprintf+0x5d>$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	eb 05                	jmp    f0105ecd <vsnprintf+0x5d>$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	c9                   	leave  $/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	c3                   	ret    $/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf <snprintf>:$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	55                   	push   %ebp$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	e8 7b ff ff ff       	call   f0105e70 <vsnprintf>$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	c9                   	leave  $/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	c3                   	ret    $/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8 <readline>:$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	55                   	push   %ebp$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	57                   	push   %edi$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	56                   	push   %esi$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	53                   	push   %ebx$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	85 c0                	test   %eax,%eax$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	74 10                	je     f0105f18 <readline+0x20>$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	c7 04 24 d5 7d 10 f0 	movl   $0xf0107dd5,(%esp)$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	e8 14 e1 ff ff       	call   f010402c <cprintf>$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	e8 b6 a9 ff ff       	call   f01008da <iscons>$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	89 c7                	mov    %eax,%edi$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	e8 99 a9 ff ff       	call   f01008c9 <getchar>$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	85 c0                	test   %eax,%eax$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	79 17                	jns    f0105f4d <readline+0x55>$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	c7 04 24 44 89 10 f0 	movl   $0xf0108944,(%esp)$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	e8 e6 e0 ff ff       	call   f010402c <cprintf>$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	eb 69                	jmp    f0105fb6 <readline+0xbe>$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	74 05                	je     f0105f57 <readline+0x5f>$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	75 17                	jne    f0105f6e <readline+0x76>$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	85 f6                	test   %esi,%esi$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	7e 13                	jle    f0105f6e <readline+0x76>$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	85 ff                	test   %edi,%edi$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	74 0c                	je     f0105f6b <readline+0x73>$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	e8 4e a9 ff ff       	call   f01008b9 <cputchar>$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	4e                   	dec    %esi$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	eb bd                	jmp    f0105f2b <readline+0x33>$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	7e 1d                	jle    f0105f90 <readline+0x98>$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	7f 15                	jg     f0105f90 <readline+0x98>$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	85 ff                	test   %edi,%edi$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	74 08                	je     f0105f87 <readline+0x8f>$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	e8 32 a9 ff ff       	call   f01008b9 <cputchar>$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	88 9e a0 3a 34 f0    	mov    %bl,-0xfcbc560(%esi)$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	46                   	inc    %esi$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	eb 9b                	jmp    f0105f2b <readline+0x33>$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	74 05                	je     f0105f9a <readline+0xa2>$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	75 91                	jne    f0105f2b <readline+0x33>$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	85 ff                	test   %edi,%edi$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	74 0c                	je     f0105faa <readline+0xb2>$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	e8 0f a9 ff ff       	call   f01008b9 <cputchar>$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	c6 86 a0 3a 34 f0 00 	movb   $0x0,-0xfcbc560(%esi)$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	b8 a0 3a 34 f0       	mov    $0xf0343aa0,%eax$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	5b                   	pop    %ebx$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	5e                   	pop    %esi$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	5f                   	pop    %edi$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	5d                   	pop    %ebp$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	c3                   	ret    $/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0 <strlen>:$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	55                   	push   %ebp$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	74 0e                	je     f0105fd9 <strlen+0x19>$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	40                   	inc    %eax$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	75 f9                	jne    f0105fd0 <strlen+0x10>$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	eb 05                	jmp    f0105fde <strlen+0x1e>$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	5d                   	pop    %ebp$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	c3                   	ret    $/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0 <strnlen>:$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	55                   	push   %ebp$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	53                   	push   %ebx$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105fe7	obj/kern/kernel.asm	/^f0105fe7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	85 c9                	test   %ecx,%ecx$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	74 1a                	je     f0106008 <strnlen+0x28>$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	74 1c                	je     f010600f <strnlen+0x2f>$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	89 d0                	mov    %edx,%eax$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	74 16                	je     f0106014 <strnlen+0x34>$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	42                   	inc    %edx$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	75 f2                	jne    f0105ff8 <strnlen+0x18>$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	eb 0c                	jmp    f0106014 <strnlen+0x34>$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	eb 05                	jmp    f0106014 <strnlen+0x34>$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	5b                   	pop    %ebx$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	5d                   	pop    %ebp$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	c3                   	ret    $/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017 <strcpy>:$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	55                   	push   %ebp$/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	89 e5                	mov    %esp,%ebp$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	53                   	push   %ebx$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	42                   	inc    %edx$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	84 c9                	test   %cl,%cl$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	75 f5                	jne    f0106026 <strcpy+0xf>$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	5b                   	pop    %ebx$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	5d                   	pop    %ebp$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	c3                   	ret    $/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034 <strcat>:$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	55                   	push   %ebp$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	89 e5                	mov    %esp,%ebp$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	53                   	push   %ebx$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	e8 7a ff ff ff       	call   f0105fc0 <strlen>$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	01 d8                	add    %ebx,%eax$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	e8 c0 ff ff ff       	call   f0106017 <strcpy>$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	89 d8                	mov    %ebx,%eax$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	83 c4 08             	add    $0x8,%esp$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	5b                   	pop    %ebx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	5d                   	pop    %ebp$/;"	l
f010605e	obj/kern/kernel.asm	/^f010605e:	c3                   	ret    $/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f <strncpy>:$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	55                   	push   %ebp$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	89 e5                	mov    %esp,%ebp$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	56                   	push   %esi$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	53                   	push   %ebx$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010606a	obj/kern/kernel.asm	/^f010606a:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	85 f6                	test   %esi,%esi$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	74 15                	je     f0106086 <strncpy+0x27>$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	8a 1a                	mov    (%edx),%bl$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f010607e	obj/kern/kernel.asm	/^f010607e:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	41                   	inc    %ecx$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	75 f0                	jne    f0106076 <strncpy+0x17>$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	5b                   	pop    %ebx$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	5e                   	pop    %esi$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	5d                   	pop    %ebp$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	c3                   	ret    $/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a <strlcpy>:$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	55                   	push   %ebp$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	89 e5                	mov    %esp,%ebp$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	57                   	push   %edi$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	56                   	push   %esi$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	53                   	push   %ebx$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	85 f6                	test   %esi,%esi$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	74 31                	je     f01060ce <strlcpy+0x44>$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	74 21                	je     f01060c3 <strlcpy+0x39>$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	8a 0b                	mov    (%ebx),%cl$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	84 c9                	test   %cl,%cl$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	74 1f                	je     f01060c7 <strlcpy+0x3d>$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	83 ee 02             	sub    $0x2,%esi$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	89 f8                	mov    %edi,%eax$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	88 08                	mov    %cl,(%eax)$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	40                   	inc    %eax$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	39 f2                	cmp    %esi,%edx$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	74 10                	je     f01060c9 <strlcpy+0x3f>$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	42                   	inc    %edx$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	84 c9                	test   %cl,%cl$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	75 f1                	jne    f01060b2 <strlcpy+0x28>$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	eb 06                	jmp    f01060c9 <strlcpy+0x3f>$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	89 f8                	mov    %edi,%eax$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	eb 02                	jmp    f01060c9 <strlcpy+0x3f>$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	89 f8                	mov    %edi,%eax$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	eb 02                	jmp    f01060d0 <strlcpy+0x46>$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	89 f8                	mov    %edi,%eax$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	29 f8                	sub    %edi,%eax$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	5b                   	pop    %ebx$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	5e                   	pop    %esi$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	5f                   	pop    %edi$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	5d                   	pop    %ebp$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	c3                   	ret    $/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7 <strcmp>:$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	55                   	push   %ebp$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	8a 01                	mov    (%ecx),%al$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	84 c0                	test   %al,%al$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	74 11                	je     f01060f7 <strcmp+0x20>$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	3a 02                	cmp    (%edx),%al$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	75 0d                	jne    f01060f7 <strcmp+0x20>$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	42                   	inc    %edx$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	8a 41 01             	mov    0x1(%ecx),%al$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	84 c0                	test   %al,%al$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	74 05                	je     f01060f7 <strcmp+0x20>$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	41                   	inc    %ecx$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	3a 02                	cmp    (%edx),%al$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	74 f3                	je     f01060ea <strcmp+0x13>$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	29 d0                	sub    %edx,%eax$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	5d                   	pop    %ebp$/;"	l
f0106100	obj/kern/kernel.asm	/^f0106100:	c3                   	ret    $/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101 <strncmp>:$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	55                   	push   %ebp$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	89 e5                	mov    %esp,%ebp$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	53                   	push   %ebx$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	85 c0                	test   %eax,%eax$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	74 1b                	je     f010612d <strncmp+0x2c>$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	8a 1a                	mov    (%edx),%bl$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	84 db                	test   %bl,%bl$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	74 24                	je     f010613c <strncmp+0x3b>$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	3a 19                	cmp    (%ecx),%bl$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	75 20                	jne    f010613c <strncmp+0x3b>$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	48                   	dec    %eax$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	74 15                	je     f0106134 <strncmp+0x33>$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	42                   	inc    %edx$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	41                   	inc    %ecx$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	8a 1a                	mov    (%edx),%bl$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	84 db                	test   %bl,%bl$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	74 15                	je     f010613c <strncmp+0x3b>$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	74 f1                	je     f010611c <strncmp+0x1b>$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	eb 0f                	jmp    f010613c <strncmp+0x3b>$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	eb 05                	jmp    f0106139 <strncmp+0x38>$/;"	l
f0106134	obj/kern/kernel.asm	/^f0106134:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	5b                   	pop    %ebx$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	5d                   	pop    %ebp$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	c3                   	ret    $/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	29 d0                	sub    %edx,%eax$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	eb f3                	jmp    f0106139 <strncmp+0x38>$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146 <strchr>:$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	55                   	push   %ebp$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	89 e5                	mov    %esp,%ebp$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	8a 10                	mov    (%eax),%dl$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	84 d2                	test   %dl,%dl$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	74 19                	je     f010616e <strchr+0x28>$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	38 ca                	cmp    %cl,%dl$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	75 07                	jne    f0106160 <strchr+0x1a>$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	eb 18                	jmp    f0106173 <strchr+0x2d>$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	40                   	inc    %eax$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	38 ca                	cmp    %cl,%dl$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	74 13                	je     f0106173 <strchr+0x2d>$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	8a 50 01             	mov    0x1(%eax),%dl$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	84 d2                	test   %dl,%dl$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	75 f4                	jne    f010615b <strchr+0x15>$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	eb 05                	jmp    f0106173 <strchr+0x2d>$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	5d                   	pop    %ebp$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	c3                   	ret    $/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175 <strfind>:$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	55                   	push   %ebp$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	89 e5                	mov    %esp,%ebp$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	8a 10                	mov    (%eax),%dl$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	84 d2                	test   %dl,%dl$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	74 11                	je     f0106195 <strfind+0x20>$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	38 ca                	cmp    %cl,%dl$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	75 06                	jne    f010618e <strfind+0x19>$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	eb 0b                	jmp    f0106195 <strfind+0x20>$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	38 ca                	cmp    %cl,%dl$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	74 07                	je     f0106195 <strfind+0x20>$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	40                   	inc    %eax$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	8a 10                	mov    (%eax),%dl$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	84 d2                	test   %dl,%dl$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	75 f5                	jne    f010618a <strfind+0x15>$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	5d                   	pop    %ebp$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	c3                   	ret    $/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197 <memset>:$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	55                   	push   %ebp$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	89 e5                	mov    %esp,%ebp$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	57                   	push   %edi$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	56                   	push   %esi$/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	53                   	push   %ebx$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	85 c9                	test   %ecx,%ecx$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	74 30                	je     f01061da <memset+0x43>$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	75 25                	jne    f01061d7 <memset+0x40>$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	75 20                	jne    f01061d7 <memset+0x40>$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	89 d3                	mov    %edx,%ebx$/;"	l
f01061bc	obj/kern/kernel.asm	/^f01061bc:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	89 d6                	mov    %edx,%esi$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	89 d0                	mov    %edx,%eax$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	09 f0                	or     %esi,%eax$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	09 d0                	or     %edx,%eax$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	09 d8                	or     %ebx,%eax$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	fc                   	cld    $/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	eb 03                	jmp    f01061da <memset+0x43>$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	fc                   	cld    $/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	89 f8                	mov    %edi,%eax$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	5b                   	pop    %ebx$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	5e                   	pop    %esi$/;"	l
f01061de	obj/kern/kernel.asm	/^f01061de:	5f                   	pop    %edi$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	5d                   	pop    %ebp$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	c3                   	ret    $/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1 <memmove>:$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	55                   	push   %ebp$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	57                   	push   %edi$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	56                   	push   %esi$/;"	l
f01061e6	obj/kern/kernel.asm	/^f01061e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	39 c6                	cmp    %eax,%esi$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	73 34                	jae    f0106227 <memmove+0x46>$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	39 d0                	cmp    %edx,%eax$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	73 2d                	jae    f0106227 <memmove+0x46>$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	75 1b                	jne    f010621d <memmove+0x3c>$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	75 13                	jne    f010621d <memmove+0x3c>$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	75 0e                	jne    f010621d <memmove+0x3c>$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	fd                   	std    $/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	eb 07                	jmp    f0106224 <memmove+0x43>$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	4f                   	dec    %edi$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	fd                   	std    $/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	fc                   	cld    $/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	eb 20                	jmp    f0106247 <memmove+0x66>$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	75 13                	jne    f0106242 <memmove+0x61>$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	a8 03                	test   $0x3,%al$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	75 0f                	jne    f0106242 <memmove+0x61>$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	75 0a                	jne    f0106242 <memmove+0x61>$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	89 c7                	mov    %eax,%edi$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	fc                   	cld    $/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	eb 05                	jmp    f0106247 <memmove+0x66>$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	89 c7                	mov    %eax,%edi$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	fc                   	cld    $/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	5e                   	pop    %esi$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	5f                   	pop    %edi$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	5d                   	pop    %ebp$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	c3                   	ret    $/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b <memcpy>:$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	55                   	push   %ebp$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	89 e5                	mov    %esp,%ebp$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106251	obj/kern/kernel.asm	/^f0106251:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	e8 77 ff ff ff       	call   f01061e1 <memmove>$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	c9                   	leave  $/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	c3                   	ret    $/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c <memcmp>:$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	55                   	push   %ebp$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	89 e5                	mov    %esp,%ebp$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	57                   	push   %edi$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	56                   	push   %esi$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	53                   	push   %ebx$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	85 ff                	test   %edi,%edi$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	74 31                	je     f01062b0 <memcmp+0x44>$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	8a 03                	mov    (%ebx),%al$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	8a 0e                	mov    (%esi),%cl$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	38 c8                	cmp    %cl,%al$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	74 18                	je     f010629f <memcmp+0x33>$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	eb 0c                	jmp    f0106295 <memcmp+0x29>$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	8a 44 13 01          	mov    0x1(%ebx,%edx,1),%al$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	42                   	inc    %edx$/;"	l
f010628e	obj/kern/kernel.asm	/^f010628e:	8a 0c 16             	mov    (%esi,%edx,1),%cl$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	38 c8                	cmp    %cl,%al$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	74 10                	je     f01062a5 <memcmp+0x39>$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	29 c8                	sub    %ecx,%eax$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	eb 16                	jmp    f01062b5 <memcmp+0x49>$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	4f                   	dec    %edi$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	39 fa                	cmp    %edi,%edx$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	75 e0                	jne    f0106289 <memcmp+0x1d>$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	eb 05                	jmp    f01062b5 <memcmp+0x49>$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	5b                   	pop    %ebx$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	5e                   	pop    %esi$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	5f                   	pop    %edi$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	5d                   	pop    %ebp$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	c3                   	ret    $/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba <memfind>:$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	55                   	push   %ebp$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	89 c2                	mov    %eax,%edx$/;"	l
f01062c2	obj/kern/kernel.asm	/^f01062c2:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	39 d0                	cmp    %edx,%eax$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	73 12                	jae    f01062db <memfind+0x21>$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	38 08                	cmp    %cl,(%eax)$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	75 06                	jne    f01062d6 <memfind+0x1c>$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	eb 09                	jmp    f01062db <memfind+0x21>$/;"	l
f01062d2	obj/kern/kernel.asm	/^f01062d2:	38 08                	cmp    %cl,(%eax)$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	74 05                	je     f01062db <memfind+0x21>$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	40                   	inc    %eax$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	39 d0                	cmp    %edx,%eax$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	75 f7                	jne    f01062d2 <memfind+0x18>$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	5d                   	pop    %ebp$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	c3                   	ret    $/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd <strtol>:$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	55                   	push   %ebp$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	89 e5                	mov    %esp,%ebp$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	57                   	push   %edi$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	56                   	push   %esi$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	53                   	push   %ebx$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	eb 01                	jmp    f01062ec <strtol+0xf>$/;"	l
f01062eb	obj/kern/kernel.asm	/^f01062eb:	42                   	inc    %edx$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	8a 02                	mov    (%edx),%al$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	3c 20                	cmp    $0x20,%al$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	74 f9                	je     f01062eb <strtol+0xe>$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	3c 09                	cmp    $0x9,%al$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	74 f5                	je     f01062eb <strtol+0xe>$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	75 08                	jne    f0106302 <strtol+0x25>$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	42                   	inc    %edx$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	eb 13                	jmp    f0106315 <strtol+0x38>$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	75 0a                	jne    f0106310 <strtol+0x33>$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	eb 05                	jmp    f0106315 <strtol+0x38>$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	85 db                	test   %ebx,%ebx$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	74 05                	je     f010631e <strtol+0x41>$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	75 28                	jne    f0106346 <strtol+0x69>$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	8a 02                	mov    (%edx),%al$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	3c 30                	cmp    $0x30,%al$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	75 10                	jne    f0106334 <strtol+0x57>$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	75 0a                	jne    f0106334 <strtol+0x57>$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	83 c2 02             	add    $0x2,%edx$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	eb 12                	jmp    f0106346 <strtol+0x69>$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	85 db                	test   %ebx,%ebx$/;"	l
f0106336	obj/kern/kernel.asm	/^f0106336:	75 0e                	jne    f0106346 <strtol+0x69>$/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	3c 30                	cmp    $0x30,%al$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	75 05                	jne    f0106341 <strtol+0x64>$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	42                   	inc    %edx$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	b3 08                	mov    $0x8,%bl$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	eb 05                	jmp    f0106346 <strtol+0x69>$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	89 de                	mov    %ebx,%esi$/;"	l
f010634d	obj/kern/kernel.asm	/^f010634d:	8a 0a                	mov    (%edx),%cl$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0106355	obj/kern/kernel.asm	/^f0106355:	77 08                	ja     f010635f <strtol+0x82>$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	eb 1e                	jmp    f010637d <strtol+0xa0>$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	77 08                	ja     f010636f <strtol+0x92>$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f010636d	obj/kern/kernel.asm	/^f010636d:	eb 0e                	jmp    f010637d <strtol+0xa0>$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	77 12                	ja     f0106389 <strtol+0xac>$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	39 f1                	cmp    %esi,%ecx$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	7d 0c                	jge    f010638d <strtol+0xb0>$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	42                   	inc    %edx$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	0f af c6             	imul   %esi,%eax$/;"	l
f0106385	obj/kern/kernel.asm	/^f0106385:	01 c8                	add    %ecx,%eax$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	eb c4                	jmp    f010634d <strtol+0x70>$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	89 c1                	mov    %eax,%ecx$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	eb 02                	jmp    f010638f <strtol+0xb2>$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	89 c1                	mov    %eax,%ecx$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	74 05                	je     f010639a <strtol+0xbd>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	89 13                	mov    %edx,(%ebx)$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	85 ff                	test   %edi,%edi$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	74 04                	je     f01063a2 <strtol+0xc5>$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	89 c8                	mov    %ecx,%eax$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	f7 d8                	neg    %eax$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	5b                   	pop    %ebx$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	5e                   	pop    %esi$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	5f                   	pop    %edi$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	5d                   	pop    %ebp$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	c3                   	ret    $/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8 <mpentry_start>:$/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8:	fa                   	cli    $/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	31 c0                	xor    %eax,%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	8e d8                	mov    %eax,%ds$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	8e c0                	mov    %eax,%es$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	8e d0                	mov    %eax,%ss$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	74 70                	je     f0106426 <sum+0x2>$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	08 00                	or     %al,(%eax)$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8 <start32>:$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	8e d8                	mov    %eax,%ds$/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	8e c0                	mov    %eax,%es$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	8e d0                	mov    %eax,%ss$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	8e e0                	mov    %eax,%fs$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	8e e8                	mov    %eax,%gs$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	b8 00 80 12 00       	mov    $0x128000,%eax$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	8b 25 a4 3e 34 f0    	mov    0xf0343ea4,%esp$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	b8 b4 00 10 f0       	mov    $0xf01000b4,%eax$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	ff d0                	call   *%eax$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff <spin>:$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	eb fe                	jmp    f01063ff <spin>$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404 <gdt>:$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	ff                   	(bad)  $/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	ff 00                	incl   (%eax)$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	00 00                	add    %al,(%eax)$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c <gdtdesc>:$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	17                   	pop    %ss$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422 <mpentry_end>:$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	90                   	nop$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424 <sum>:$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	55                   	push   %ebp$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	89 e5                	mov    %esp,%ebp$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	56                   	push   %esi$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	53                   	push   %ebx$/;"	l
f0106429	obj/kern/kernel.asm	/^f0106429:	85 d2                	test   %edx,%edx$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	7e 17                	jle    f0106444 <sum+0x20>$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	01 f3                	add    %esi,%ebx$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	41                   	inc    %ecx$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	75 f5                	jne    f0106437 <sum+0x13>$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	eb 05                	jmp    f0106449 <sum+0x25>$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	88 d8                	mov    %bl,%al$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	5b                   	pop    %ebx$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	5e                   	pop    %esi$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	5d                   	pop    %ebp$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	c3                   	ret    $/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f <mpsearch1>:$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	55                   	push   %ebp$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	89 e5                	mov    %esp,%ebp$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	56                   	push   %esi$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	53                   	push   %ebx$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	8b 0d a8 3e 34 f0    	mov    0xf0343ea8,%ecx$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	89 c3                	mov    %eax,%ebx$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	72 20                	jb     f0106486 <mpsearch1+0x37>$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	f0 $/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	00 $/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	c7 04 24 e1 8a 10 f0 	movl   $0xf0108ae1,(%esp)$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	e8 c6 9b ff ff       	call   f010004c <_panic>$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	89 f2                	mov    %esi,%edx$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	77 20                	ja     f01064b2 <mpsearch1+0x63>$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	f0 $/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01064a5	obj/kern/kernel.asm	/^f01064a5:	00 $/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	c7 04 24 e1 8a 10 f0 	movl   $0xf0108ae1,(%esp)$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	e8 9a 9b ff ff       	call   f010004c <_panic>$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	39 f3                	cmp    %esi,%ebx$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	73 3a                	jae    f01064fc <mpsearch1+0xad>$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	00 $/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	c7 44 24 04 f1 8a 10 	movl   $0xf0108af1,0x4(%esp)$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	f0 $/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	e8 92 fd ff ff       	call   f010626c <memcmp>$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	85 c0                	test   %eax,%eax$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	75 10                	jne    f01064ee <mpsearch1+0x9f>$/;"	l
f01064de	obj/kern/kernel.asm	/^f01064de:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	89 d8                	mov    %ebx,%eax$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	e8 3a ff ff ff       	call   f0106424 <sum>$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	84 c0                	test   %al,%al$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	74 13                	je     f0106501 <mpsearch1+0xb2>$/;"	l
f01064ee	obj/kern/kernel.asm	/^f01064ee:	83 c3 10             	add    $0x10,%ebx$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	39 f3                	cmp    %esi,%ebx$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	72 cd                	jb     f01064c2 <mpsearch1+0x73>$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	eb 05                	jmp    f0106501 <mpsearch1+0xb2>$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	89 d8                	mov    %ebx,%eax$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	5b                   	pop    %ebx$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	5e                   	pop    %esi$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	5d                   	pop    %ebp$/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	c3                   	ret    $/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a <mp_init>:$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	55                   	push   %ebp$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	89 e5                	mov    %esp,%ebp$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	57                   	push   %edi$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	56                   	push   %esi$/;"	l
f010650f	obj/kern/kernel.asm	/^f010650f:	53                   	push   %ebx$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	c7 05 c0 43 34 f0 20 	movl   $0xf0344020,0xf03443c0$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	40 34 f0 $/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	83 3d a8 3e 34 f0 00 	cmpl   $0x0,0xf0343ea8$/;"	l
f0106524	obj/kern/kernel.asm	/^f0106524:	75 24                	jne    f010654a <mp_init+0x40>$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	00 $/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	f0 $/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	00 $/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	c7 04 24 e1 8a 10 f0 	movl   $0xf0108ae1,(%esp)$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	e8 02 9b ff ff       	call   f010004c <_panic>$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	85 c0                	test   %eax,%eax$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	74 16                	je     f010656b <mp_init+0x61>$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	e8 ed fe ff ff       	call   f010644f <mpsearch1>$/;"	l
f0106562	obj/kern/kernel.asm	/^f0106562:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	85 c0                	test   %eax,%eax$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	75 3c                	jne    f01065a5 <mp_init+0x9b>$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	eb 20                	jmp    f010658b <mp_init+0x81>$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	e8 cb fe ff ff       	call   f010644f <mpsearch1>$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	85 c0                	test   %eax,%eax$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	75 1a                	jne    f01065a5 <mp_init+0x9b>$/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	e8 b5 fe ff ff       	call   f010644f <mpsearch1>$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	85 c0                	test   %eax,%eax$/;"	l
f010659f	obj/kern/kernel.asm	/^f010659f:	0f 84 30 02 00 00    	je     f01067d5 <mp_init+0x2cb>$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	85 db                	test   %ebx,%ebx$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	74 06                	je     f01065b5 <mp_init+0xab>$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	74 11                	je     f01065c6 <mp_init+0xbc>$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	c7 04 24 54 89 10 f0 	movl   $0xf0108954,(%esp)$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	e8 6b da ff ff       	call   f010402c <cprintf>$/;"	l
f01065c1	obj/kern/kernel.asm	/^f01065c1:	e9 0f 02 00 00       	jmp    f01067d5 <mp_init+0x2cb>$/;"	l
f01065c6	obj/kern/kernel.asm	/^f01065c6:	89 d8                	mov    %ebx,%eax$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	3b 05 a8 3e 34 f0    	cmp    0xf0343ea8,%eax$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	72 20                	jb     f01065f3 <mp_init+0xe9>$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	f0 $/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	00 $/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	c7 04 24 e1 8a 10 f0 	movl   $0xf0108ae1,(%esp)$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	e8 59 9a ff ff       	call   f010004c <_panic>$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	00 $/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	c7 44 24 04 f6 8a 10 	movl   $0xf0108af6,0x4(%esp)$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	f0 $/;"	l
f0106609	obj/kern/kernel.asm	/^f0106609:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	e8 5b fc ff ff       	call   f010626c <memcmp>$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	85 c0                	test   %eax,%eax$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	74 11                	je     f0106626 <mp_init+0x11c>$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	c7 04 24 84 89 10 f0 	movl   $0xf0108984,(%esp)$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	e8 0b da ff ff       	call   f010402c <cprintf>$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	e9 af 01 00 00       	jmp    f01067d5 <mp_init+0x2cb>$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	66 8b 73 04          	mov    0x4(%ebx),%si$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	0f b7 d6             	movzwl %si,%edx$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	89 d8                	mov    %ebx,%eax$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	e8 f0 fd ff ff       	call   f0106424 <sum>$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	84 c0                	test   %al,%al$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	74 11                	je     f0106649 <mp_init+0x13f>$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	c7 04 24 b8 89 10 f0 	movl   $0xf01089b8,(%esp)$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	e8 e8 d9 ff ff       	call   f010402c <cprintf>$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	e9 8c 01 00 00       	jmp    f01067d5 <mp_init+0x2cb>$/;"	l
f0106649	obj/kern/kernel.asm	/^f0106649:	8a 43 06             	mov    0x6(%ebx),%al$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	3c 01                	cmp    $0x1,%al$/;"	l
f010664e	obj/kern/kernel.asm	/^f010664e:	74 1c                	je     f010666c <mp_init+0x162>$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	3c 04                	cmp    $0x4,%al$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	74 18                	je     f010666c <mp_init+0x162>$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	c7 04 24 dc 89 10 f0 	movl   $0xf01089dc,(%esp)$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	e8 c5 d9 ff ff       	call   f010402c <cprintf>$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	e9 69 01 00 00       	jmp    f01067d5 <mp_init+0x2cb>$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	0f b7 53 28          	movzwl 0x28(%ebx),%edx$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	0f b7 c6             	movzwl %si,%eax$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	01 d8                	add    %ebx,%eax$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	e8 aa fd ff ff       	call   f0106424 <sum>$/;"	l
f010667a	obj/kern/kernel.asm	/^f010667a:	3a 43 2a             	cmp    0x2a(%ebx),%al$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	74 11                	je     f0106690 <mp_init+0x186>$/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f:	c7 04 24 fc 89 10 f0 	movl   $0xf01089fc,(%esp)$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	e8 a1 d9 ff ff       	call   f010402c <cprintf>$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	e9 45 01 00 00       	jmp    f01067d5 <mp_init+0x2cb>$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	85 db                	test   %ebx,%ebx$/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692:	0f 84 3d 01 00 00    	je     f01067d5 <mp_init+0x2cb>$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	c7 05 00 40 34 f0 01 	movl   $0x1,0xf0344000$/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	00 00 00 $/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	a3 00 50 38 f0       	mov    %eax,0xf0385000$/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa:	66 83 7b 22 00       	cmpw   $0x0,0x22(%ebx)$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	0f 84 a8 00 00 00    	je     f010675d <mp_init+0x253>$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	8d 73 2c             	lea    0x2c(%ebx),%esi$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	8a 06                	mov    (%esi),%al$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	84 c0                	test   %al,%al$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	74 06                	je     f01066c9 <mp_init+0x1bf>$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	3c 04                	cmp    $0x4,%al$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	77 68                	ja     f010672f <mp_init+0x225>$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	eb 61                	jmp    f010672a <mp_init+0x220>$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	74 1d                	je     f01066ec <mp_init+0x1e2>$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	a1 c4 43 34 f0       	mov    0xf03443c4,%eax$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	29 c2                	sub    %eax,%edx$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	a3 c0 43 34 f0       	mov    %eax,0xf03443c0$/;"	l
f01066ec	obj/kern/kernel.asm	/^f01066ec:	a1 c4 43 34 f0       	mov    0xf03443c4,%eax$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01066f4	obj/kern/kernel.asm	/^f01066f4:	7f 1b                	jg     f0106711 <mp_init+0x207>$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	29 c2                	sub    %eax,%edx$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	88 04 95 20 40 34 f0 	mov    %al,-0xfcbbfe0(,%edx,4)$/;"	l
f0106709	obj/kern/kernel.asm	/^f0106709:	40                   	inc    %eax$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	a3 c4 43 34 f0       	mov    %eax,0xf03443c4$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	eb 14                	jmp    f0106725 <mp_init+0x21b>$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106719	obj/kern/kernel.asm	/^f0106719:	c7 04 24 2c 8a 10 f0 	movl   $0xf0108a2c,(%esp)$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	e8 07 d9 ff ff       	call   f010402c <cprintf>$/;"	l
f0106725	obj/kern/kernel.asm	/^f0106725:	83 c6 14             	add    $0x14,%esi$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	eb 26                	jmp    f0106750 <mp_init+0x246>$/;"	l
f010672a	obj/kern/kernel.asm	/^f010672a:	83 c6 08             	add    $0x8,%esi$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	eb 21                	jmp    f0106750 <mp_init+0x246>$/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	c7 04 24 54 8a 10 f0 	movl   $0xf0108a54,(%esp)$/;"	l
f010673d	obj/kern/kernel.asm	/^f010673d:	e8 ea d8 ff ff       	call   f010402c <cprintf>$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	c7 05 00 40 34 f0 00 	movl   $0x0,0xf0344000$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	00 00 00 $/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	0f b7 7b 22          	movzwl 0x22(%ebx),%edi$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	47                   	inc    %edi$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	39 f8                	cmp    %edi,%eax$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	0f 87 60 ff ff ff    	ja     f01066bd <mp_init+0x1b3>$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	a1 c0 43 34 f0       	mov    0xf03443c0,%eax$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	83 3d 00 40 34 f0 00 	cmpl   $0x0,0xf0344000$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	75 22                	jne    f0106794 <mp_init+0x28a>$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	c7 05 c4 43 34 f0 01 	movl   $0x1,0xf03443c4$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	00 00 00 $/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	c7 05 00 50 38 f0 00 	movl   $0x0,0xf0385000$/;"	l
f0106783	obj/kern/kernel.asm	/^f0106783:	00 00 00 $/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	c7 04 24 74 8a 10 f0 	movl   $0xf0108a74,(%esp)$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	e8 9a d8 ff ff       	call   f010402c <cprintf>$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	eb 41                	jmp    f01067d5 <mp_init+0x2cb>$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	8b 15 c4 43 34 f0    	mov    0xf03443c4,%edx$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01067a1	obj/kern/kernel.asm	/^f01067a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	c7 04 24 fb 8a 10 f0 	movl   $0xf0108afb,(%esp)$/;"	l
f01067ac	obj/kern/kernel.asm	/^f01067ac:	e8 7b d8 ff ff       	call   f010402c <cprintf>$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	74 1b                	je     f01067d5 <mp_init+0x2cb>$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	c7 04 24 a0 8a 10 f0 	movl   $0xf0108aa0,(%esp)$/;"	l
f01067c1	obj/kern/kernel.asm	/^f01067c1:	e8 66 d8 ff ff       	call   f010402c <cprintf>$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	b0 70                	mov    $0x70,%al$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	ee                   	out    %al,(%dx)$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	b2 23                	mov    $0x23,%dl$/;"	l
f01067d0	obj/kern/kernel.asm	/^f01067d0:	ec                   	in     (%dx),%al$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	83 c8 01             	or     $0x1,%eax$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	ee                   	out    %al,(%dx)$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	5b                   	pop    %ebx$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	5e                   	pop    %esi$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	5f                   	pop    %edi$/;"	l
f01067db	obj/kern/kernel.asm	/^f01067db:	5d                   	pop    %ebp$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	c3                   	ret    $/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	00 00                	add    %al,(%eax)$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0 <lapicw>:$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	55                   	push   %ebp$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01067e6	obj/kern/kernel.asm	/^f01067e6:	03 05 00 50 38 f0    	add    0xf0385000,%eax$/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	89 10                	mov    %edx,(%eax)$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	a1 00 50 38 f0       	mov    0xf0385000,%eax$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	5d                   	pop    %ebp$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	c3                   	ret    $/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8 <cpunum>:$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	55                   	push   %ebp$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	a1 00 50 38 f0       	mov    0xf0385000,%eax$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	85 c0                	test   %eax,%eax$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	74 08                	je     f010680c <cpunum+0x14>$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	eb 05                	jmp    f0106811 <cpunum+0x19>$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	5d                   	pop    %ebp$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	c3                   	ret    $/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813 <lapic_init>:$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	55                   	push   %ebp$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	89 e5                	mov    %esp,%ebp$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	83 3d 00 50 38 f0 00 	cmpl   $0x0,0xf0385000$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	0f 84 12 01 00 00    	je     f0106935 <lapic_init+0x122>$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	e8 ae ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106832	obj/kern/kernel.asm	/^f0106832:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f010683c	obj/kern/kernel.asm	/^f010683c:	e8 9f ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	e8 90 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106850	obj/kern/kernel.asm	/^f0106850:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106855	obj/kern/kernel.asm	/^f0106855:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	e8 81 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	e8 94 ff ff ff       	call   f01067f8 <cpunum>$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	29 c2                	sub    %eax,%edx$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	39 05 c0 43 34 f0    	cmp    %eax,0xf03443c0$/;"	l
f010687d	obj/kern/kernel.asm	/^f010687d:	74 0f                	je     f010688e <lapic_init+0x7b>$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106889	obj/kern/kernel.asm	/^f0106889:	e8 52 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	e8 43 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	a1 00 50 38 f0       	mov    0xf0385000,%eax$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	3c 03                	cmp    $0x3,%al$/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	76 0f                	jbe    f01068bb <lapic_init+0xa8>$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01068b6	obj/kern/kernel.asm	/^f01068b6:	e8 25 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01068c5	obj/kern/kernel.asm	/^f01068c5:	e8 16 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068cf	obj/kern/kernel.asm	/^f01068cf:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01068d4	obj/kern/kernel.asm	/^f01068d4:	e8 07 ff ff ff       	call   f01067e0 <lapicw>$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	e8 f8 fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	e8 e9 fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106901	obj/kern/kernel.asm	/^f0106901:	e8 da fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	e8 cb fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	8b 15 00 50 38 f0    	mov    0xf0385000,%edx$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	75 f5                	jne    f010691b <lapic_init+0x108>$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	e8 ab fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	5d                   	pop    %ebp$/;"	l
f0106936	obj/kern/kernel.asm	/^f0106936:	c3                   	ret    $/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937 <lapic_eoi>:$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	55                   	push   %ebp$/;"	l
f0106938	obj/kern/kernel.asm	/^f0106938:	89 e5                	mov    %esp,%ebp$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	83 3d 00 50 38 f0 00 	cmpl   $0x0,0xf0385000$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	74 0f                	je     f0106952 <lapic_eoi+0x1b>$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010694d	obj/kern/kernel.asm	/^f010694d:	e8 8e fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106952	obj/kern/kernel.asm	/^f0106952:	5d                   	pop    %ebp$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	c3                   	ret    $/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954 <lapic_startap>:$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	55                   	push   %ebp$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	89 e5                	mov    %esp,%ebp$/;"	l
f0106957	obj/kern/kernel.asm	/^f0106957:	56                   	push   %esi$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	53                   	push   %ebx$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f:	8a 5d 08             	mov    0x8(%ebp),%bl$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	b0 0f                	mov    $0xf,%al$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	ee                   	out    %al,(%dx)$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	b2 71                	mov    $0x71,%dl$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	b0 0a                	mov    $0xa,%al$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	ee                   	out    %al,(%dx)$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	83 3d a8 3e 34 f0 00 	cmpl   $0x0,0xf0343ea8$/;"	l
f0106976	obj/kern/kernel.asm	/^f0106976:	75 24                	jne    f010699c <lapic_startap+0x48>$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f010697f	obj/kern/kernel.asm	/^f010697f:	00 $/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	c7 44 24 08 28 6f 10 	movl   $0xf0106f28,0x8(%esp)$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	f0 $/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	00 $/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	c7 04 24 18 8b 10 f0 	movl   $0xf0108b18,(%esp)$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	e8 b0 96 ff ff       	call   f010004c <_panic>$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	00 00 $/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	89 f0                	mov    %esi,%eax$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f01069b3	obj/kern/kernel.asm	/^f01069b3:	89 da                	mov    %ebx,%edx$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	e8 21 fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f01069bf	obj/kern/kernel.asm	/^f01069bf:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	e8 12 fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01069d3	obj/kern/kernel.asm	/^f01069d3:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	e8 03 fe ff ff       	call   f01067e0 <lapicw>$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	89 da                	mov    %ebx,%edx$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01069ed	obj/kern/kernel.asm	/^f01069ed:	e8 ee fd ff ff       	call   f01067e0 <lapicw>$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	89 f2                	mov    %esi,%edx$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	e8 e2 fd ff ff       	call   f01067e0 <lapicw>$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	89 da                	mov    %ebx,%edx$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	e8 d6 fd ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106a0a	obj/kern/kernel.asm	/^f0106a0a:	89 f2                	mov    %esi,%edx$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	e8 ca fd ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106a16	obj/kern/kernel.asm	/^f0106a16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a19	obj/kern/kernel.asm	/^f0106a19:	5b                   	pop    %ebx$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	5e                   	pop    %esi$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	5d                   	pop    %ebp$/;"	l
f0106a1c	obj/kern/kernel.asm	/^f0106a1c:	c3                   	ret    $/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d <lapic_ipi>:$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	55                   	push   %ebp$/;"	l
f0106a1e	obj/kern/kernel.asm	/^f0106a1e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a20	obj/kern/kernel.asm	/^f0106a20:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	e8 ad fd ff ff       	call   f01067e0 <lapicw>$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	8b 15 00 50 38 f0    	mov    0xf0385000,%edx$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	75 f5                	jne    f0106a39 <lapic_ipi+0x1c>$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	5d                   	pop    %ebp$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	c3                   	ret    $/;"	l
f0106a48	obj/kern/kernel.asm	/^f0106a48 <holding>:$/;"	l
f0106a48	obj/kern/kernel.asm	/^f0106a48:	55                   	push   %ebp$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	53                   	push   %ebx$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106a4f	obj/kern/kernel.asm	/^f0106a4f:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0106a52	obj/kern/kernel.asm	/^f0106a52:	74 25                	je     f0106a79 <holding+0x31>$/;"	l
f0106a54	obj/kern/kernel.asm	/^f0106a54:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f0106a57	obj/kern/kernel.asm	/^f0106a57:	e8 9c fd ff ff       	call   f01067f8 <cpunum>$/;"	l
f0106a5c	obj/kern/kernel.asm	/^f0106a5c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	29 c2                	sub    %eax,%edx$/;"	l
f0106a65	obj/kern/kernel.asm	/^f0106a65:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f0106a6f	obj/kern/kernel.asm	/^f0106a6f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71:	0f 94 c0             	sete   %al$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	eb 05                	jmp    f0106a7e <holding+0x36>$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a7e	obj/kern/kernel.asm	/^f0106a7e:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	5b                   	pop    %ebx$/;"	l
f0106a82	obj/kern/kernel.asm	/^f0106a82:	5d                   	pop    %ebp$/;"	l
f0106a83	obj/kern/kernel.asm	/^f0106a83:	c3                   	ret    $/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84 <__spin_initlock>:$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	55                   	push   %ebp$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a87	obj/kern/kernel.asm	/^f0106a87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a8a	obj/kern/kernel.asm	/^f0106a8a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106a93	obj/kern/kernel.asm	/^f0106a93:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	5d                   	pop    %ebp$/;"	l
f0106a9e	obj/kern/kernel.asm	/^f0106a9e:	c3                   	ret    $/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f <spin_lock>:$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	55                   	push   %ebp$/;"	l
f0106aa0	obj/kern/kernel.asm	/^f0106aa0:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	53                   	push   %ebx$/;"	l
f0106aa3	obj/kern/kernel.asm	/^f0106aa3:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0106aa6	obj/kern/kernel.asm	/^f0106aa6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	89 d8                	mov    %ebx,%eax$/;"	l
f0106aab	obj/kern/kernel.asm	/^f0106aab:	e8 98 ff ff ff       	call   f0106a48 <holding>$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	85 c0                	test   %eax,%eax$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	75 0d                	jne    f0106ac1 <spin_lock+0x22>$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	89 da                	mov    %ebx,%edx$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	b0 01                	mov    $0x1,%al$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	85 c0                	test   %eax,%eax$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	75 2e                	jne    f0106aed <spin_lock+0x4e>$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	eb 3c                	jmp    f0106afd <spin_lock+0x5e>$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	e8 2f fd ff ff       	call   f01067f8 <cpunum>$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106acd	obj/kern/kernel.asm	/^f0106acd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	c7 44 24 08 28 8b 10 	movl   $0xf0108b28,0x8(%esp)$/;"	l
f0106ad8	obj/kern/kernel.asm	/^f0106ad8:	f0 $/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0106ae0	obj/kern/kernel.asm	/^f0106ae0:	00 $/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	c7 04 24 8c 8b 10 f0 	movl   $0xf0108b8c,(%esp)$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	e8 5f 95 ff ff       	call   f010004c <_panic>$/;"	l
f0106aed	obj/kern/kernel.asm	/^f0106aed:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0106af2	obj/kern/kernel.asm	/^f0106af2:	f3 90                	pause  $/;"	l
f0106af4	obj/kern/kernel.asm	/^f0106af4:	89 c8                	mov    %ecx,%eax$/;"	l
f0106af6	obj/kern/kernel.asm	/^f0106af6:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106af9	obj/kern/kernel.asm	/^f0106af9:	85 c0                	test   %eax,%eax$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	75 f5                	jne    f0106af2 <spin_lock+0x53>$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	e8 f6 fc ff ff       	call   f01067f8 <cpunum>$/;"	l
f0106b02	obj/kern/kernel.asm	/^f0106b02:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106b09	obj/kern/kernel.asm	/^f0106b09:	29 c2                	sub    %eax,%edx$/;"	l
f0106b0b	obj/kern/kernel.asm	/^f0106b0b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106b0e	obj/kern/kernel.asm	/^f0106b0e:	8d 04 85 20 40 34 f0 	lea    -0xfcbbfe0(,%eax,4),%eax$/;"	l
f0106b15	obj/kern/kernel.asm	/^f0106b15:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106b18	obj/kern/kernel.asm	/^f0106b18:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	89 e8                	mov    %ebp,%eax$/;"	l
f0106b1d	obj/kern/kernel.asm	/^f0106b1d:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f0106b29	obj/kern/kernel.asm	/^f0106b29:	76 36                	jbe    f0106b61 <spin_lock+0xc2>$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	eb 2d                	jmp    f0106b5a <spin_lock+0xbb>$/;"	l
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	8d 9a 00 00 80 10    	lea    0x10800000(%edx),%ebx$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	81 fb ff ff 7f 0e    	cmp    $0xe7fffff,%ebx$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	77 10                	ja     f0106b4b <spin_lock+0xac>$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	8b 12                	mov    (%edx),%edx$/;"	l
f0106b43	obj/kern/kernel.asm	/^f0106b43:	40                   	inc    %eax$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	75 e4                	jne    f0106b2d <spin_lock+0x8e>$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	eb 25                	jmp    f0106b70 <spin_lock+0xd1>$/;"	l
f0106b4b	obj/kern/kernel.asm	/^f0106b4b:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f0106b52	obj/kern/kernel.asm	/^f0106b52:	40                   	inc    %eax$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106b56	obj/kern/kernel.asm	/^f0106b56:	7e f3                	jle    f0106b4b <spin_lock+0xac>$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	eb 16                	jmp    f0106b70 <spin_lock+0xd1>$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	eb ea                	jmp    f0106b4b <spin_lock+0xac>$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106b64	obj/kern/kernel.asm	/^f0106b64:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	8b 10                	mov    (%eax),%edx$/;"	l
f0106b69	obj/kern/kernel.asm	/^f0106b69:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106b6e	obj/kern/kernel.asm	/^f0106b6e:	eb bd                	jmp    f0106b2d <spin_lock+0x8e>$/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	83 c4 24             	add    $0x24,%esp$/;"	l
f0106b73	obj/kern/kernel.asm	/^f0106b73:	5b                   	pop    %ebx$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	5d                   	pop    %ebp$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	c3                   	ret    $/;"	l
f0106b76	obj/kern/kernel.asm	/^f0106b76 <spin_unlock>:$/;"	l
f0106b76	obj/kern/kernel.asm	/^f0106b76:	55                   	push   %ebp$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	57                   	push   %edi$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	56                   	push   %esi$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	53                   	push   %ebx$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	89 d8                	mov    %ebx,%eax$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	e8 bf fe ff ff       	call   f0106a48 <holding>$/;"	l
f0106b89	obj/kern/kernel.asm	/^f0106b89:	85 c0                	test   %eax,%eax$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	0f 85 d4 00 00 00    	jne    f0106c65 <spin_unlock+0xef>$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	00 $/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106b9c	obj/kern/kernel.asm	/^f0106b9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ba0	obj/kern/kernel.asm	/^f0106ba0:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0106ba3	obj/kern/kernel.asm	/^f0106ba3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106ba6	obj/kern/kernel.asm	/^f0106ba6:	e8 36 f6 ff ff       	call   f01061e1 <memmove>$/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106bae	obj/kern/kernel.asm	/^f0106bae:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f0106bb1	obj/kern/kernel.asm	/^f0106bb1:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	e8 3f fc ff ff       	call   f01067f8 <cpunum>$/;"	l
f0106bb9	obj/kern/kernel.asm	/^f0106bb9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106bbd	obj/kern/kernel.asm	/^f0106bbd:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bc5	obj/kern/kernel.asm	/^f0106bc5:	c7 04 24 54 8b 10 f0 	movl   $0xf0108b54,(%esp)$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	e8 5b d4 ff ff       	call   f010402c <cprintf>$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	85 c0                	test   %eax,%eax$/;"	l
f0106bd6	obj/kern/kernel.asm	/^f0106bd6:	74 71                	je     f0106c49 <spin_unlock+0xd3>$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f0106bdb	obj/kern/kernel.asm	/^f0106bdb:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f0106bde	obj/kern/kernel.asm	/^f0106bde:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106be5	obj/kern/kernel.asm	/^f0106be5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	e8 8c e7 ff ff       	call   f0105379 <debuginfo_eip>$/;"	l
f0106bed	obj/kern/kernel.asm	/^f0106bed:	85 c0                	test   %eax,%eax$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	78 39                	js     f0106c2a <spin_unlock+0xb4>$/;"	l
f0106bf1	obj/kern/kernel.asm	/^f0106bf1:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106bf3	obj/kern/kernel.asm	/^f0106bf3:	89 c2                	mov    %eax,%edx$/;"	l
f0106bf5	obj/kern/kernel.asm	/^f0106bf5:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106c0a	obj/kern/kernel.asm	/^f0106c0a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0106c0d	obj/kern/kernel.asm	/^f0106c0d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106c11	obj/kern/kernel.asm	/^f0106c11:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c1c	obj/kern/kernel.asm	/^f0106c1c:	c7 04 24 9c 8b 10 f0 	movl   $0xf0108b9c,(%esp)$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	e8 04 d4 ff ff       	call   f010402c <cprintf>$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	eb 12                	jmp    f0106c3c <spin_unlock+0xc6>$/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	c7 04 24 b3 8b 10 f0 	movl   $0xf0108bb3,(%esp)$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	e8 f0 d3 ff ff       	call   f010402c <cprintf>$/;"	l
f0106c3c	obj/kern/kernel.asm	/^f0106c3c:	39 fb                	cmp    %edi,%ebx$/;"	l
f0106c3e	obj/kern/kernel.asm	/^f0106c3e:	74 09                	je     f0106c49 <spin_unlock+0xd3>$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106c45	obj/kern/kernel.asm	/^f0106c45:	85 c0                	test   %eax,%eax$/;"	l
f0106c47	obj/kern/kernel.asm	/^f0106c47:	75 98                	jne    f0106be1 <spin_unlock+0x6b>$/;"	l
f0106c49	obj/kern/kernel.asm	/^f0106c49:	c7 44 24 08 bb 8b 10 	movl   $0xf0108bbb,0x8(%esp)$/;"	l
f0106c50	obj/kern/kernel.asm	/^f0106c50:	f0 $/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	c7 44 24 04 82 00 00 	movl   $0x82,0x4(%esp)$/;"	l
f0106c58	obj/kern/kernel.asm	/^f0106c58:	00 $/;"	l
f0106c59	obj/kern/kernel.asm	/^f0106c59:	c7 04 24 8c 8b 10 f0 	movl   $0xf0108b8c,(%esp)$/;"	l
f0106c60	obj/kern/kernel.asm	/^f0106c60:	e8 e7 93 ff ff       	call   f010004c <_panic>$/;"	l
f0106c65	obj/kern/kernel.asm	/^f0106c65:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0106c6c	obj/kern/kernel.asm	/^f0106c6c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c78	obj/kern/kernel.asm	/^f0106c78:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	5b                   	pop    %ebx$/;"	l
f0106c7f	obj/kern/kernel.asm	/^f0106c7f:	5e                   	pop    %esi$/;"	l
f0106c80	obj/kern/kernel.asm	/^f0106c80:	5f                   	pop    %edi$/;"	l
f0106c81	obj/kern/kernel.asm	/^f0106c81:	5d                   	pop    %ebp$/;"	l
f0106c82	obj/kern/kernel.asm	/^f0106c82:	c3                   	ret    $/;"	l
f0106c84	obj/kern/kernel.asm	/^f0106c84 <__udivdi3>:$/;"	l
f0106c84	obj/kern/kernel.asm	/^f0106c84:	55                   	push   %ebp$/;"	l
f0106c85	obj/kern/kernel.asm	/^f0106c85:	57                   	push   %edi$/;"	l
f0106c86	obj/kern/kernel.asm	/^f0106c86:	56                   	push   %esi$/;"	l
f0106c87	obj/kern/kernel.asm	/^f0106c87:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f0106c8e	obj/kern/kernel.asm	/^f0106c8e:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0106c92	obj/kern/kernel.asm	/^f0106c92:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f0106c9a	obj/kern/kernel.asm	/^f0106c9a:	89 cd                	mov    %ecx,%ebp$/;"	l
f0106c9c	obj/kern/kernel.asm	/^f0106c9c:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	85 c0                	test   %eax,%eax$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	75 2c                	jne    f0106cd0 <__udivdi3+0x4c>$/;"	l
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	39 f9                	cmp    %edi,%ecx$/;"	l
f0106ca6	obj/kern/kernel.asm	/^f0106ca6:	77 68                	ja     f0106d10 <__udivdi3+0x8c>$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	85 c9                	test   %ecx,%ecx$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	75 0b                	jne    f0106cb7 <__udivdi3+0x33>$/;"	l
f0106cac	obj/kern/kernel.asm	/^f0106cac:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106cb1	obj/kern/kernel.asm	/^f0106cb1:	31 d2                	xor    %edx,%edx$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	f7 f1                	div    %ecx$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	89 c1                	mov    %eax,%ecx$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	31 d2                	xor    %edx,%edx$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	89 f8                	mov    %edi,%eax$/;"	l
f0106cbb	obj/kern/kernel.asm	/^f0106cbb:	f7 f1                	div    %ecx$/;"	l
f0106cbd	obj/kern/kernel.asm	/^f0106cbd:	89 c7                	mov    %eax,%edi$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	89 f0                	mov    %esi,%eax$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	f7 f1                	div    %ecx$/;"	l
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	89 c6                	mov    %eax,%esi$/;"	l
f0106cc5	obj/kern/kernel.asm	/^f0106cc5:	89 f0                	mov    %esi,%eax$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	89 fa                	mov    %edi,%edx$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ccc	obj/kern/kernel.asm	/^f0106ccc:	5e                   	pop    %esi$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	5f                   	pop    %edi$/;"	l
f0106cce	obj/kern/kernel.asm	/^f0106cce:	5d                   	pop    %ebp$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	c3                   	ret    $/;"	l
f0106cd0	obj/kern/kernel.asm	/^f0106cd0:	39 f8                	cmp    %edi,%eax$/;"	l
f0106cd2	obj/kern/kernel.asm	/^f0106cd2:	77 2c                	ja     f0106d00 <__udivdi3+0x7c>$/;"	l
f0106cd4	obj/kern/kernel.asm	/^f0106cd4:	0f bd f0             	bsr    %eax,%esi$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda:	75 4c                	jne    f0106d28 <__udivdi3+0xa4>$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	39 f8                	cmp    %edi,%eax$/;"	l
f0106cde	obj/kern/kernel.asm	/^f0106cde:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106ce3	obj/kern/kernel.asm	/^f0106ce3:	72 0a                	jb     f0106cef <__udivdi3+0x6b>$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f0106ce9	obj/kern/kernel.asm	/^f0106ce9:	0f 87 ad 00 00 00    	ja     f0106d9c <__udivdi3+0x118>$/;"	l
f0106cef	obj/kern/kernel.asm	/^f0106cef:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0106cf4	obj/kern/kernel.asm	/^f0106cf4:	89 f0                	mov    %esi,%eax$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	89 fa                	mov    %edi,%edx$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	5e                   	pop    %esi$/;"	l
f0106cfc	obj/kern/kernel.asm	/^f0106cfc:	5f                   	pop    %edi$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	5d                   	pop    %ebp$/;"	l
f0106cfe	obj/kern/kernel.asm	/^f0106cfe:	c3                   	ret    $/;"	l
f0106cff	obj/kern/kernel.asm	/^f0106cff:	90                   	nop$/;"	l
f0106d00	obj/kern/kernel.asm	/^f0106d00:	31 ff                	xor    %edi,%edi$/;"	l
f0106d02	obj/kern/kernel.asm	/^f0106d02:	31 f6                	xor    %esi,%esi$/;"	l
f0106d04	obj/kern/kernel.asm	/^f0106d04:	89 f0                	mov    %esi,%eax$/;"	l
f0106d06	obj/kern/kernel.asm	/^f0106d06:	89 fa                	mov    %edi,%edx$/;"	l
f0106d08	obj/kern/kernel.asm	/^f0106d08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d0b	obj/kern/kernel.asm	/^f0106d0b:	5e                   	pop    %esi$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	5f                   	pop    %edi$/;"	l
f0106d0d	obj/kern/kernel.asm	/^f0106d0d:	5d                   	pop    %ebp$/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	c3                   	ret    $/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	90                   	nop$/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	89 fa                	mov    %edi,%edx$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	89 f0                	mov    %esi,%eax$/;"	l
f0106d14	obj/kern/kernel.asm	/^f0106d14:	f7 f1                	div    %ecx$/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	89 c6                	mov    %eax,%esi$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	31 ff                	xor    %edi,%edi$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	89 f0                	mov    %esi,%eax$/;"	l
f0106d1c	obj/kern/kernel.asm	/^f0106d1c:	89 fa                	mov    %edi,%edx$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d21	obj/kern/kernel.asm	/^f0106d21:	5e                   	pop    %esi$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	5f                   	pop    %edi$/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	5d                   	pop    %ebp$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	c3                   	ret    $/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	89 f1                	mov    %esi,%ecx$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	d3 e0                	shl    %cl,%eax$/;"	d
f0106d2c	obj/kern/kernel.asm	/^f0106d2c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106d35	obj/kern/kernel.asm	/^f0106d35:	29 f0                	sub    %esi,%eax$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	89 ea                	mov    %ebp,%edx$/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	88 c1                	mov    %al,%cl$/;"	l
f0106d3b	obj/kern/kernel.asm	/^f0106d3b:	d3 ea                	shr    %cl,%edx$/;"	d
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	09 ca                	or     %ecx,%edx$/;"	l
f0106d43	obj/kern/kernel.asm	/^f0106d43:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106d47	obj/kern/kernel.asm	/^f0106d47:	89 f1                	mov    %esi,%ecx$/;"	l
f0106d49	obj/kern/kernel.asm	/^f0106d49:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f0106d4f	obj/kern/kernel.asm	/^f0106d4f:	89 fd                	mov    %edi,%ebp$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	88 c1                	mov    %al,%cl$/;"	l
f0106d53	obj/kern/kernel.asm	/^f0106d53:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106d55	obj/kern/kernel.asm	/^f0106d55:	89 fa                	mov    %edi,%edx$/;"	l
f0106d57	obj/kern/kernel.asm	/^f0106d57:	89 f1                	mov    %esi,%ecx$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	d3 e2                	shl    %cl,%edx$/;"	d
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106d5f	obj/kern/kernel.asm	/^f0106d5f:	88 c1                	mov    %al,%cl$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	d3 ef                	shr    %cl,%edi$/;"	d
f0106d63	obj/kern/kernel.asm	/^f0106d63:	09 d7                	or     %edx,%edi$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	89 f8                	mov    %edi,%eax$/;"	l
f0106d67	obj/kern/kernel.asm	/^f0106d67:	89 ea                	mov    %ebp,%edx$/;"	l
f0106d69	obj/kern/kernel.asm	/^f0106d69:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	89 d1                	mov    %edx,%ecx$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	89 c7                	mov    %eax,%edi$/;"	l
f0106d71	obj/kern/kernel.asm	/^f0106d71:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106d77	obj/kern/kernel.asm	/^f0106d77:	72 17                	jb     f0106d90 <__udivdi3+0x10c>$/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79:	74 09                	je     f0106d84 <__udivdi3+0x100>$/;"	l
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	89 fe                	mov    %edi,%esi$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	31 ff                	xor    %edi,%edi$/;"	l
f0106d7f	obj/kern/kernel.asm	/^f0106d7f:	e9 41 ff ff ff       	jmp    f0106cc5 <__udivdi3+0x41>$/;"	l
f0106d84	obj/kern/kernel.asm	/^f0106d84:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106d88	obj/kern/kernel.asm	/^f0106d88:	89 f1                	mov    %esi,%ecx$/;"	l
f0106d8a	obj/kern/kernel.asm	/^f0106d8a:	d3 e2                	shl    %cl,%edx$/;"	d
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	39 c2                	cmp    %eax,%edx$/;"	l
f0106d8e	obj/kern/kernel.asm	/^f0106d8e:	73 eb                	jae    f0106d7b <__udivdi3+0xf7>$/;"	l
f0106d90	obj/kern/kernel.asm	/^f0106d90:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f0106d93	obj/kern/kernel.asm	/^f0106d93:	31 ff                	xor    %edi,%edi$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95:	e9 2b ff ff ff       	jmp    f0106cc5 <__udivdi3+0x41>$/;"	l
f0106d9a	obj/kern/kernel.asm	/^f0106d9a:	66 90                	xchg   %ax,%ax$/;"	l
f0106d9c	obj/kern/kernel.asm	/^f0106d9c:	31 f6                	xor    %esi,%esi$/;"	l
f0106d9e	obj/kern/kernel.asm	/^f0106d9e:	e9 22 ff ff ff       	jmp    f0106cc5 <__udivdi3+0x41>$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4 <__umoddi3>:$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4:	55                   	push   %ebp$/;"	l
f0106da5	obj/kern/kernel.asm	/^f0106da5:	57                   	push   %edi$/;"	l
f0106da6	obj/kern/kernel.asm	/^f0106da6:	56                   	push   %esi$/;"	l
f0106da7	obj/kern/kernel.asm	/^f0106da7:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106daa	obj/kern/kernel.asm	/^f0106daa:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0106dae	obj/kern/kernel.asm	/^f0106dae:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f0106db2	obj/kern/kernel.asm	/^f0106db2:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0106db6	obj/kern/kernel.asm	/^f0106db6:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106dbe	obj/kern/kernel.asm	/^f0106dbe:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f0106dc2	obj/kern/kernel.asm	/^f0106dc2:	89 c7                	mov    %eax,%edi$/;"	l
f0106dc4	obj/kern/kernel.asm	/^f0106dc4:	89 f2                	mov    %esi,%edx$/;"	l
f0106dc6	obj/kern/kernel.asm	/^f0106dc6:	85 ed                	test   %ebp,%ebp$/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	75 16                	jne    f0106de0 <__umoddi3+0x3c>$/;"	l
f0106dca	obj/kern/kernel.asm	/^f0106dca:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106dcc	obj/kern/kernel.asm	/^f0106dcc:	0f 86 a6 00 00 00    	jbe    f0106e78 <__umoddi3+0xd4>$/;"	l
f0106dd2	obj/kern/kernel.asm	/^f0106dd2:	f7 f1                	div    %ecx$/;"	l
f0106dd4	obj/kern/kernel.asm	/^f0106dd4:	89 d0                	mov    %edx,%eax$/;"	l
f0106dd6	obj/kern/kernel.asm	/^f0106dd6:	31 d2                	xor    %edx,%edx$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106ddb	obj/kern/kernel.asm	/^f0106ddb:	5e                   	pop    %esi$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	5f                   	pop    %edi$/;"	l
f0106ddd	obj/kern/kernel.asm	/^f0106ddd:	5d                   	pop    %ebp$/;"	l
f0106dde	obj/kern/kernel.asm	/^f0106dde:	c3                   	ret    $/;"	l
f0106ddf	obj/kern/kernel.asm	/^f0106ddf:	90                   	nop$/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106de2	obj/kern/kernel.asm	/^f0106de2:	0f 87 ac 00 00 00    	ja     f0106e94 <__umoddi3+0xf0>$/;"	l
f0106de8	obj/kern/kernel.asm	/^f0106de8:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0106dee	obj/kern/kernel.asm	/^f0106dee:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0106df2	obj/kern/kernel.asm	/^f0106df2:	0f 84 a8 00 00 00    	je     f0106ea0 <__umoddi3+0xfc>$/;"	l
f0106df8	obj/kern/kernel.asm	/^f0106df8:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0106e03	obj/kern/kernel.asm	/^f0106e03:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106e0b	obj/kern/kernel.asm	/^f0106e0b:	89 f9                	mov    %edi,%ecx$/;"	l
f0106e0d	obj/kern/kernel.asm	/^f0106e0d:	d3 e8                	shr    %cl,%eax$/;"	d
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	09 e8                	or     %ebp,%eax$/;"	l
f0106e11	obj/kern/kernel.asm	/^f0106e11:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0106e15	obj/kern/kernel.asm	/^f0106e15:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106e19	obj/kern/kernel.asm	/^f0106e19:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106e1d	obj/kern/kernel.asm	/^f0106e1d:	d3 e0                	shl    %cl,%eax$/;"	d
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	89 f2                	mov    %esi,%edx$/;"	l
f0106e25	obj/kern/kernel.asm	/^f0106e25:	d3 e2                	shl    %cl,%edx$/;"	d
f0106e27	obj/kern/kernel.asm	/^f0106e27:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106e2b	obj/kern/kernel.asm	/^f0106e2b:	d3 e0                	shl    %cl,%eax$/;"	d
f0106e2d	obj/kern/kernel.asm	/^f0106e2d:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106e35	obj/kern/kernel.asm	/^f0106e35:	89 f9                	mov    %edi,%ecx$/;"	l
f0106e37	obj/kern/kernel.asm	/^f0106e37:	d3 e8                	shr    %cl,%eax$/;"	d
f0106e39	obj/kern/kernel.asm	/^f0106e39:	09 d0                	or     %edx,%eax$/;"	l
f0106e3b	obj/kern/kernel.asm	/^f0106e3b:	d3 ee                	shr    %cl,%esi$/;"	d
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	89 f2                	mov    %esi,%edx$/;"	l
f0106e3f	obj/kern/kernel.asm	/^f0106e3f:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f0106e43	obj/kern/kernel.asm	/^f0106e43:	89 d6                	mov    %edx,%esi$/;"	l
f0106e45	obj/kern/kernel.asm	/^f0106e45:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106e49	obj/kern/kernel.asm	/^f0106e49:	89 c5                	mov    %eax,%ebp$/;"	l
f0106e4b	obj/kern/kernel.asm	/^f0106e4b:	89 d1                	mov    %edx,%ecx$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	39 d6                	cmp    %edx,%esi$/;"	l
f0106e4f	obj/kern/kernel.asm	/^f0106e4f:	72 67                	jb     f0106eb8 <__umoddi3+0x114>$/;"	l
f0106e51	obj/kern/kernel.asm	/^f0106e51:	74 75                	je     f0106ec8 <__umoddi3+0x124>$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f0106e57	obj/kern/kernel.asm	/^f0106e57:	29 e8                	sub    %ebp,%eax$/;"	l
f0106e59	obj/kern/kernel.asm	/^f0106e59:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106e5b	obj/kern/kernel.asm	/^f0106e5b:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	d3 e8                	shr    %cl,%eax$/;"	d
f0106e61	obj/kern/kernel.asm	/^f0106e61:	89 f2                	mov    %esi,%edx$/;"	l
f0106e63	obj/kern/kernel.asm	/^f0106e63:	89 f9                	mov    %edi,%ecx$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	d3 e2                	shl    %cl,%edx$/;"	d
f0106e67	obj/kern/kernel.asm	/^f0106e67:	09 d0                	or     %edx,%eax$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	89 f2                	mov    %esi,%edx$/;"	l
f0106e6b	obj/kern/kernel.asm	/^f0106e6b:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	d3 ea                	shr    %cl,%edx$/;"	d
f0106e71	obj/kern/kernel.asm	/^f0106e71:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	5e                   	pop    %esi$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	5f                   	pop    %edi$/;"	l
f0106e76	obj/kern/kernel.asm	/^f0106e76:	5d                   	pop    %ebp$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	c3                   	ret    $/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	85 c9                	test   %ecx,%ecx$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	75 0b                	jne    f0106e87 <__umoddi3+0xe3>$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106e81	obj/kern/kernel.asm	/^f0106e81:	31 d2                	xor    %edx,%edx$/;"	l
f0106e83	obj/kern/kernel.asm	/^f0106e83:	f7 f1                	div    %ecx$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	89 c1                	mov    %eax,%ecx$/;"	l
f0106e87	obj/kern/kernel.asm	/^f0106e87:	89 f0                	mov    %esi,%eax$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	31 d2                	xor    %edx,%edx$/;"	l
f0106e8b	obj/kern/kernel.asm	/^f0106e8b:	f7 f1                	div    %ecx$/;"	l
f0106e8d	obj/kern/kernel.asm	/^f0106e8d:	89 f8                	mov    %edi,%eax$/;"	l
f0106e8f	obj/kern/kernel.asm	/^f0106e8f:	e9 3e ff ff ff       	jmp    f0106dd2 <__umoddi3+0x2e>$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	89 f2                	mov    %esi,%edx$/;"	l
f0106e96	obj/kern/kernel.asm	/^f0106e96:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106e99	obj/kern/kernel.asm	/^f0106e99:	5e                   	pop    %esi$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	5f                   	pop    %edi$/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	5d                   	pop    %ebp$/;"	l
f0106e9c	obj/kern/kernel.asm	/^f0106e9c:	c3                   	ret    $/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106ea0	obj/kern/kernel.asm	/^f0106ea0:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	72 04                	jb     f0106ea8 <__umoddi3+0x104>$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	39 f9                	cmp    %edi,%ecx$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	77 06                	ja     f0106eae <__umoddi3+0x10a>$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	89 f2                	mov    %esi,%edx$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	29 cf                	sub    %ecx,%edi$/;"	l
f0106eac	obj/kern/kernel.asm	/^f0106eac:	19 ea                	sbb    %ebp,%edx$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	89 f8                	mov    %edi,%eax$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106eb3	obj/kern/kernel.asm	/^f0106eb3:	5e                   	pop    %esi$/;"	l
f0106eb4	obj/kern/kernel.asm	/^f0106eb4:	5f                   	pop    %edi$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	5d                   	pop    %ebp$/;"	l
f0106eb6	obj/kern/kernel.asm	/^f0106eb6:	c3                   	ret    $/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	90                   	nop$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	89 d1                	mov    %edx,%ecx$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	89 c5                	mov    %eax,%ebp$/;"	l
f0106ebc	obj/kern/kernel.asm	/^f0106ebc:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f0106ec0	obj/kern/kernel.asm	/^f0106ec0:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f0106ec4	obj/kern/kernel.asm	/^f0106ec4:	eb 8d                	jmp    f0106e53 <__umoddi3+0xaf>$/;"	l
f0106ec6	obj/kern/kernel.asm	/^f0106ec6:	66 90                	xchg   %ax,%ax$/;"	l
f0106ec8	obj/kern/kernel.asm	/^f0106ec8:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	72 ea                	jb     f0106eb8 <__umoddi3+0x114>$/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece:	89 f1                	mov    %esi,%ecx$/;"	l
f0106ed0	obj/kern/kernel.asm	/^f0106ed0:	eb 81                	jmp    f0106e53 <__umoddi3+0xaf>$/;"	l
fail	grade-functions.sh	/^fail () {$/;"	f
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gdte_backup	obj/user/evilhello2.asm	/^    gdte_backup = *(gdte_ptr = &gdt[GD_EVIL >> 3]);$/;"	d
gdte_backup	user/evilhello2.c	/^struct Segdesc *gdte_ptr,gdte_backup;$/;"	v	typeref:struct:
gdte_ptr	user/evilhello2.c	/^struct Segdesc *gdte_ptr,gdte_backup;$/;"	v	typeref:struct:Segdesc
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sbrktest.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interval	obj/kern/kernel.asm	/^		interval = 0;$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sbrktest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sbrktest.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_c	kern/monitor.c	/^mon_c(int argc, char **argv, struct Trapframe *tf){$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_si	kern/monitor.c	/^mon_si(int argc, char **argv, struct Trapframe *tf){$/;"	f
mon_time	kern/monitor.c	/^mon_time(int argc, char **argv, struct Trapframe *tf){$/;"	f
mon_x	kern/monitor.c	/^mon_x(int argc, char **argv, struct Trapframe *tf){$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/badsegment.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/badsegment.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/breakpoint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/breakpoint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/divzero.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/divzero.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/dumbfork.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/dumbfork.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/fairness.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/fairness.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultalloc.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultalloc.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultallocbad.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultallocbad.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultbadhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultbadhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultdie.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultdie.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultevilhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultevilhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultnostack.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultnostack.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultread.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultread.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultreadkernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultreadkernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultregs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultregs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwrite.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwrite.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwritekernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwritekernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/forktree.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/forktree.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/hello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/hello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/idle.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/idle.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpong.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpong.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpongs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpongs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/primes.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/primes.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/sbrktest.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/sbrktest.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/softint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/softint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/spin.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/spin.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/stresssched.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/stresssched.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/testbss.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/testbss.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/yield.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/yield.asm	/^  n0 = nn.s.low;$/;"	d
n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/badsegment.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/badsegment.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/breakpoint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/breakpoint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/divzero.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/divzero.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/dumbfork.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/dumbfork.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/fairness.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/fairness.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultalloc.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultalloc.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultallocbad.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultallocbad.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultbadhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultbadhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultdie.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultdie.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultevilhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultevilhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultnostack.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultnostack.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultread.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultread.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultreadkernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultreadkernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultregs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultregs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwrite.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwrite.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwritekernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwritekernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/forktree.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/forktree.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/hello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/hello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/idle.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/idle.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpong.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpong.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpongs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpongs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/primes.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/primes.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/sbrktest.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/sbrktest.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/softint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/softint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/spin.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/spin.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/stresssched.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/stresssched.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/testbss.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/testbss.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/yield.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/yield.asm	/^  n1 = nn.s.high;$/;"	d
n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/badsegment.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/breakpoint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/divzero.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/dumbfork.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/fairness.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultalloc.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultallocbad.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultbadhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultdie.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultevilhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultnostack.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultread.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultreadkernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultregs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwrite.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwritekernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/forktree.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/hello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/idle.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpong.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpongs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/primes.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/sbrktest.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/softint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/spin.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/stresssched.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/testbss.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/yield.asm	/^	      n2 = n1 >> b;$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^    nextfree = KADDR(PADDR(ROUNDUP(nextfree+n, PGSIZE)));$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sbrktest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sbrktest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/evilhello2.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sbrktest.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
overflow_me	kern/monitor.c	/^overflow_me(void)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sbrktest.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^    padc = ' ';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^    padc = ' ';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^    padc = ' ';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^    padc = ' ';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^    padc = ' ';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^    padc = ' ';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^    padc = ' ';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^    padc = ' ';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello2.asm	/^    padc = ' ';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^    padc = ' ';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^    padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^    padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^    padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^    padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^    padc = ' ';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^    padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^    padc = ' ';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '-';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '0';$/;"	d
padc	obj/user/sbrktest.asm	/^    padc = ' ';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^    padc = ' ';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^    padc = ' ';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^    padc = ' ';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^    padc = ' ';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^    padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc_npages	kern/pmap.c	/^page_alloc_npages(int alloc_flags, int n)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = pp;$/;"	d
page_free_npages	kern/pmap.c	/^page_free_npages(struct Page *pp, int n)$/;"	f
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_realloc_npages	kern/pmap.c	/^page_realloc_npages(struct Page *pp, int old_n, int new_n)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^  pages = (struct Page * ) boot_alloc(npages * sizeof (struct Page)); \/\/[TODO memset?]$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^  ph = (struct Proghdr *) ((uint8_t *) elf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precedeflag	obj/kern/kernel.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/kern/kernel.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/badsegment.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/badsegment.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/breakpoint.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/breakpoint.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/buggyhello.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/buggyhello.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/buggyhello2.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/buggyhello2.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/divzero.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/divzero.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/dumbfork.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/dumbfork.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/evilhello.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/evilhello.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/evilhello2.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/evilhello2.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/fairness.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/fairness.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultalloc.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultalloc.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultallocbad.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultallocbad.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultbadhandler.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultbadhandler.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultdie.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultdie.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultevilhandler.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultevilhandler.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultnostack.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultnostack.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultread.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultread.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultreadkernel.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultreadkernel.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultregs.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultregs.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultwrite.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultwrite.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/faultwritekernel.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/faultwritekernel.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/forktree.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/forktree.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/hello.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/hello.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/idle.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/idle.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/pingpong.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/pingpong.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/pingpongs.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/pingpongs.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/primes.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/primes.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/sbrktest.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/sbrktest.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/softint.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/softint.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/spin.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/spin.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/stresssched.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/stresssched.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/testbss.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/testbss.asm	/^		precedeflag = 0;$/;"	d
precedeflag	obj/user/yield.asm	/^			precedeflag = 1;$/;"	d
precedeflag	obj/user/yield.asm	/^		precedeflag = 0;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sbrktest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sbrktest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sbrktest.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sbrktest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/badsegment.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/breakpoint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/divzero.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/dumbfork.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/fairness.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultalloc.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultallocbad.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultbadhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultdie.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultevilhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultnostack.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultread.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultreadkernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultregs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwrite.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwritekernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/forktree.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/hello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/idle.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpong.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpongs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/primes.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/sbrktest.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/softint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/spin.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/stresssched.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/testbss.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/yield.asm	/^		  q0 = 1;$/;"	d
q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/badsegment.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/breakpoint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/divzero.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/dumbfork.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/fairness.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultalloc.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultallocbad.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultbadhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultdie.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultevilhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultnostack.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultread.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultreadkernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultregs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwrite.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwritekernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/forktree.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/hello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/idle.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpong.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpongs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/primes.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/sbrktest.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/softint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/spin.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/stresssched.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/testbss.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/yield.asm	/^	      q1 = 0;$/;"	d
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sbrktest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	7;"	d
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pretaddr	kern/monitor.c	/^read_pretaddr() {$/;"	f	file:
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sbrktest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sbrktest.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f
ring0_call_func	obj/user/evilhello2.asm	/^    ring0_call_func = fun_ptr;\/\/ DONT MOVE THIS BEFORE SYS_MAP_KERNEL_PAGE$/;"	d
ring0_call_func	user/evilhello2.c	/^static void (*ring0_call_func)(void) = NULL;$/;"	v	file:
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runexpect	grade-functions.sh	/^runexpect () {$/;"	f
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
runtest2	grade-functions.sh	/^runtest2 () {$/;"	f
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sbrktest.asm	/^	s = (char *) start;$/;"	d
s	obj/user/sbrktest.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
sfork	lib/fork.c	/^sfork(void)$/;"	f
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sbrktest.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	37;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock_test	kern/init.c	/^void spinlock_test()$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/user/sbrktest.asm	/^	start = sys_sbrk(0);$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_overflow	kern/monitor.c	/^start_overflow(void)$/;"	f
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static volatile int test_ctr = 0;$/;"	l
static	obj/user/badsegment.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static __inline void$/;"	l
static	obj/user/evilhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello2.asm	/^static long long$/;"	l
static	obj/user/evilhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello2.asm	/^static void (*ring0_call_func)(void) = NULL;$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sbrktest.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/sbrktest.asm	/^static inline int32_t$/;"	l
static	obj/user/sbrktest.asm	/^static long long$/;"	l
static	obj/user/sbrktest.asm	/^static unsigned long long$/;"	l
static	obj/user/sbrktest.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_sbrk	kern/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f	file:
sys_sbrk	lib/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscall_wrapper	kern/syscall.c	/^syscall_wrapper(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5, struct Trapframe * tf)$/;"	f
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
sysenter_handler	obj/kern/kernel.asm	/^sysenter_handler:$/;"	l
target_pt	obj/kern/kernel.asm	/^  target_pt = KADDR(PTE_ADDR(*target_pde));$/;"	d
test_ctr	kern/init.c	/^static volatile int test_ctr = 0;$/;"	v	file:
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	37;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello2.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sbrktest.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^  thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sbrktest.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_gdt	user/evilhello2.c	/^char user_gdt[PGSIZE*2];$/;"	v
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^      user_mem_check_addr = va_iterator;$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void spinlock_test()$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sbrktest.asm	/^void *$/;"	l
void	obj/user/sbrktest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sbrktest.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sbrktest.asm	/^				width = 0;$/;"	d
width	obj/user/sbrktest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrmsr	inc/x86.h	12;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v

!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOCATE_SIZE	obj/user/sbrktest.asm	/^#define ALLOCATE_SIZE 4096$/;"	d
ALLOCATE_SIZE	user/sbrktest.c	3;"	d	file:
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sbrktest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon6
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon6
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	13;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sbrktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	23;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	30;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon2
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon2
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon2
ENV_PASTE3	kern/env.h	28;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon2
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon2
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	122;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	32;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	93;"	d
O_CREAT	inc/lib.h	95;"	d
O_EXCL	inc/lib.h	97;"	d
O_MKDIR	inc/lib.h	98;"	d
O_RDONLY	inc/lib.h	90;"	d
O_RDWR	inc/lib.h	92;"	d
O_TRUNC	inc/lib.h	96;"	d
O_WRONLY	inc/lib.h	91;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 21 20:56:15 EDT 2013$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	135;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	79;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	conf/env.mk	/^QEMU=\/home\/oslab\/qemu-1.5.2\/dist\/bin\/qemu-system-i386$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	inc/types.h	63;"	d
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STRING_SIZE	obj/user/sbrktest.asm	/^#define STRING_SIZE	  64$/;"	d
STRING_SIZE	user/sbrktest.c	4;"	d	file:
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_map_kernel_page	inc/syscall.h	/^	SYS_map_kernel_page,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_sbrk	inc/syscall.h	/^	SYS_sbrk,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/badsegment.asm	/^UDWtype$/;"	l
UDWtype	obj/user/breakpoint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/divzero.asm	/^UDWtype$/;"	l
UDWtype	obj/user/dumbfork.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/fairness.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultalloc.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultallocbad.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultbadhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultdie.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultevilhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultnostack.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultread.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultreadkernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultregs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwrite.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwritekernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/forktree.asm	/^UDWtype$/;"	l
UDWtype	obj/user/hello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/idle.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpong.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpongs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/primes.asm	/^UDWtype$/;"	l
UDWtype	obj/user/sbrktest.asm	/^UDWtype$/;"	l
UDWtype	obj/user/softint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/spin.asm	/^UDWtype$/;"	l
UDWtype	obj/user/stresssched.asm	/^UDWtype$/;"	l
UDWtype	obj/user/testbss.asm	/^UDWtype$/;"	l
UDWtype	obj/user/yield.asm	/^UDWtype$/;"	l
UENVS	inc/memlayout.h	114;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UPAGES	inc/memlayout.h	112;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	121;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/badsegment.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/breakpoint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/divzero.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/dumbfork.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/fairness.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultalloc.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultallocbad.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultbadhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultdie.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultevilhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultnostack.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultread.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultreadkernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultregs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwrite.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwritekernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/forktree.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/hello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/idle.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpong.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpongs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/primes.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/sbrktest.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/softint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/spin.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/stresssched.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/testbss.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/yield.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/badsegment.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/breakpoint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/divzero.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/dumbfork.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/fairness.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultalloc.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultallocbad.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultbadhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultdie.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultevilhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultnostack.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultread.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultreadkernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultregs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwrite.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwritekernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/forktree.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/hello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/idle.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpong.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpongs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/primes.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/sbrktest.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/softint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/spin.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/stresssched.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/testbss.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/yield.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/badsegment.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/breakpoint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/divzero.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/dumbfork.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/fairness.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultalloc.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultallocbad.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultbadhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultdie.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultevilhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultnostack.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultread.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultreadkernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultregs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwrite.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwritekernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/forktree.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/hello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/idle.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpong.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpongs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/primes.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/sbrktest.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/softint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/spin.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/stresssched.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/testbss.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/yield.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sbrktest.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
alloc_page	obj/kern/kernel.asm	/^		alloc_page = page_free_list;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sbrktest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sbrktest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sbrktest.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argv0	lib/panic.c	/^const char *argv0;$/;"	v
assert	inc/assert.h	14;"	d
atomic_return_and_add	kern/spinlock.c	/^unsigned atomic_return_and_add(unsigned *addr, unsigned value)$/;"	f
b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/badsegment.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/breakpoint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/divzero.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/dumbfork.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/fairness.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultalloc.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultallocbad.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultbadhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultdie.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultevilhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultnostack.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultread.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultreadkernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultregs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwrite.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwritekernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/forktree.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/hello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/idle.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpong.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpongs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/primes.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/sbrktest.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/softint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/spin.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/stresssched.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/testbss.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/yield.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 16;$/;"	d
base	obj/user/sbrktest.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sbrktest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef int bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sbrktest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_fun_ptr	user/evilhello2.c	/^void call_fun_ptr()$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sbrktest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sbrktest.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab2.sh	/^check () {$/;"	f
check_continuous	kern/pmap.c	/^check_continuous(struct Page *pp, int num_page)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_n_pages	kern/pmap.c	/^check_n_pages(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_realloc_npages	kern/pmap.c	/^check_realloc_npages(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
check_va2pa_large	kern/pmap.c	/^check_va2pa_large(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
chunk_list	kern/pmap.c	/^static struct Page *chunk_list;$/;"	v	typeref:struct:Page	file:
chunk_list	obj/kern/kernel.asm	/^	chunk_list = NULL;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sbrktest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sbrktest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sbrktest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sbrktest.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/badsegment.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/badsegment.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/badsegment.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/breakpoint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/breakpoint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/breakpoint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/divzero.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/divzero.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/divzero.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/dumbfork.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/dumbfork.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/dumbfork.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/fairness.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/fairness.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/fairness.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultalloc.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultalloc.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultalloc.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultallocbad.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultallocbad.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultallocbad.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultbadhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultdie.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultdie.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultdie.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultevilhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultnostack.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultnostack.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultnostack.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultread.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultread.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultread.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultreadkernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultregs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultregs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultregs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwrite.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwrite.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwrite.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwritekernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/forktree.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/forktree.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/forktree.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/hello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/hello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/hello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/idle.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/idle.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/idle.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpong.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpong.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpong.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpongs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpongs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpongs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/primes.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/primes.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/primes.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/sbrktest.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/sbrktest.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/sbrktest.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/softint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/softint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/softint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/spin.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/spin.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/spin.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/stresssched.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/stresssched.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/stresssched.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/testbss.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/testbss.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/testbss.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/yield.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/yield.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/yield.asm	/^  d0 = dd.s.low;$/;"	d
d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/badsegment.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/badsegment.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/breakpoint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/breakpoint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/divzero.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/divzero.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/dumbfork.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/dumbfork.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/fairness.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/fairness.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultalloc.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultalloc.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultallocbad.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultallocbad.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultbadhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultbadhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultdie.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultdie.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultevilhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultevilhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultnostack.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultnostack.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultread.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultread.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultreadkernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultreadkernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultregs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultregs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwrite.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwrite.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwritekernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwritekernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/forktree.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/forktree.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/hello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/hello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/idle.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/idle.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpong.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpong.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpongs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpongs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/primes.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/primes.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/sbrktest.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/sbrktest.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/softint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/softint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/spin.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/spin.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/stresssched.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/stresssched.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/testbss.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/testbss.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/yield.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/yield.asm	/^  d1 = dd.s.high;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/evilhello2.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sbrktest.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sbrktest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end	obj/user/sbrktest.asm	/^	end = sys_sbrk(ALLOCATE_SIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	obj/user/evilhello2.asm	/^	entry = gdt + index;$/;"	d
entry	user/evilhello2.c	/^struct Segdesc *entry;$/;"	v	typeref:struct:Segdesc
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_heap_bottom	inc/env.h	/^	uintptr_t env_heap_bottom;$/;"	m	struct:Env
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sbrktest.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = boot_alloc(NENV * env_size);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elf->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sbrktest.asm	/^				err = -err;$/;"	d
err	obj/user/sbrktest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
evil	user/evilhello2.c	/^void evil()$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 60 12 00       	mov    $0x126000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 60 12 f0       	mov    $0xf0126000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 e1 00 00 00       	call   f010011f <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 00 1f 34 f0 00 	cmpl   $0x0,0xf0341f00$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 00 1f 34 f0    	mov    %esi,0xf0341f00$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 9c 5f 00 00       	call   f0106000 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 e0 66 10 f0 	movl   $0xf01066e0,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 56 3f 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 17 3f 00 00       	call   f0103fa5 <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 a7 77 10 f0 	movl   $0xf01077a7,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 3e 3f 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 21 0a 00 00       	call   f0100ac7 <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 a6 67 10 f0 	movl   $0xf01067a6,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 19 5f 00 00       	call   f0106000 <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 b2 67 10 f0 	movl   $0xf01067b2,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 e1 3e 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 1f 5f 00 00       	call   f010601b <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 f0 34 00 00       	call   f01035f1 <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 ee 3e 00 00       	call   f0103ff4 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 f5 5e 00 00       	call   f0106000 <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 20 34 f0    	add    $0xf0342020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	eb fe                	jmp    f010011d <mp_main+0x75>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f <i386_init>:$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	55                   	push   %ebp$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	89 e5                	mov    %esp,%ebp$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	53                   	push   %ebx$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	b8 04 30 38 f0       	mov    $0xf0383004,%eax$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	2d 5f 04 34 f0       	sub    $0xf034045f,%eax$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	00 $/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	c7 04 24 5f 04 34 f0 	movl   $0xf034045f,(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	e8 57 58 00 00       	call   f010599f <memset>$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	e8 51 06 00 00       	call   f010079e <cons_init>$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	00 $/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	c7 04 24 c8 67 10 f0 	movl   $0xf01067c8,(%esp)$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	e8 77 3e 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	e8 e4 14 00 00       	call   f010164a <mem_init>$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	e8 b0 34 00 00       	call   f010361b <env_init>$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 e1 3e 00 00       	call   f0104051 <trap_init>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 9d 5b 00 00       	call   f0105d12 <mp_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 a1 5e 00 00       	call   f010601b <lapic_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 a5 3d 00 00       	call   f0103f24 <pic_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	83 3d 08 1f 34 f0 07 	cmpl   $0x7,0xf0341f08$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	77 24                	ja     f01001ac <i386_init+0x8d>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	00 $/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	f0 $/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	00 $/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	c7 04 24 a6 67 10 f0 	movl   $0xf01067a6,(%esp)$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	e8 94 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	b8 2a 5c 10 f0       	mov    $0xf0105c2a,%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	2d b0 5b 10 f0       	sub    $0xf0105bb0,%eax$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	c7 44 24 04 b0 5b 10 	movl   $0xf0105bb0,0x4(%esp)$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	f0 $/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	e8 1b 58 00 00       	call   f01059e9 <memmove>$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	a1 c4 23 34 f0       	mov    0xf03423c4,%eax$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	29 c2                	sub    %eax,%edx$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	3d 20 20 34 f0       	cmp    $0xf0342020,%eax$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	0f 86 94 00 00 00    	jbe    f0100285 <i386_init+0x166>$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	bb 20 20 34 f0       	mov    $0xf0342020,%ebx$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	e8 05 5e 00 00       	call   f0106000 <cpunum>$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	29 c2                	sub    %eax,%edx$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	74 50                	je     f0100262 <i386_init+0x143>$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	89 d8                	mov    %ebx,%eax$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	2d 20 20 34 f0       	sub    $0xf0342020,%eax$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	8d 14 d0             	lea    (%eax,%edx,8),%edx$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	89 d1                	mov    %edx,%ecx$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	29 d1                	sub    %edx,%ecx$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	89 d1                	mov    %edx,%ecx$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	c1 e1 0e             	shl    $0xe,%ecx$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	29 d1                	sub    %edx,%ecx$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	8d 44 90 01          	lea    0x1(%eax,%edx,4),%eax$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	05 00 30 34 f0       	add    $0xf0343000,%eax$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	a3 04 1f 34 f0       	mov    %eax,0xf0341f04$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	00 $/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	e8 02 5f 00 00       	call   f010615c <lapic_startap>$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	75 f8                	jne    f010025a <i386_init+0x13b>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	a1 c4 23 34 f0       	mov    0xf03423c4,%eax$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	29 c2                	sub    %eax,%edx$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	0f 82 71 ff ff ff    	jb     f01001f6 <i386_init+0xd7>$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	00 $/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	c7 44 24 04 c2 0b 01 	movl   $0x10bc2,0x4(%esp)$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	00 $/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	c7 04 24 8f 35 22 f0 	movl   $0xf022358f,(%esp)$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	e8 2c 36 00 00       	call   f01038d2 <env_create>$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	4b                   	dec    %ebx$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	75 e1                	jne    f010028a <i386_init+0x16b>$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	00 $/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	c7 44 24 04 85 0c 01 	movl   $0x10c85,0x4(%esp)$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	00 $/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	c7 04 24 da f7 32 f0 	movl   $0xf032f7da,(%esp)$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	e8 0d 36 00 00       	call   f01038d2 <env_create>$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	e8 d6 46 00 00       	call   f01049a0 <sched_yield>$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca <spinlock_test>:$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	55                   	push   %ebp$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	56                   	push   %esi$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	53                   	push   %ebx$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	e8 22 5d 00 00       	call   f0106000 <cpunum>$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	85 c0                	test   %eax,%eax$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	75 10                	jne    f01002f2 <spinlock_test+0x28>$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	7e 0c                	jle    f01002fe <spinlock_test+0x34>$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	bb 64 00 00 00       	mov    $0x64,%ebx$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	be 10 27 00 00       	mov    $0x2710,%esi$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	eb 14                	jmp    f0100312 <spinlock_test+0x48>$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	f3 90                	pause  $/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	7e ee                	jle    f01002fe <spinlock_test+0x34>$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	eb e0                	jmp    f01002f2 <spinlock_test+0x28>$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	c7 04 24 a0 83 12 f0 	movl   $0xf01283a0,(%esp)$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	e8 89 5f 00 00       	call   f01062a7 <spin_lock>$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	a1 00 10 34 f0       	mov    0xf0341000,%eax$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	99                   	cltd   $/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	f7 fe                	idiv   %esi$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	85 d2                	test   %edx,%edx$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	74 1c                	je     f0100346 <spinlock_test+0x7c>$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	c7 44 24 08 4c 67 10 	movl   $0xf010674c,0x8(%esp)$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	f0 $/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	c7 44 24 04 24 00 00 	movl   $0x24,0x4(%esp)$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	00 $/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	c7 04 24 a6 67 10 f0 	movl   $0xf01067a6,(%esp)$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	e8 fa fc ff ff       	call   f0100040 <_panic>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	7f 1b                	jg     f0100378 <spinlock_test+0xae>$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	a1 00 10 34 f0       	mov    0xf0341000,%eax$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	40                   	inc    %eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	a3 00 10 34 f0       	mov    %eax,0xf0341000$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	7e e5                	jle    f010035d <spinlock_test+0x93>$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	c7 04 24 a0 83 12 f0 	movl   $0xf01283a0,(%esp)$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	e8 fa 5f 00 00       	call   f010637e <spin_unlock>$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	f3 90                	pause  $/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	4b                   	dec    %ebx$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	75 89                	jne    f0100312 <spinlock_test+0x48>$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	c7 04 24 a0 83 12 f0 	movl   $0xf01283a0,(%esp)$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	e8 12 5f 00 00       	call   f01062a7 <spin_lock>$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	e8 66 5c 00 00       	call   f0106000 <cpunum>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	c7 04 24 80 67 10 f0 	movl   $0xf0106780,(%esp)$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	e8 2e 3c 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	c7 04 24 a0 83 12 f0 	movl   $0xf01283a0,(%esp)$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	e8 c8 5f 00 00       	call   f010637e <spin_unlock>$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	f3 90                	pause  $/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	83 c4 20             	add    $0x20,%esp$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	5b                   	pop    %ebx$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	5e                   	pop    %esi$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	5d                   	pop    %ebp$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	c3                   	ret    $/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf <_warn>:$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	55                   	push   %ebp$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	53                   	push   %ebx$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	c7 04 24 e3 67 10 f0 	movl   $0xf01067e3,(%esp)$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	e8 f5 3b 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	e8 b3 3b 00 00       	call   f0103fa5 <vcprintf>$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	c7 04 24 a7 77 10 f0 	movl   $0xf01077a7,(%esp)$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	e8 da 3b 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	5b                   	pop    %ebx$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	5d                   	pop    %ebp$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	c3                   	ret    $/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404 <delay>:$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	55                   	push   %ebp$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	89 e5                	mov    %esp,%ebp$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	ec                   	in     (%dx),%al$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	ec                   	in     (%dx),%al$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	ec                   	in     (%dx),%al$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	ec                   	in     (%dx),%al$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	5d                   	pop    %ebp$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	c3                   	ret    $/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412 <serial_proc_data>:$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	55                   	push   %ebp$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	89 e5                	mov    %esp,%ebp$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	ec                   	in     (%dx),%al$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	a8 01                	test   $0x1,%al$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	74 08                	je     f0100427 <serial_proc_data+0x15>$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	ec                   	in     (%dx),%al$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	eb 05                	jmp    f010042c <serial_proc_data+0x1a>$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	5d                   	pop    %ebp$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	c3                   	ret    $/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e <cons_intr>:$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	55                   	push   %ebp$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	53                   	push   %ebx$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	89 c3                	mov    %eax,%ebx$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	eb 29                	jmp    f0100462 <cons_intr+0x34>$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	85 c0                	test   %eax,%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	74 25                	je     f0100462 <cons_intr+0x34>$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	8b 15 44 12 34 f0    	mov    0xf0341244,%edx$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	88 82 40 10 34 f0    	mov    %al,-0xfcbefc0(%edx)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	a3 44 12 34 f0       	mov    %eax,0xf0341244$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	75 0a                	jne    f0100462 <cons_intr+0x34>$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	c7 05 44 12 34 f0 00 	movl   $0x0,0xf0341244$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	00 00 00 $/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ff d3                	call   *%ebx$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	75 d0                	jne    f0100439 <cons_intr+0xb>$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	83 c4 04             	add    $0x4,%esp$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	5b                   	pop    %ebx$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	5d                   	pop    %ebp$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	c3                   	ret    $/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f <cons_putc>:$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	55                   	push   %ebp$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	89 e5                	mov    %esp,%ebp$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	57                   	push   %edi$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	56                   	push   %esi$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	53                   	push   %ebx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	89 c6                	mov    %eax,%esi$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ec                   	in     (%dx),%al$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	a8 20                	test   $0x20,%al$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	75 19                	jne    f010049d <cons_putc+0x2e>$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	e8 71 ff ff ff       	call   f0100404 <delay>$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	89 fa                	mov    %edi,%edx$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	ec                   	in     (%dx),%al$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	a8 20                	test   $0x20,%al$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	75 03                	jne    f010049d <cons_putc+0x2e>$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	4b                   	dec    %ebx$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	75 f1                	jne    f010048e <cons_putc+0x1f>$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	89 f7                	mov    %esi,%edi$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	89 f0                	mov    %esi,%eax$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	ee                   	out    %al,(%dx)$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	b2 79                	mov    $0x79,%dl$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	ec                   	in     (%dx),%al$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	84 c0                	test   %al,%al$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	78 17                	js     f01004c5 <cons_putc+0x56>$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	e8 4c ff ff ff       	call   f0100404 <delay>$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	ec                   	in     (%dx),%al$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	84 c0                	test   %al,%al$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	78 03                	js     f01004c5 <cons_putc+0x56>$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	4b                   	dec    %ebx$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	75 ee                	jne    f01004b3 <cons_putc+0x44>$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	89 f8                	mov    %edi,%eax$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	ee                   	out    %al,(%dx)$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	b0 0d                	mov    $0xd,%al$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	ee                   	out    %al,(%dx)$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	b0 08                	mov    $0x8,%al$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	ee                   	out    %al,(%dx)$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	75 06                	jne    f01004e3 <cons_putc+0x74>$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	89 f0                	mov    %esi,%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004ed	obj/kern/kernel.asm	/^f01004ed:	74 78                	je     f0100567 <cons_putc+0xf8>$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	7f 0b                	jg     f01004ff <cons_putc+0x90>$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	0f 85 9e 00 00 00    	jne    f010059b <cons_putc+0x12c>$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	eb 10                	jmp    f010050f <cons_putc+0xa0>$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	74 39                	je     f010053d <cons_putc+0xce>$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	0f 85 8e 00 00 00    	jne    f010059b <cons_putc+0x12c>$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	eb 36                	jmp    f0100545 <cons_putc+0xd6>$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	66 a1 54 12 34 f0    	mov    0xf0341254,%ax$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	66 85 c0             	test   %ax,%ax$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	0f 84 e2 00 00 00    	je     f0100600 <cons_putc+0x191>$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	48                   	dec    %eax$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	66 a3 54 12 34 f0    	mov    %ax,0xf0341254$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	83 ce 20             	or     $0x20,%esi$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	8b 15 50 12 34 f0    	mov    0xf0341250,%edx$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	eb 78                	jmp    f01005b5 <cons_putc+0x146>$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	66 83 05 54 12 34 f0 	addw   $0x50,0xf0341254$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	50 $/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	66 8b 0d 54 12 34 f0 	mov    0xf0341254,%cx$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	89 c8                	mov    %ecx,%eax$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	66 f7 f3             	div    %bx$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	66 29 d1             	sub    %dx,%cx$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	66 89 0d 54 12 34 f0 	mov    %cx,0xf0341254$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	eb 4e                	jmp    f01005b5 <cons_putc+0x146>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	e8 fe fe ff ff       	call   f010046f <cons_putc>$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	e8 f4 fe ff ff       	call   f010046f <cons_putc>$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	e8 ea fe ff ff       	call   f010046f <cons_putc>$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	e8 e0 fe ff ff       	call   f010046f <cons_putc>$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	e8 d6 fe ff ff       	call   f010046f <cons_putc>$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	eb 1a                	jmp    f01005b5 <cons_putc+0x146>$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	66 a1 54 12 34 f0    	mov    0xf0341254,%ax$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	8b 15 50 12 34 f0    	mov    0xf0341250,%edx$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	40                   	inc    %eax$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	66 a3 54 12 34 f0    	mov    %ax,0xf0341254$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	66 81 3d 54 12 34 f0 	cmpw   $0x7cf,0xf0341254$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	cf 07 $/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	76 40                	jbe    f0100600 <cons_putc+0x191>$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	a1 50 12 34 f0       	mov    0xf0341250,%eax$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	00 $/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	e8 0a 54 00 00       	call   f01059e9 <memmove>$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	8b 15 50 12 34 f0    	mov    0xf0341250,%edx$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	40                   	inc    %eax$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	75 f2                	jne    f01005ea <cons_putc+0x17b>$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	66 83 2d 54 12 34 f0 	subw   $0x50,0xf0341254$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	50 $/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	8b 0d 4c 12 34 f0    	mov    0xf034124c,%ecx$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	b0 0e                	mov    $0xe,%al$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	89 ca                	mov    %ecx,%edx$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	ee                   	out    %al,(%dx)$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	66 8b 35 54 12 34 f0 	mov    0xf0341254,%si$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	89 f0                	mov    %esi,%eax$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	89 da                	mov    %ebx,%edx$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	ee                   	out    %al,(%dx)$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	b0 0f                	mov    $0xf,%al$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	89 ca                	mov    %ecx,%edx$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	ee                   	out    %al,(%dx)$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	89 f0                	mov    %esi,%eax$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	89 da                	mov    %ebx,%edx$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	ee                   	out    %al,(%dx)$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	5b                   	pop    %ebx$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	5e                   	pop    %esi$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	5f                   	pop    %edi$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	5d                   	pop    %ebp$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	c3                   	ret    $/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630 <kbd_proc_data>:$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	55                   	push   %ebp$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	89 e5                	mov    %esp,%ebp$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	53                   	push   %ebx$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	ec                   	in     (%dx),%al$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	a8 01                	test   $0x1,%al$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	0f 84 d8 00 00 00    	je     f010071d <kbd_proc_data+0xed>$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	b2 60                	mov    $0x60,%dl$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	ec                   	in     (%dx),%al$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	88 c2                	mov    %al,%dl$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	3c e0                	cmp    $0xe0,%al$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	75 11                	jne    f010065f <kbd_proc_data+0x2f>$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	83 0d 48 12 34 f0 40 	orl    $0x40,0xf0341248$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	e9 c3 00 00 00       	jmp    f0100722 <kbd_proc_data+0xf2>$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	84 c0                	test   %al,%al$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	79 33                	jns    f0100696 <kbd_proc_data+0x66>$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	8b 0d 48 12 34 f0    	mov    0xf0341248,%ecx$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	75 05                	jne    f0100673 <kbd_proc_data+0x43>$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	88 c2                	mov    %al,%dl$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	8a 82 40 68 10 f0    	mov    -0xfef97c0(%edx),%al$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	f7 d0                	not    %eax$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	21 c1                	and    %eax,%ecx$/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	89 0d 48 12 34 f0    	mov    %ecx,0xf0341248$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	e9 8c 00 00 00       	jmp    f0100722 <kbd_proc_data+0xf2>$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	8b 0d 48 12 34 f0    	mov    0xf0341248,%ecx$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	74 0e                	je     f01006af <kbd_proc_data+0x7f>$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	88 c2                	mov    %al,%dl$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	89 0d 48 12 34 f0    	mov    %ecx,0xf0341248$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	0f b6 82 40 68 10 f0 	movzbl -0xfef97c0(%edx),%eax$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	0b 05 48 12 34 f0    	or     0xf0341248,%eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	0f b6 8a 40 69 10 f0 	movzbl -0xfef96c0(%edx),%ecx$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	31 c8                	xor    %ecx,%eax$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	a3 48 12 34 f0       	mov    %eax,0xf0341248$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	8b 0c 8d 40 6a 10 f0 	mov    -0xfef95c0(,%ecx,4),%ecx$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	a8 08                	test   $0x8,%al$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	74 18                	je     f01006f9 <kbd_proc_data+0xc9>$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	77 05                	ja     f01006ee <kbd_proc_data+0xbe>$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	eb 0b                	jmp    f01006f9 <kbd_proc_data+0xc9>$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	77 03                	ja     f01006f9 <kbd_proc_data+0xc9>$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	f7 d0                	not    %eax$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	a8 06                	test   $0x6,%al$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	75 23                	jne    f0100722 <kbd_proc_data+0xf2>$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	75 1b                	jne    f0100722 <kbd_proc_data+0xf2>$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	c7 04 24 fd 67 10 f0 	movl   $0xf01067fd,(%esp)$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	e8 c5 38 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	b0 03                	mov    $0x3,%al$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	ee                   	out    %al,(%dx)$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	eb 05                	jmp    f0100722 <kbd_proc_data+0xf2>$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	89 d8                	mov    %ebx,%eax$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	5b                   	pop    %ebx$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	5d                   	pop    %ebp$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	c3                   	ret    $/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a <serial_intr>:$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	55                   	push   %ebp$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	89 e5                	mov    %esp,%ebp$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	83 3d 20 10 34 f0 00 	cmpl   $0x0,0xf0341020$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	74 0a                	je     f0100743 <serial_intr+0x19>$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	b8 12 04 10 f0       	mov    $0xf0100412,%eax$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	e8 eb fc ff ff       	call   f010042e <cons_intr>$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	c9                   	leave  $/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	c3                   	ret    $/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745 <kbd_intr>:$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	55                   	push   %ebp$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	89 e5                	mov    %esp,%ebp$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	b8 30 06 10 f0       	mov    $0xf0100630,%eax$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	e8 d9 fc ff ff       	call   f010042e <cons_intr>$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	c9                   	leave  $/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	c3                   	ret    $/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757 <cons_getc>:$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	55                   	push   %ebp$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	89 e5                	mov    %esp,%ebp$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	e8 c8 ff ff ff       	call   f010072a <serial_intr>$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	e8 de ff ff ff       	call   f0100745 <kbd_intr>$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	8b 15 40 12 34 f0    	mov    0xf0341240,%edx$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	3b 15 44 12 34 f0    	cmp    0xf0341244,%edx$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	74 22                	je     f0100797 <cons_getc+0x40>$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	0f b6 82 40 10 34 f0 	movzbl -0xfcbefc0(%edx),%eax$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	42                   	inc    %edx$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	89 15 40 12 34 f0    	mov    %edx,0xf0341240$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	75 11                	jne    f010079c <cons_getc+0x45>$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	c7 05 40 12 34 f0 00 	movl   $0x0,0xf0341240$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	00 00 00 $/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	eb 05                	jmp    f010079c <cons_getc+0x45>$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	c9                   	leave  $/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	c3                   	ret    $/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e <cons_init>:$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	55                   	push   %ebp$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	57                   	push   %edi$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	56                   	push   %esi$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	53                   	push   %ebx$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	5a a5 $/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	74 11                	je     f01007d4 <cons_init+0x36>$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	c7 05 4c 12 34 f0 b4 	movl   $0x3b4,0xf034124c$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	03 00 00 $/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	eb 16                	jmp    f01007ea <cons_init+0x4c>$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	c7 05 4c 12 34 f0 d4 	movl   $0x3d4,0xf034124c$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	03 00 00 $/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	8b 0d 4c 12 34 f0    	mov    0xf034124c,%ecx$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	b0 0e                	mov    $0xe,%al$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	89 ca                	mov    %ecx,%edx$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	ee                   	out    %al,(%dx)$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	89 da                	mov    %ebx,%edx$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	ec                   	in     (%dx),%al$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	0f b6 f8             	movzbl %al,%edi$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	b0 0f                	mov    $0xf,%al$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	89 ca                	mov    %ecx,%edx$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	ee                   	out    %al,(%dx)$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	89 da                	mov    %ebx,%edx$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	ec                   	in     (%dx),%al$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	89 35 50 12 34 f0    	mov    %esi,0xf0341250$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	09 df                	or     %ebx,%edi$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	66 89 3d 54 12 34 f0 	mov    %di,0xf0341254$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	e8 25 ff ff ff       	call   f0100745 <kbd_intr>$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	0f b7 05 88 83 12 f0 	movzwl 0xf0128388,%eax$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	e8 7c 36 00 00       	call   f0103eb0 <irq_setmask_8259A>$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	b0 00                	mov    $0x0,%al$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	89 da                	mov    %ebx,%edx$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	ee                   	out    %al,(%dx)$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	b0 80                	mov    $0x80,%al$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	ee                   	out    %al,(%dx)$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	b0 0c                	mov    $0xc,%al$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	89 ca                	mov    %ecx,%edx$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	ee                   	out    %al,(%dx)$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	b0 00                	mov    $0x0,%al$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	ee                   	out    %al,(%dx)$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	b0 03                	mov    $0x3,%al$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	ee                   	out    %al,(%dx)$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	b0 00                	mov    $0x0,%al$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	ee                   	out    %al,(%dx)$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	b0 01                	mov    $0x1,%al$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	ee                   	out    %al,(%dx)$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	ec                   	in     (%dx),%al$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	3c ff                	cmp    $0xff,%al$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	0f 95 c0             	setne  %al$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	89 c6                	mov    %eax,%esi$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	a3 20 10 34 f0       	mov    %eax,0xf0341020$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	89 da                	mov    %ebx,%edx$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	ec                   	in     (%dx),%al$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	89 ca                	mov    %ecx,%edx$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	ec                   	in     (%dx),%al$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	85 f6                	test   %esi,%esi$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	75 0c                	jne    f0100889 <cons_init+0xeb>$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	c7 04 24 09 68 10 f0 	movl   $0xf0106809,(%esp)$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	e8 4f 37 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	5b                   	pop    %ebx$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	5e                   	pop    %esi$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	5f                   	pop    %edi$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	5d                   	pop    %ebp$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	c3                   	ret    $/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891 <cputchar>:$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	55                   	push   %ebp$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	89 e5                	mov    %esp,%ebp$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	e8 d0 fb ff ff       	call   f010046f <cons_putc>$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	c9                   	leave  $/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	c3                   	ret    $/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1 <getchar>:$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	55                   	push   %ebp$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	e8 ab fe ff ff       	call   f0100757 <cons_getc>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	85 c0                	test   %eax,%eax$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	74 f7                	je     f01008a7 <getchar+0x6>$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	c9                   	leave  $/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	c3                   	ret    $/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2 <iscons>:$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	55                   	push   %ebp$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	5d                   	pop    %ebp$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	c3                   	ret    $/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc <mon_kerninfo>:$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	55                   	push   %ebp$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	c7 04 24 50 6a 10 f0 	movl   $0xf0106a50,(%esp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	e8 0a 37 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	00 $/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	f0 $/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	c7 04 24 4c 6b 10 f0 	movl   $0xf0106b4c,(%esp)$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	e8 ee 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	c7 44 24 08 da 66 10 	movl   $0x1066da,0x8(%esp)$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	00 $/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	c7 44 24 04 da 66 10 	movl   $0xf01066da,0x4(%esp)$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	f0 $/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	c7 04 24 70 6b 10 f0 	movl   $0xf0106b70,(%esp)$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	e8 d2 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	c7 44 24 08 5f 04 34 	movl   $0x34045f,0x8(%esp)$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	00 $/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	c7 44 24 04 5f 04 34 	movl   $0xf034045f,0x4(%esp)$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	f0 $/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	c7 04 24 94 6b 10 f0 	movl   $0xf0106b94,(%esp)$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	e8 b6 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	c7 44 24 08 04 30 38 	movl   $0x383004,0x8(%esp)$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	00 $/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	c7 44 24 04 04 30 38 	movl   $0xf0383004,0x4(%esp)$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	f0 $/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	c7 04 24 b8 6b 10 f0 	movl   $0xf0106bb8,(%esp)$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	e8 9a 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	b8 03 34 38 f0       	mov    $0xf0383403,%eax$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	89 c2                	mov    %eax,%edx$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	85 c0                	test   %eax,%eax$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	79 06                	jns    f0100954 <mon_kerninfo+0x98>$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	c7 04 24 dc 6b 10 f0 	movl   $0xf0106bdc,(%esp)$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	e8 71 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	c9                   	leave  $/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	c3                   	ret    $/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e <mon_help>:$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	55                   	push   %ebp$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	53                   	push   %ebx$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	8b 83 24 6d 10 f0    	mov    -0xfef92dc(%ebx),%eax$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	8b 83 20 6d 10 f0    	mov    -0xfef92e0(%ebx),%eax$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	c7 04 24 69 6a 10 f0 	movl   $0xf0106a69,(%esp)$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	e8 3e 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	83 fb 3c             	cmp    $0x3c,%ebx$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	75 d8                	jne    f010097a <mon_help+0xc>$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	5b                   	pop    %ebx$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	5d                   	pop    %ebp$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	c3                   	ret    $/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad <mon_c>:$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	55                   	push   %ebp$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	85 c0                	test   %eax,%eax$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	74 0e                	je     f01009c8 <mon_c+0x1b>$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	eb 11                	jmp    f01009d9 <mon_c+0x2c>$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	c7 04 24 08 6c 10 f0 	movl   $0xf0106c08,(%esp)$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	e8 04 36 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	c9                   	leave  $/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	c3                   	ret    $/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db <mon_x>:$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	55                   	push   %ebp$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	74 46                	je     f0100a2d <mon_x+0x52>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	74 0e                	je     f01009fb <mon_x+0x20>$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	c7 04 24 72 6a 10 f0 	movl   $0xf0106a72,(%esp)$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	e8 df 35 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	eb 3e                	jmp    f0100a39 <mon_x+0x5e>$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	00 $/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	00 $/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	e8 cc 50 00 00       	call   f0105ae5 <strtol>$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	8b 00                	mov    (%eax),%eax$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	c7 04 24 af 75 10 f0 	movl   $0xf01075af,(%esp)$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	e8 ad 35 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	eb 0c                	jmp    f0100a39 <mon_x+0x5e>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	c7 04 24 30 6c 10 f0 	movl   $0xf0106c30,(%esp)$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	e8 9f 35 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	c9                   	leave  $/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	c3                   	ret    $/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40 <mon_si>:$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	55                   	push   %ebp$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	53                   	push   %ebx$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	83 ec 44             	sub    $0x44,%esp$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	85 db                	test   %ebx,%ebx$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	74 58                	je     f0100aa6 <mon_si+0x66>$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	81 4b 38 00 01 00 00 	orl    $0x100,0x38(%ebx)$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	e8 72 43 00 00       	call   f0104dd9 <debuginfo_eip>$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	89 c2                	mov    %eax,%edx$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	2b 55 f0             	sub    -0x10(%ebp),%edx$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	c7 04 24 8b 6a 10 f0 	movl   $0xf0106a8b,(%esp)$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	e8 39 35 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	eb 11                	jmp    f0100ab7 <mon_si+0x77>$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	c7 04 24 54 6c 10 f0 	movl   $0xf0106c54,(%esp)$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	e8 26 35 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	83 c4 44             	add    $0x44,%esp$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	5b                   	pop    %ebx$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	5d                   	pop    %ebp$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	c3                   	ret    $/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd <mon_backtrace>:$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	55                   	push   %ebp$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	5d                   	pop    %ebp$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	c3                   	ret    $/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7 <monitor>:$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	55                   	push   %ebp$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	57                   	push   %edi$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	56                   	push   %esi$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	53                   	push   %ebx$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	c7 04 24 78 6c 10 f0 	movl   $0xf0106c78,(%esp)$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	e8 fc 34 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	c7 04 24 9c 6c 10 f0 	movl   $0xf0106c9c,(%esp)$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	e8 f0 34 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	74 0b                	je     f0100af9 <monitor+0x32>$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	e8 6c 39 00 00       	call   f0104465 <print_trapframe>$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	c7 04 24 a6 6a 10 f0 	movl   $0xf0106aa6,(%esp)$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	e8 fb 4b 00 00       	call   f0105700 <readline>$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	85 c0                	test   %eax,%eax$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	74 ee                	je     f0100af9 <monitor+0x32>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	eb 04                	jmp    f0100b1d <monitor+0x56>$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	43                   	inc    %ebx$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	8a 03                	mov    (%ebx),%al$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	84 c0                	test   %al,%al$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	74 64                	je     f0100b87 <monitor+0xc0>$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	c7 04 24 aa 6a 10 f0 	movl   $0xf0106aaa,(%esp)$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	e8 18 4e 00 00       	call   f010594e <strchr>$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	85 c0                	test   %eax,%eax$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	75 df                	jne    f0100b19 <monitor+0x52>$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	74 48                	je     f0100b87 <monitor+0xc0>$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	75 16                	jne    f0100b5a <monitor+0x93>$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	00 $/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	c7 04 24 af 6a 10 f0 	movl   $0xf0106aaf,(%esp)$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	e8 80 34 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	eb 9f                	jmp    f0100af9 <monitor+0x32>$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	46                   	inc    %esi$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	8a 03                	mov    (%ebx),%al$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	84 c0                	test   %al,%al$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	75 09                	jne    f0100b6e <monitor+0xa7>$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	eb b6                	jmp    f0100b1d <monitor+0x56>$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	43                   	inc    %ebx$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	8a 03                	mov    (%ebx),%al$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	84 c0                	test   %al,%al$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	74 af                	je     f0100b1d <monitor+0x56>$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	c7 04 24 aa 6a 10 f0 	movl   $0xf0106aaa,(%esp)$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	e8 cd 4d 00 00       	call   f010594e <strchr>$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	85 c0                	test   %eax,%eax$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	74 e2                	je     f0100b67 <monitor+0xa0>$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	eb 96                	jmp    f0100b1d <monitor+0x56>$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	00 $/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	85 f6                	test   %esi,%esi$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	0f 84 62 ff ff ff    	je     f0100af9 <monitor+0x32>$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	bb 20 6d 10 f0       	mov    $0xf0106d20,%ebx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	e8 2d 4d 00 00       	call   f01058df <strcmp>$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	85 c0                	test   %eax,%eax$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	75 24                	jne    f0100bda <monitor+0x113>$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	ff 14 85 28 6d 10 f0 	call   *-0xfef92d8(,%eax,4)$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	85 c0                	test   %eax,%eax$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	78 26                	js     f0100bfb <monitor+0x134>$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	e9 1f ff ff ff       	jmp    f0100af9 <monitor+0x32>$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	47                   	inc    %edi$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	83 ff 05             	cmp    $0x5,%edi$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	75 be                	jne    f0100ba1 <monitor+0xda>$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	c7 04 24 cc 6a 10 f0 	movl   $0xf0106acc,(%esp)$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	e8 e2 33 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	e9 fe fe ff ff       	jmp    f0100af9 <monitor+0x32>$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	5b                   	pop    %ebx$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	5e                   	pop    %esi$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	5f                   	pop    %edi$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	5d                   	pop    %ebp$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	c3                   	ret    $/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03 <read_eip>:$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	55                   	push   %ebp$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	5d                   	pop    %ebp$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	c3                   	ret    $/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c <check_va2pa_large>:$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	55                   	push   %ebp$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	8b 04 90             	mov    (%eax,%edx,4),%eax$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	89 c2                	mov    %eax,%edx$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	81 e2 81 00 00 00    	and    $0x81,%edx$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	81 fa 81 00 00 00    	cmp    $0x81,%edx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	75 07                	jne    f0100c2c <check_va2pa_large+0x20>$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	eb 05                	jmp    f0100c31 <check_va2pa_large+0x25>$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	5d                   	pop    %ebp$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	c3                   	ret    $/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33 <check_va2pa>:$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	55                   	push   %ebp$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	89 d1                	mov    %edx,%ecx$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	a8 01                	test   $0x1,%al$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	74 4d                	je     f0100c92 <check_va2pa+0x5f>$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	3b 0d 08 1f 34 f0    	cmp    0xf0341f08,%ecx$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	72 20                	jb     f0100c77 <check_va2pa+0x44>$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	f0 $/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	00 $/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	e8 c9 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	a8 01                	test   $0x1,%al$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	74 0e                	je     f0100c99 <check_va2pa+0x66>$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	eb 0c                	jmp    f0100c9e <check_va2pa+0x6b>$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	eb 05                	jmp    f0100c9e <check_va2pa+0x6b>$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	c9                   	leave  $/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	c3                   	ret    $/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0 <nvram_read>:$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	55                   	push   %ebp$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	56                   	push   %esi$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	53                   	push   %ebx$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	89 c3                	mov    %eax,%ebx$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	e8 d6 31 00 00       	call   f0103e88 <mc146818_read>$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	89 c6                	mov    %eax,%esi$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	43                   	inc    %ebx$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	e8 cb 31 00 00       	call   f0103e88 <mc146818_read>$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	09 f0                	or     %esi,%eax$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	5b                   	pop    %ebx$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	5e                   	pop    %esi$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	5d                   	pop    %ebp$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	c3                   	ret    $/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9 <boot_alloc>:$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	55                   	push   %ebp$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	56                   	push   %esi$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	53                   	push   %ebx$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	83 3d 5c 12 34 f0 00 	cmpl   $0x0,0xf034125c$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	75 11                	jne    f0100ceb <boot_alloc+0x22>$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	ba 03 40 38 f0       	mov    $0xf0384003,%edx$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	89 15 5c 12 34 f0    	mov    %edx,0xf034125c$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	8b 15 5c 12 34 f0    	mov    0xf034125c,%edx$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	77 20                	ja     f0100d19 <boot_alloc+0x50>$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	f0 $/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	00 $/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	e8 27 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	8d 9a 00 00 00 10    	lea    0x10000000(%edx),%ebx$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	8b 0d 08 1f 34 f0    	mov    0xf0341f08,%ecx$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	89 de                	mov    %ebx,%esi$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	39 ce                	cmp    %ecx,%esi$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	72 20                	jb     f0100d4e <boot_alloc+0x85>$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	f0 $/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	00 $/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	e8 f2 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	85 c0                	test   %eax,%eax$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	74 6c                	je     f0100dbe <boot_alloc+0xf5>$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	01 d0                	add    %edx,%eax$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	a3 5c 12 34 f0       	mov    %eax,0xf034125c$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	77 20                	ja     f0100d80 <boot_alloc+0xb7>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	f0 $/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	00 $/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	e8 c0 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	89 de                	mov    %ebx,%esi$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	39 f1                	cmp    %esi,%ecx$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	77 20                	ja     f0100daf <boot_alloc+0xe6>$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	f0 $/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	00 $/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	e8 91 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	a3 5c 12 34 f0       	mov    %eax,0xf034125c$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	89 d0                	mov    %edx,%eax$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	5b                   	pop    %ebx$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	5e                   	pop    %esi$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	5d                   	pop    %ebp$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	c3                   	ret    $/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7 <check_page_free_list>:$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	55                   	push   %ebp$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	57                   	push   %edi$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	56                   	push   %esi$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	53                   	push   %ebx$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	19 f6                	sbb    %esi,%esi$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	46                   	inc    %esi$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	8b 1d 60 12 34 f0    	mov    0xf0341260,%ebx$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	85 db                	test   %ebx,%ebx$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	75 1c                	jne    f0100e02 <check_page_free_list+0x3b>$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	c7 44 24 08 5c 6d 10 	movl   $0xf0106d5c,0x8(%esp)$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	f0 $/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	c7 44 24 04 09 03 00 	movl   $0x309,0x4(%esp)$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	00 $/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	e8 3e f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	85 c0                	test   %eax,%eax$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	74 50                	je     f0100e56 <check_page_free_list+0x8f>$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	39 f0                	cmp    %esi,%eax$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	0f 93 c0             	setae  %al$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	89 1a                	mov    %ebx,(%edx)$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	85 db                	test   %ebx,%ebx$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	75 da                	jne    f0100e12 <check_page_free_list+0x4b>$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	89 10                	mov    %edx,(%eax)$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	89 1d 60 12 34 f0    	mov    %ebx,0xf0341260$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	85 db                	test   %ebx,%ebx$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	74 67                	je     f0100ebd <check_page_free_list+0xf6>$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	89 c2                	mov    %eax,%edx$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	39 f2                	cmp    %esi,%edx$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	73 4a                	jae    f0100eb7 <check_page_free_list+0xf0>$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	89 c2                	mov    %eax,%edx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	72 20                	jb     f0100e9a <check_page_free_list+0xd3>$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	f0 $/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	00 $/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	e8 a6 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	00 $/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	00 $/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	e8 e8 4a 00 00       	call   f010599f <memset>$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	85 db                	test   %ebx,%ebx$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	75 99                	jne    f0100e56 <check_page_free_list+0x8f>$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	e8 02 fe ff ff       	call   f0100cc9 <boot_alloc>$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	8b 15 60 12 34 f0    	mov    0xf0341260,%edx$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	85 d2                	test   %edx,%edx$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	0f 84 27 02 00 00    	je     f01010ff <check_page_free_list+0x338>$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	8b 1d 10 1f 34 f0    	mov    0xf0341f10,%ebx$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	39 da                	cmp    %ebx,%edx$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	72 4f                	jb     f0100f31 <check_page_free_list+0x16a>$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	a1 08 1f 34 f0       	mov    0xf0341f08,%eax$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	39 c2                	cmp    %eax,%edx$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	73 66                	jae    f0100f5a <check_page_free_list+0x193>$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	89 d0                	mov    %edx,%eax$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	29 d8                	sub    %ebx,%eax$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	a8 07                	test   $0x7,%al$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	0f 85 84 00 00 00    	jne    f0100f87 <check_page_free_list+0x1c0>$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	0f 84 a4 00 00 00    	je     f0100fb3 <check_page_free_list+0x1ec>$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	0f 84 c4 00 00 00    	je     f0100fde <check_page_free_list+0x217>$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	e9 d6 00 00 00       	jmp    f0101002 <check_page_free_list+0x23b>$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	73 24                	jae    f0100f55 <check_page_free_list+0x18e>$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	c7 44 24 0c e7 74 10 	movl   $0xf01074e7,0xc(%esp)$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	f0 $/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	f0 $/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	c7 44 24 04 24 03 00 	movl   $0x324,0x4(%esp)$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	00 $/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	e8 eb f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	72 24                	jb     f0100f7e <check_page_free_list+0x1b7>$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	c7 44 24 0c 08 75 10 	movl   $0xf0107508,0xc(%esp)$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	f0 $/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	f0 $/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	00 $/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	e8 c2 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	89 d0                	mov    %edx,%eax$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	a8 07                	test   $0x7,%al$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	74 24                	je     f0100fab <check_page_free_list+0x1e4>$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	c7 44 24 0c 80 6d 10 	movl   $0xf0106d80,0xc(%esp)$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	f0 $/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	f0 $/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	c7 44 24 04 26 03 00 	movl   $0x326,0x4(%esp)$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	00 $/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	e8 95 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	75 24                	jne    f0100fd7 <check_page_free_list+0x210>$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c7 44 24 0c 1c 75 10 	movl   $0xf010751c,0xc(%esp)$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	f0 $/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	f0 $/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	c7 44 24 04 29 03 00 	movl   $0x329,0x4(%esp)$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	00 $/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	e8 69 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	75 24                	jne    f0101002 <check_page_free_list+0x23b>$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	c7 44 24 0c 2d 75 10 	movl   $0xf010752d,0xc(%esp)$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	f0 $/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	f0 $/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	00 $/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	e8 3e f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	75 24                	jne    f010102d <check_page_free_list+0x266>$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	c7 44 24 0c b4 6d 10 	movl   $0xf0106db4,0xc(%esp)$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	f0 $/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	f0 $/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	00 $/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	e8 13 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	75 24                	jne    f0101058 <check_page_free_list+0x291>$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	c7 44 24 0c 46 75 10 	movl   $0xf0107546,0xc(%esp)$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	f0 $/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	f0 $/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	c7 44 24 04 2c 03 00 	movl   $0x32c,0x4(%esp)$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	00 $/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	e8 e8 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	89 c1                	mov    %eax,%ecx$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	76 59                	jbe    f01010ba <check_page_free_list+0x2f3>$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	89 c3                	mov    %eax,%ebx$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	77 20                	ja     f010108b <check_page_free_list+0x2c4>$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	f0 $/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	00 $/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	e8 b5 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	76 24                	jbe    f01010ba <check_page_free_list+0x2f3>$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	c7 44 24 0c d8 6d 10 	movl   $0xf0106dd8,0xc(%esp)$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	f0 $/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	f0 $/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	c7 44 24 04 2d 03 00 	movl   $0x32d,0x4(%esp)$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	00 $/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	e8 86 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	75 24                	jne    f01010e5 <check_page_free_list+0x31e>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	c7 44 24 0c 60 75 10 	movl   $0xf0107560,0xc(%esp)$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	f0 $/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	f0 $/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	c7 44 24 04 2f 03 00 	movl   $0x32f,0x4(%esp)$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	00 $/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	e8 5b ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	77 03                	ja     f01010f0 <check_page_free_list+0x329>$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	47                   	inc    %edi$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	eb 01                	jmp    f01010f1 <check_page_free_list+0x32a>$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	46                   	inc    %esi$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	8b 12                	mov    (%edx),%edx$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	85 d2                	test   %edx,%edx$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	0f 85 31 fe ff ff    	jne    f0100f2c <check_page_free_list+0x165>$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	85 ff                	test   %edi,%edi$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	7f 24                	jg     f0101123 <check_page_free_list+0x35c>$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	c7 44 24 0c 7d 75 10 	movl   $0xf010757d,0xc(%esp)$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	f0 $/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	f0 $/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	c7 44 24 04 37 03 00 	movl   $0x337,0x4(%esp)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	00 $/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	e8 1d ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	85 f6                	test   %esi,%esi$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	7f 24                	jg     f010114b <check_page_free_list+0x384>$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	c7 44 24 0c 8f 75 10 	movl   $0xf010758f,0xc(%esp)$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	f0 $/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	f0 $/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	c7 44 24 04 38 03 00 	movl   $0x338,0x4(%esp)$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	00 $/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	e8 f5 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	5b                   	pop    %ebx$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	5e                   	pop    %esi$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	5f                   	pop    %edi$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	5d                   	pop    %ebp$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	c3                   	ret    $/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153 <page_init>:$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	55                   	push   %ebp$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	89 e5                	mov    %esp,%ebp$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	56                   	push   %esi$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	53                   	push   %ebx$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	8b 35 58 12 34 f0    	mov    0xf0341258,%esi$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	76 42                	jbe    f01011a8 <page_init+0x55>$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	8b 1d 60 12 34 f0    	mov    0xf0341260,%ebx$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	89 d1                	mov    %edx,%ecx$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	03 0d 10 1f 34 f0    	add    0xf0341f10,%ecx$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	89 d3                	mov    %edx,%ebx$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	03 1d 10 1f 34 f0    	add    0xf0341f10,%ebx$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	40                   	inc    %eax$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	39 c6                	cmp    %eax,%esi$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	77 08                	ja     f010119d <page_init+0x4a>$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	89 1d 60 12 34 f0    	mov    %ebx,0xf0341260$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	eb 0b                	jmp    f01011a8 <page_init+0x55>$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	75 cf                	jne    f0101171 <page_init+0x1e>$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	89 1d 60 12 34 f0    	mov    %ebx,0xf0341260$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	e8 17 fb ff ff       	call   f0100cc9 <boot_alloc>$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	77 20                	ja     f01011d9 <page_init+0x86>$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	f0 $/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	00 $/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	e8 67 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	73 37                	jae    f0101220 <page_init+0xcd>$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	8b 1d 60 12 34 f0    	mov    0xf0341260,%ebx$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	89 d1                	mov    %edx,%ecx$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	03 0d 10 1f 34 f0    	add    0xf0341f10,%ecx$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	89 d3                	mov    %edx,%ebx$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	03 1d 10 1f 34 f0    	add    0xf0341f10,%ebx$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	40                   	inc    %eax$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	83 c2 08             	add    $0x8,%edx$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	39 05 08 1f 34 f0    	cmp    %eax,0xf0341f08$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	77 dc                	ja     f01011f6 <page_init+0xa3>$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	89 1d 60 12 34 f0    	mov    %ebx,0xf0341260$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	c7 05 64 12 34 f0 00 	movl   $0x0,0xf0341264$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	00 00 00 $/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	5b                   	pop    %ebx$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	5e                   	pop    %esi$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	5d                   	pop    %ebp$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	c3                   	ret    $/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231 <page_alloc>:$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	55                   	push   %ebp$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	89 e5                	mov    %esp,%ebp$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	53                   	push   %ebx$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	8b 1d 60 12 34 f0    	mov    0xf0341260,%ebx$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	85 db                	test   %ebx,%ebx$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	74 6b                	je     f01012ad <page_alloc+0x7c>$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	a3 60 12 34 f0       	mov    %eax,0xf0341260$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	74 58                	je     f01012ad <page_alloc+0x7c>$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	89 d8                	mov    %ebx,%eax$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	89 c2                	mov    %eax,%edx$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	72 20                	jb     f0101290 <page_alloc+0x5f>$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	f0 $/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	00 $/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	e8 b0 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	00 $/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	00 $/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	e8 f2 46 00 00       	call   f010599f <memset>$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	89 d8                	mov    %ebx,%eax$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	83 c4 14             	add    $0x14,%esp$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	5b                   	pop    %ebx$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	5d                   	pop    %ebp$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	c3                   	ret    $/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5 <page_alloc_npages>:$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	55                   	push   %ebp$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	5d                   	pop    %ebp$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	c3                   	ret    $/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf <page_free_npages>:$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	55                   	push   %ebp$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	5d                   	pop    %ebp$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	c3                   	ret    $/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9 <page_free>:$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	55                   	push   %ebp$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	75 13                	jne    f01012e9 <page_free+0x20>$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	8b 15 60 12 34 f0    	mov    0xf0341260,%edx$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	89 10                	mov    %edx,(%eax)$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	a3 60 12 34 f0       	mov    %eax,0xf0341260$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	5d                   	pop    %ebp$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	c3                   	ret    $/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb <page_realloc_npages>:$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	55                   	push   %ebp$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	5d                   	pop    %ebp$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	c3                   	ret    $/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5 <page_decref>:$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	55                   	push   %ebp$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	4a                   	dec    %edx$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	66 85 d2             	test   %dx,%dx$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	75 08                	jne    f0101313 <page_decref+0x1e>$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	e8 b6 ff ff ff       	call   f01012c9 <page_free>$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	c9                   	leave  $/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	c3                   	ret    $/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315 <pgdir_walk>:$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	55                   	push   %ebp$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	89 e5                	mov    %esp,%ebp$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	57                   	push   %edi$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	56                   	push   %esi$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	53                   	push   %ebx$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	89 f3                	mov    %esi,%ebx$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	a8 01                	test   $0x1,%al$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	74 3d                	je     f010136f <pgdir_walk+0x5a>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	89 c2                	mov    %eax,%edx$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	72 20                	jb     f0101364 <pgdir_walk+0x4f>$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	f0 $/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	c7 44 24 04 ff 01 00 	movl   $0x1ff,0x4(%esp)$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	00 $/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	e8 dc ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	e9 92 00 00 00       	jmp    f0101401 <pgdir_walk+0xec>$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	0f 84 96 00 00 00    	je     f010140f <pgdir_walk+0xfa>$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	e8 ac fe ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	85 c0                	test   %eax,%eax$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	0f 84 89 00 00 00    	je     f0101416 <pgdir_walk+0x101>$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	89 c2                	mov    %eax,%edx$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	89 d1                	mov    %edx,%ecx$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	3b 0d 08 1f 34 f0    	cmp    0xf0341f08,%ecx$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	72 20                	jb     f01013c8 <pgdir_walk+0xb3>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	f0 $/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	00 $/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	e8 78 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	8d ba 00 00 00 f0    	lea    -0x10000000(%edx),%edi$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	89 f9                	mov    %edi,%ecx$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	77 20                	ja     f01013fc <pgdir_walk+0xe7>$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	f0 $/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	c7 44 24 04 08 02 00 	movl   $0x208,0x4(%esp)$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	00 $/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	e8 44 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	83 ca 07             	or     $0x7,%edx$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	8d 04 31             	lea    (%ecx,%esi,1),%eax$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	eb 0c                	jmp    f010141b <pgdir_walk+0x106>$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	eb 05                	jmp    f010141b <pgdir_walk+0x106>$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	5b                   	pop    %ebx$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	5e                   	pop    %esi$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	5f                   	pop    %edi$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	5d                   	pop    %ebp$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	c3                   	ret    $/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423 <boot_map_region>:$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	55                   	push   %ebp$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	89 e5                	mov    %esp,%ebp$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	57                   	push   %edi$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	56                   	push   %esi$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	53                   	push   %ebx$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	89 d6                	mov    %edx,%esi$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	74 5f                	je     f010149b <boot_map_region+0x78>$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	8d 43 fb             	lea    -0x5(%ebx),%eax$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	3d 5a ea 00 00       	cmp    $0xea5a,%eax$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	76 17                	jbe    f010146b <boot_map_region+0x48>$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c7 04 24 a0 75 10 f0 	movl   $0xf01075a0,(%esp)$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	e8 6d 2b 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	00 $/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	e8 93 fe ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	09 fa                	or     %edi,%edx$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	89 10                	mov    %edx,(%eax)$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	43                   	inc    %ebx$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	75 af                	jne    f010144a <boot_map_region+0x27>$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	5b                   	pop    %ebx$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	5e                   	pop    %esi$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	5f                   	pop    %edi$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	5d                   	pop    %ebp$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	c3                   	ret    $/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3 <page_lookup>:$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	55                   	push   %ebp$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	53                   	push   %ebx$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	00 $/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	e8 4e fe ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	85 db                	test   %ebx,%ebx$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	74 02                	je     f01014cd <page_lookup+0x2a>$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	85 c0                	test   %eax,%eax$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	74 38                	je     f0101509 <page_lookup+0x66>$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	8b 00                	mov    (%eax),%eax$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	a8 01                	test   $0x1,%al$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	74 39                	je     f0101510 <page_lookup+0x6d>$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	72 1c                	jb     f01014fe <page_lookup+0x5b>$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	c7 44 24 08 20 6e 10 	movl   $0xf0106e20,0x8(%esp)$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	f0 $/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	00 $/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	e8 42 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	03 05 10 1f 34 f0    	add    0xf0341f10,%eax$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	eb 0c                	jmp    f0101515 <page_lookup+0x72>$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	eb 05                	jmp    f0101515 <page_lookup+0x72>$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	5b                   	pop    %ebx$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	5d                   	pop    %ebp$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	c3                   	ret    $/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b <tlb_invalidate>:$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	55                   	push   %ebp$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	89 e5                	mov    %esp,%ebp$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	e8 da 4a 00 00       	call   f0106000 <cpunum>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	29 c2                	sub    %eax,%edx$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	83 3c 85 28 20 34 f0 	cmpl   $0x0,-0xfcbdfd8(,%eax,4)$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	00 $/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	74 20                	je     f010155c <tlb_invalidate+0x41>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	e8 bf 4a 00 00       	call   f0106000 <cpunum>$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	29 c2                	sub    %eax,%edx$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	75 06                	jne    f0101562 <tlb_invalidate+0x47>$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	0f 01 38             	invlpg (%eax)$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c9                   	leave  $/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	c3                   	ret    $/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564 <page_remove>:$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	55                   	push   %ebp$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	89 e5                	mov    %esp,%ebp$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	56                   	push   %esi$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	53                   	push   %ebx$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	e8 1e ff ff ff       	call   f01014a3 <page_lookup>$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	85 c0                	test   %eax,%eax$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	74 1d                	je     f01015a6 <page_remove+0x42>$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	e8 5b fd ff ff       	call   f01012f5 <page_decref>$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	e8 75 ff ff ff       	call   f010151b <tlb_invalidate>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	83 c4 20             	add    $0x20,%esp$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	5b                   	pop    %ebx$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	5e                   	pop    %esi$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	5d                   	pop    %ebp$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	c3                   	ret    $/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad <page_insert>:$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	55                   	push   %ebp$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	57                   	push   %edi$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	56                   	push   %esi$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	53                   	push   %ebx$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	00 $/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	e8 42 fd ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	89 c3                	mov    %eax,%ebx$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	85 c0                	test   %eax,%eax$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	74 64                	je     f010163d <page_insert+0x90>$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	8b 00                	mov    (%eax),%eax$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	a8 01                	test   $0x1,%al$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	74 3b                	je     f010161a <page_insert+0x6d>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	89 f2                	mov    %esi,%edx$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	39 d0                	cmp    %edx,%eax$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	75 15                	jne    f010160b <page_insert+0x5e>$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	e8 16 ff ff ff       	call   f010151b <tlb_invalidate>$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	66 ff 4e 04          	decw   0x4(%esi)$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	eb 0f                	jmp    f010161a <page_insert+0x6d>$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	e8 4a ff ff ff       	call   f0101564 <page_remove>$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	89 f2                	mov    %esi,%edx$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	09 d0                	or     %edx,%eax$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	eb 05                	jmp    f0101642 <page_insert+0x95>$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	5b                   	pop    %ebx$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	5e                   	pop    %esi$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	5f                   	pop    %edi$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	5d                   	pop    %ebp$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	c3                   	ret    $/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a <mem_init>:$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	55                   	push   %ebp$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	89 e5                	mov    %esp,%ebp$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	57                   	push   %edi$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	56                   	push   %esi$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	53                   	push   %ebx$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	e8 43 f6 ff ff       	call   f0100ca0 <nvram_read>$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	89 c2                	mov    %eax,%edx$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	85 c0                	test   %eax,%eax$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	79 06                	jns    f010166c <mem_init+0x22>$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	89 15 58 12 34 f0    	mov    %edx,0xf0341258$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	e8 21 f6 ff ff       	call   f0100ca0 <nvram_read>$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	89 c2                	mov    %eax,%edx$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	89 d0                	mov    %edx,%eax$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	85 d2                	test   %edx,%edx$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	79 06                	jns    f0101690 <mem_init+0x46>$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	74 0e                	je     f01016a3 <mem_init+0x59>$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	89 15 08 1f 34 f0    	mov    %edx,0xf0341f08$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	eb 0c                	jmp    f01016af <mem_init+0x65>$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	8b 15 58 12 34 f0    	mov    0xf0341258,%edx$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	89 15 08 1f 34 f0    	mov    %edx,0xf0341f08$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	a1 58 12 34 f0       	mov    0xf0341258,%eax$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	a1 08 1f 34 f0       	mov    0xf0341f08,%eax$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	c7 04 24 40 6e 10 f0 	movl   $0xf0106e40,(%esp)$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	e8 f5 28 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	e8 dc f5 ff ff       	call   f0100cc9 <boot_alloc>$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	a3 0c 1f 34 f0       	mov    %eax,0xf0341f0c$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	00 $/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	00 $/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	e8 95 42 00 00       	call   f010599f <memset>$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	77 20                	ja     f0101736 <mem_init+0xec>$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	f0 $/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	00 $/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	e8 0a e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	83 ca 05             	or     $0x5,%edx$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	a1 08 1f 34 f0       	mov    0xf0341f08,%eax$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	e8 77 f5 ff ff       	call   f0100cc9 <boot_alloc>$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	a3 10 1f 34 f0       	mov    %eax,0xf0341f10$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	8b 15 08 1f 34 f0    	mov    0xf0341f08,%edx$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	00 $/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	e8 2b 42 00 00       	call   f010599f <memset>$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	e8 4b f5 ff ff       	call   f0100cc9 <boot_alloc>$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	a3 6c 12 34 f0       	mov    %eax,0xf034126c$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	c7 44 24 08 00 00 02 	movl   $0x20000,0x8(%esp)$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	00 $/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	00 $/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	e8 04 42 00 00       	call   f010599f <memset>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	e8 b3 f9 ff ff       	call   f0101153 <page_init>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	c7 04 24 7c 6e 10 f0 	movl   $0xf0106e7c,(%esp)$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	e8 2c 28 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	e8 11 f6 ff ff       	call   f0100dc7 <check_page_free_list>$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	c7 04 24 a4 6e 10 f0 	movl   $0xf0106ea4,(%esp)$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	e8 16 28 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	83 3d 10 1f 34 f0 00 	cmpl   $0x0,0xf0341f10$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	75 1c                	jne    f01017e7 <mem_init+0x19d>$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	c7 44 24 08 b3 75 10 	movl   $0xf01075b3,0x8(%esp)$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	f0 $/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	00 $/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	e8 59 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	a1 60 12 34 f0       	mov    0xf0341260,%eax$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	85 c0                	test   %eax,%eax$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	74 0e                	je     f01017fe <mem_init+0x1b4>$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	43                   	inc    %ebx$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	8b 00                	mov    (%eax),%eax$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	85 c0                	test   %eax,%eax$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	75 f9                	jne    f01017f5 <mem_init+0x1ab>$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	eb 05                	jmp    f0101803 <mem_init+0x1b9>$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	e8 22 fa ff ff       	call   f0101231 <page_alloc>$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	89 c6                	mov    %eax,%esi$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	85 c0                	test   %eax,%eax$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	75 24                	jne    f0101839 <mem_init+0x1ef>$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	c7 44 24 0c ce 75 10 	movl   $0xf01075ce,0xc(%esp)$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	f0 $/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	f0 $/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	c7 44 24 04 51 03 00 	movl   $0x351,0x4(%esp)$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	00 $/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	e8 07 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	e8 ec f9 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	89 c7                	mov    %eax,%edi$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	85 c0                	test   %eax,%eax$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	75 24                	jne    f010186f <mem_init+0x225>$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	c7 44 24 0c e4 75 10 	movl   $0xf01075e4,0xc(%esp)$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	f0 $/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	f0 $/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	c7 44 24 04 52 03 00 	movl   $0x352,0x4(%esp)$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	00 $/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	e8 d1 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	e8 b6 f9 ff ff       	call   f0101231 <page_alloc>$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	85 c0                	test   %eax,%eax$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	75 24                	jne    f01018a6 <mem_init+0x25c>$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	c7 44 24 0c fa 75 10 	movl   $0xf01075fa,0xc(%esp)$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	f0 $/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	f0 $/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	00 $/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	e8 9a e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	39 fe                	cmp    %edi,%esi$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	75 24                	jne    f01018ce <mem_init+0x284>$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	c7 44 24 0c 10 76 10 	movl   $0xf0107610,0xc(%esp)$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	f0 $/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	f0 $/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	00 $/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	e8 72 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	74 05                	je     f01018d8 <mem_init+0x28e>$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	75 24                	jne    f01018fc <mem_init+0x2b2>$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	c7 44 24 0c c4 6e 10 	movl   $0xf0106ec4,0xc(%esp)$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	f0 $/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	f0 $/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	c7 44 24 04 57 03 00 	movl   $0x357,0x4(%esp)$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	00 $/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	e8 44 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	8b 15 10 1f 34 f0    	mov    0xf0341f10,%edx$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	a1 08 1f 34 f0       	mov    0xf0341f08,%eax$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	89 f1                	mov    %esi,%ecx$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	29 d1                	sub    %edx,%ecx$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	72 24                	jb     f010193c <mem_init+0x2f2>$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	c7 44 24 0c 22 76 10 	movl   $0xf0107622,0xc(%esp)$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	f0 $/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	f0 $/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	c7 44 24 04 58 03 00 	movl   $0x358,0x4(%esp)$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	00 $/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	e8 04 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	89 f9                	mov    %edi,%ecx$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	29 d1                	sub    %edx,%ecx$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	77 24                	ja     f010196e <mem_init+0x324>$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	c7 44 24 0c 3f 76 10 	movl   $0xf010763f,0xc(%esp)$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	f0 $/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	f0 $/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	c7 44 24 04 59 03 00 	movl   $0x359,0x4(%esp)$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	00 $/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	e8 d2 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	29 d1                	sub    %edx,%ecx$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 ca                	mov    %ecx,%edx$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	39 d0                	cmp    %edx,%eax$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	77 24                	ja     f01019a3 <mem_init+0x359>$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	c7 44 24 0c 5c 76 10 	movl   $0xf010765c,0xc(%esp)$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	f0 $/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	f0 $/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	c7 44 24 04 5a 03 00 	movl   $0x35a,0x4(%esp)$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	00 $/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	e8 9d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	a1 60 12 34 f0       	mov    0xf0341260,%eax$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	c7 05 60 12 34 f0 00 	movl   $0x0,0xf0341260$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	00 00 00 $/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	e8 70 f8 ff ff       	call   f0101231 <page_alloc>$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	85 c0                	test   %eax,%eax$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	74 24                	je     f01019e9 <mem_init+0x39f>$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	c7 44 24 0c 79 76 10 	movl   $0xf0107679,0xc(%esp)$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	f0 $/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	f0 $/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	00 $/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	e8 57 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	e8 d8 f8 ff ff       	call   f01012c9 <page_free>$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	e8 d0 f8 ff ff       	call   f01012c9 <page_free>$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	e8 c5 f8 ff ff       	call   f01012c9 <page_free>$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	e8 21 f8 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	89 c6                	mov    %eax,%esi$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	85 c0                	test   %eax,%eax$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	75 24                	jne    f0101a3a <mem_init+0x3f0>$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	c7 44 24 0c ce 75 10 	movl   $0xf01075ce,0xc(%esp)$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	f0 $/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	f0 $/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	00 $/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	e8 06 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	e8 eb f7 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	89 c7                	mov    %eax,%edi$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	85 c0                	test   %eax,%eax$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	75 24                	jne    f0101a70 <mem_init+0x426>$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	c7 44 24 0c e4 75 10 	movl   $0xf01075e4,0xc(%esp)$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	f0 $/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	f0 $/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	c7 44 24 04 69 03 00 	movl   $0x369,0x4(%esp)$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	00 $/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	e8 d0 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	e8 b5 f7 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	85 c0                	test   %eax,%eax$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	75 24                	jne    f0101aa7 <mem_init+0x45d>$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	c7 44 24 0c fa 75 10 	movl   $0xf01075fa,0xc(%esp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	f0 $/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	f0 $/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	c7 44 24 04 6a 03 00 	movl   $0x36a,0x4(%esp)$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	00 $/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	e8 99 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	39 fe                	cmp    %edi,%esi$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	75 24                	jne    f0101acf <mem_init+0x485>$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	c7 44 24 0c 10 76 10 	movl   $0xf0107610,0xc(%esp)$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	f0 $/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	f0 $/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	00 $/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	e8 71 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	74 05                	je     f0101ad9 <mem_init+0x48f>$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	75 24                	jne    f0101afd <mem_init+0x4b3>$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	c7 44 24 0c c4 6e 10 	movl   $0xf0106ec4,0xc(%esp)$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	f0 $/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	f0 $/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	00 $/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	e8 43 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	e8 28 f7 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	85 c0                	test   %eax,%eax$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	74 24                	je     f0101b31 <mem_init+0x4e7>$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	c7 44 24 0c 79 76 10 	movl   $0xf0107679,0xc(%esp)$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	f0 $/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	f0 $/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	c7 44 24 04 6e 03 00 	movl   $0x36e,0x4(%esp)$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	00 $/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	e8 0f e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	89 f0                	mov    %esi,%eax$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	89 c2                	mov    %eax,%edx$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	72 20                	jb     f0101b6c <mem_init+0x522>$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	f0 $/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	00 $/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	e8 d4 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	00 $/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	00 $/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 16 3e 00 00       	call   f010599f <memset>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	e8 38 f7 ff ff       	call   f01012c9 <page_free>$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	e8 94 f6 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	85 c0                	test   %eax,%eax$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	75 24                	jne    f0101bc5 <mem_init+0x57b>$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	c7 44 24 0c 88 76 10 	movl   $0xf0107688,0xc(%esp)$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	f0 $/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	f0 $/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	c7 44 24 04 73 03 00 	movl   $0x373,0x4(%esp)$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	00 $/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	e8 7b e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	39 c6                	cmp    %eax,%esi$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	74 24                	je     f0101bed <mem_init+0x5a3>$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	c7 44 24 0c a6 76 10 	movl   $0xf01076a6,0xc(%esp)$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	f0 $/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	f0 $/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	c7 44 24 04 74 03 00 	movl   $0x374,0x4(%esp)$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	00 $/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	e8 53 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	89 f2                	mov    %esi,%edx$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	89 d0                	mov    %edx,%eax$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	72 20                	jb     f0101c28 <mem_init+0x5de>$/;"	l
f0101c08	obj/kern/kernel.asm	/^f0101c08:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	f0 $/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	00 $/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	e8 18 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	75 11                	jne    f0101c42 <mem_init+0x5f8>$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	74 24                	je     f0101c66 <mem_init+0x61c>$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	c7 44 24 0c b6 76 10 	movl   $0xf01076b6,0xc(%esp)$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	f0 $/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	f0 $/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	c7 44 24 04 77 03 00 	movl   $0x377,0x4(%esp)$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	00 $/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	e8 da e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	40                   	inc    %eax$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	75 d2                	jne    f0101c3d <mem_init+0x5f3>$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	89 15 60 12 34 f0    	mov    %edx,0xf0341260$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	e8 4d f6 ff ff       	call   f01012c9 <page_free>$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	e8 45 f6 ff ff       	call   f01012c9 <page_free>$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	e8 3a f6 ff ff       	call   f01012c9 <page_free>$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	a1 60 12 34 f0       	mov    0xf0341260,%eax$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	85 c0                	test   %eax,%eax$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	74 07                	je     f0101c9f <mem_init+0x655>$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	4b                   	dec    %ebx$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	85 c0                	test   %eax,%eax$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	75 f9                	jne    f0101c98 <mem_init+0x64e>$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	85 db                	test   %ebx,%ebx$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	74 24                	je     f0101cc7 <mem_init+0x67d>$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	c7 44 24 0c c0 76 10 	movl   $0xf01076c0,0xc(%esp)$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	f0 $/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	f0 $/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3:	c7 44 24 04 84 03 00 	movl   $0x384,0x4(%esp)$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	00 $/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	e8 79 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	c7 04 24 e4 6e 10 f0 	movl   $0xf0106ee4,(%esp)$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	e8 05 23 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	c7 04 24 cb 76 10 f0 	movl   $0xf01076cb,(%esp)$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	e8 f9 22 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	e8 46 f5 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	89 c3                	mov    %eax,%ebx$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	85 c0                	test   %eax,%eax$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	75 24                	jne    f0101d15 <mem_init+0x6cb>$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	c7 44 24 0c ce 75 10 	movl   $0xf01075ce,0xc(%esp)$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	f0 $/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	f0 $/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	00 $/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	e8 2b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	e8 10 f5 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	89 c7                	mov    %eax,%edi$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	85 c0                	test   %eax,%eax$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	75 24                	jne    f0101d4b <mem_init+0x701>$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	c7 44 24 0c e4 75 10 	movl   $0xf01075e4,0xc(%esp)$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	f0 $/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	f0 $/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	00 $/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	e8 f5 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	e8 da f4 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	89 c6                	mov    %eax,%esi$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	85 c0                	test   %eax,%eax$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	75 24                	jne    f0101d81 <mem_init+0x737>$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	c7 44 24 0c fa 75 10 	movl   $0xf01075fa,0xc(%esp)$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	f0 $/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	f0 $/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	00 $/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	e8 bf e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	39 fb                	cmp    %edi,%ebx$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	75 24                	jne    f0101da9 <mem_init+0x75f>$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	c7 44 24 0c 10 76 10 	movl   $0xf0107610,0xc(%esp)$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	f0 $/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	f0 $/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	00 $/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	e8 97 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	39 c7                	cmp    %eax,%edi$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	74 04                	je     f0101db1 <mem_init+0x767>$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	75 24                	jne    f0101dd5 <mem_init+0x78b>$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	c7 44 24 0c c4 6e 10 	movl   $0xf0106ec4,0xc(%esp)$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	f0 $/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	f0 $/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	00 $/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	e8 6b e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	8b 15 60 12 34 f0    	mov    0xf0341260,%edx$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	c7 05 60 12 34 f0 00 	movl   $0x0,0xf0341260$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	00 00 00 $/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	e8 3d f4 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	85 c0                	test   %eax,%eax$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	74 24                	je     f0101e1c <mem_init+0x7d2>$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	c7 44 24 0c 79 76 10 	movl   $0xf0107679,0xc(%esp)$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	f0 $/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	f0 $/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	00 $/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	e8 24 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	00 $/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	e8 6b f6 ff ff       	call   f01014a3 <page_lookup>$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	85 c0                	test   %eax,%eax$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	74 24                	je     f0101e60 <mem_init+0x816>$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	c7 44 24 0c 04 6f 10 	movl   $0xf0106f04,0xc(%esp)$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	f0 $/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	f0 $/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	00 $/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	e8 e0 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	00 $/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	00 $/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	e8 2c f7 ff ff       	call   f01015ad <page_insert>$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	85 c0                	test   %eax,%eax$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	78 24                	js     f0101ea9 <mem_init+0x85f>$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	c7 44 24 0c 3c 6f 10 	movl   $0xf0106f3c,0xc(%esp)$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	f0 $/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	f0 $/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	00 $/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	e8 97 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	e8 18 f4 ff ff       	call   f01012c9 <page_free>$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	00 $/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	00 $/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	e8 db f6 ff ff       	call   f01015ad <page_insert>$/;"	l
f0101ed2	obj/kern/kernel.asm	/^f0101ed2:	85 c0                	test   %eax,%eax$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	74 24                	je     f0101efa <mem_init+0x8b0>$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	c7 44 24 0c 6c 6f 10 	movl   $0xf0106f6c,0xc(%esp)$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	f0 $/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	f0 $/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	00 $/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	e8 46 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	8b 0d 0c 1f 34 f0    	mov    0xf0341f0c,%ecx$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	a1 10 1f 34 f0       	mov    0xf0341f10,%eax$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	89 d8                	mov    %ebx,%eax$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	39 c2                	cmp    %eax,%edx$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	74 24                	je     f0101f46 <mem_init+0x8fc>$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	c7 44 24 0c 9c 6f 10 	movl   $0xf0106f9c,0xc(%esp)$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	f0 $/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	f0 $/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	c7 44 24 04 18 04 00 	movl   $0x418,0x4(%esp)$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	00 $/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	e8 fa e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f4b	obj/kern/kernel.asm	/^f0101f4b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	e8 e0 ec ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	89 fa                	mov    %edi,%edx$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	74 24                	je     f0101f86 <mem_init+0x93c>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	c7 44 24 0c c4 6f 10 	movl   $0xf0106fc4,0xc(%esp)$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	f0 $/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	f0 $/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	00 $/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	e8 ba e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	74 24                	je     f0101fb1 <mem_init+0x967>$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	c7 44 24 0c e5 76 10 	movl   $0xf01076e5,0xc(%esp)$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	f0 $/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	f0 $/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	00 $/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	e8 8f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	74 24                	je     f0101fdc <mem_init+0x992>$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	c7 44 24 0c f6 76 10 	movl   $0xf01076f6,0xc(%esp)$/;"	l
f0101fbf	obj/kern/kernel.asm	/^f0101fbf:	f0 $/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	f0 $/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	00 $/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	e8 64 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	00 $/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	00 $/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	e8 b2 f5 ff ff       	call   f01015ad <page_insert>$/;"	l
f0101ffb	obj/kern/kernel.asm	/^f0101ffb:	85 c0                	test   %eax,%eax$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	74 24                	je     f0102023 <mem_init+0x9d9>$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	c7 44 24 0c f4 6f 10 	movl   $0xf0106ff4,0xc(%esp)$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	f0 $/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	f0 $/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	00 $/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	e8 1d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	e8 01 ec ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	89 f2                	mov    %esi,%edx$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	39 d0                	cmp    %edx,%eax$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	74 24                	je     f0102068 <mem_init+0xa1e>$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	c7 44 24 0c 30 70 10 	movl   $0xf0107030,0xc(%esp)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	f0 $/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	f0 $/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	00 $/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	e8 d8 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	74 24                	je     f0102093 <mem_init+0xa49>$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	c7 44 24 0c 07 77 10 	movl   $0xf0107707,0xc(%esp)$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	f0 $/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	f0 $/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	c7 44 24 04 20 04 00 	movl   $0x420,0x4(%esp)$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	00 $/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	e8 ad df ff ff       	call   f0100040 <_panic>$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	e8 92 f1 ff ff       	call   f0101231 <page_alloc>$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	85 c0                	test   %eax,%eax$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	74 24                	je     f01020c7 <mem_init+0xa7d>$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	c7 44 24 0c 79 76 10 	movl   $0xf0107679,0xc(%esp)$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	f0 $/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	f0 $/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	00 $/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	e8 79 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	00 $/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	00 $/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	e8 c5 f4 ff ff       	call   f01015ad <page_insert>$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	85 c0                	test   %eax,%eax$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	74 24                	je     f0102110 <mem_init+0xac6>$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	c7 44 24 0c f4 6f 10 	movl   $0xf0106ff4,0xc(%esp)$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	f0 $/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	f0 $/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	00 $/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	e8 30 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	e8 14 eb ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	89 f2                	mov    %esi,%edx$/;"	l
f0102121	obj/kern/kernel.asm	/^f0102121:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	39 d0                	cmp    %edx,%eax$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	74 24                	je     f0102155 <mem_init+0xb0b>$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	c7 44 24 0c 30 70 10 	movl   $0xf0107030,0xc(%esp)$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	f0 $/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	f0 $/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	00 $/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	e8 eb de ff ff       	call   f0100040 <_panic>$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	74 24                	je     f0102180 <mem_init+0xb36>$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	c7 44 24 0c 07 77 10 	movl   $0xf0107707,0xc(%esp)$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	f0 $/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	f0 $/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	00 $/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	e8 c0 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	e8 a5 f0 ff ff       	call   f0101231 <page_alloc>$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	85 c0                	test   %eax,%eax$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	74 24                	je     f01021b4 <mem_init+0xb6a>$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	c7 44 24 0c 79 76 10 	movl   $0xf0107679,0xc(%esp)$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	f0 $/;"	l
f0102198	obj/kern/kernel.asm	/^f0102198:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	f0 $/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	00 $/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	e8 8c de ff ff       	call   f0100040 <_panic>$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	8b 15 0c 1f 34 f0    	mov    0xf0341f0c,%edx$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	8b 02                	mov    (%edx),%eax$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	89 c1                	mov    %eax,%ecx$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	3b 0d 08 1f 34 f0    	cmp    0xf0341f08,%ecx$/;"	l
f01021cc	obj/kern/kernel.asm	/^f01021cc:	72 20                	jb     f01021ee <mem_init+0xba4>$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	f0 $/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	00 $/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	e8 52 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	00 $/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	00 $/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	e8 07 f1 ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	83 c2 04             	add    $0x4,%edx$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	39 d0                	cmp    %edx,%eax$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	74 24                	je     f010223c <mem_init+0xbf2>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 44 24 0c 60 70 10 	movl   $0xf0107060,0xc(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	f0 $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	f0 $/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	00 $/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	e8 04 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	00 $/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	00 $/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	e8 50 f3 ff ff       	call   f01015ad <page_insert>$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	85 c0                	test   %eax,%eax$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	74 24                	je     f0102285 <mem_init+0xc3b>$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	c7 44 24 0c a0 70 10 	movl   $0xf01070a0,0xc(%esp)$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	f0 $/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	f0 $/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f0102278	obj/kern/kernel.asm	/^f0102278:	00 $/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	e8 bb dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	8b 0d 0c 1f 34 f0    	mov    0xf0341f0c,%ecx$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	89 c8                	mov    %ecx,%eax$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	e8 99 e9 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	89 f2                	mov    %esi,%edx$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	39 d0                	cmp    %edx,%eax$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	74 24                	je     f01022d0 <mem_init+0xc86>$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	c7 44 24 0c 30 70 10 	movl   $0xf0107030,0xc(%esp)$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	f0 $/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	f0 $/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	c7 44 24 04 34 04 00 	movl   $0x434,0x4(%esp)$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	00 $/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	e8 70 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	74 24                	je     f01022fb <mem_init+0xcb1>$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	c7 44 24 0c 07 77 10 	movl   $0xf0107707,0xc(%esp)$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	f0 $/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	f0 $/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	c7 44 24 04 35 04 00 	movl   $0x435,0x4(%esp)$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	00 $/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	e8 45 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	00 $/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	00 $/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	e8 ff ef ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	75 24                	jne    f010233f <mem_init+0xcf5>$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 0c e0 70 10 	movl   $0xf01070e0,0xc(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	f0 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	f0 $/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	00 $/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	e8 01 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	75 24                	jne    f010236d <mem_init+0xd23>$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	c7 44 24 0c 18 77 10 	movl   $0xf0107718,0xc(%esp)$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	f0 $/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102358	obj/kern/kernel.asm	/^f0102358:	f0 $/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	c7 44 24 04 37 04 00 	movl   $0x437,0x4(%esp)$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	00 $/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	e8 d3 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	00 $/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	00 $/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	e8 24 f2 ff ff       	call   f01015ad <page_insert>$/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	85 c0                	test   %eax,%eax$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	78 24                	js     f01023b1 <mem_init+0xd67>$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	c7 44 24 0c 14 71 10 	movl   $0xf0107114,0xc(%esp)$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	f0 $/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	f0 $/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	c7 44 24 04 3a 04 00 	movl   $0x43a,0x4(%esp)$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	00 $/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	e8 8f dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	00 $/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	00 $/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	e8 db f1 ff ff       	call   f01015ad <page_insert>$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	85 c0                	test   %eax,%eax$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	74 24                	je     f01023fa <mem_init+0xdb0>$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	c7 44 24 0c 4c 71 10 	movl   $0xf010714c,0xc(%esp)$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	f0 $/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	f0 $/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	c7 44 24 04 3d 04 00 	movl   $0x43d,0x4(%esp)$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	00 $/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	e8 46 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	00 $/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	00 $/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	e8 fe ee ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	74 24                	je     f0102440 <mem_init+0xdf6>$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	c7 44 24 0c 88 71 10 	movl   $0xf0107188,0xc(%esp)$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	f0 $/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	f0 $/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	c7 44 24 04 3e 04 00 	movl   $0x43e,0x4(%esp)$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	00 $/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	e8 00 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	e8 e1 e7 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	89 f8                	mov    %edi,%eax$/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	74 24                	je     f010248c <mem_init+0xe42>$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	c7 44 24 0c c0 71 10 	movl   $0xf01071c0,0xc(%esp)$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	f0 $/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102477	obj/kern/kernel.asm	/^f0102477:	f0 $/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	00 $/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	e8 b4 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	e8 9a e7 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	74 24                	je     f01024c2 <mem_init+0xe78>$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	c7 44 24 0c ec 71 10 	movl   $0xf01071ec,0xc(%esp)$/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	f0 $/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	f0 $/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	00 $/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	e8 7e db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	74 24                	je     f01024ed <mem_init+0xea3>$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	c7 44 24 0c 2e 77 10 	movl   $0xf010772e,0xc(%esp)$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	f0 $/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	f0 $/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	c7 44 24 04 44 04 00 	movl   $0x444,0x4(%esp)$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	00 $/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	e8 53 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	74 24                	je     f0102518 <mem_init+0xece>$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	c7 44 24 0c 3f 77 10 	movl   $0xf010773f,0xc(%esp)$/;"	l
f01024fb	obj/kern/kernel.asm	/^f01024fb:	f0 $/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	f0 $/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	c7 44 24 04 45 04 00 	movl   $0x445,0x4(%esp)$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	00 $/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	e8 28 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	e8 0d ed ff ff       	call   f0101231 <page_alloc>$/;"	l
f0102524	obj/kern/kernel.asm	/^f0102524:	85 c0                	test   %eax,%eax$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	74 04                	je     f010252c <mem_init+0xee2>$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	39 c6                	cmp    %eax,%esi$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	74 24                	je     f0102550 <mem_init+0xf06>$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	c7 44 24 0c 1c 72 10 	movl   $0xf010721c,0xc(%esp)$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	f0 $/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	f0 $/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	00 $/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	e8 f0 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	00 $/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	e8 ff ef ff ff       	call   f0101564 <page_remove>$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	8b 15 0c 1f 34 f0    	mov    0xf0341f0c,%edx$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102573	obj/kern/kernel.asm	/^f0102573:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	e8 b8 e6 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	74 24                	je     f01025a4 <mem_init+0xf5a>$/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	c7 44 24 0c 40 72 10 	movl   $0xf0107240,0xc(%esp)$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	f0 $/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	f0 $/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	c7 44 24 04 4c 04 00 	movl   $0x44c,0x4(%esp)$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	00 $/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	e8 9c da ff ff       	call   f0100040 <_panic>$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	e8 82 e6 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	89 fa                	mov    %edi,%edx$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	39 d0                	cmp    %edx,%eax$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	74 24                	je     f01025e7 <mem_init+0xf9d>$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	c7 44 24 0c ec 71 10 	movl   $0xf01071ec,0xc(%esp)$/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	f0 $/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	f0 $/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	c7 44 24 04 4d 04 00 	movl   $0x44d,0x4(%esp)$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	00 $/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	e8 59 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	74 24                	je     f0102612 <mem_init+0xfc8>$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	c7 44 24 0c e5 76 10 	movl   $0xf01076e5,0xc(%esp)$/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	f0 $/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	f0 $/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	c7 44 24 04 4e 04 00 	movl   $0x44e,0x4(%esp)$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	00 $/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	e8 2e da ff ff       	call   f0100040 <_panic>$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	74 24                	je     f010263d <mem_init+0xff3>$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	c7 44 24 0c 3f 77 10 	movl   $0xf010773f,0xc(%esp)$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	f0 $/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	f0 $/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	c7 44 24 04 4f 04 00 	movl   $0x44f,0x4(%esp)$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	00 $/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	e8 03 da ff ff       	call   f0100040 <_panic>$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102644	obj/kern/kernel.asm	/^f0102644:	00 $/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	e8 14 ef ff ff       	call   f0101564 <page_remove>$/;"	l
f0102650	obj/kern/kernel.asm	/^f0102650:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	e8 d1 e5 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102665	obj/kern/kernel.asm	/^f0102665:	74 24                	je     f010268b <mem_init+0x1041>$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	c7 44 24 0c 40 72 10 	movl   $0xf0107240,0xc(%esp)$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	f0 $/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	f0 $/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	00 $/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	e8 b5 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	e8 9b e5 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	74 24                	je     f01026c1 <mem_init+0x1077>$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	c7 44 24 0c 64 72 10 	movl   $0xf0107264,0xc(%esp)$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	f0 $/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	f0 $/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	c7 44 24 04 54 04 00 	movl   $0x454,0x4(%esp)$/;"	l
f01026b4	obj/kern/kernel.asm	/^f01026b4:	00 $/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01026bc	obj/kern/kernel.asm	/^f01026bc:	e8 7f d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	74 24                	je     f01026ec <mem_init+0x10a2>$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	c7 44 24 0c 50 77 10 	movl   $0xf0107750,0xc(%esp)$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	f0 $/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	f0 $/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	00 $/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	e8 54 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	74 24                	je     f0102717 <mem_init+0x10cd>$/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	c7 44 24 0c 3f 77 10 	movl   $0xf010773f,0xc(%esp)$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	f0 $/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	f0 $/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	c7 44 24 04 56 04 00 	movl   $0x456,0x4(%esp)$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	00 $/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	e8 29 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010271e	obj/kern/kernel.asm	/^f010271e:	e8 0e eb ff ff       	call   f0101231 <page_alloc>$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	85 c0                	test   %eax,%eax$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	74 04                	je     f010272b <mem_init+0x10e1>$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	39 c7                	cmp    %eax,%edi$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	74 24                	je     f010274f <mem_init+0x1105>$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 44 24 0c 8c 72 10 	movl   $0xf010728c,0xc(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	f0 $/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	f0 $/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	c7 44 24 04 59 04 00 	movl   $0x459,0x4(%esp)$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	00 $/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	e8 f1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	e8 d6 ea ff ff       	call   f0101231 <page_alloc>$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	85 c0                	test   %eax,%eax$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	74 24                	je     f0102783 <mem_init+0x1139>$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	c7 44 24 0c 79 76 10 	movl   $0xf0107679,0xc(%esp)$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	f0 $/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	f0 $/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	c7 44 24 04 5c 04 00 	movl   $0x45c,0x4(%esp)$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	00 $/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	e8 bd d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	8b 08                	mov    (%eax),%ecx$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	89 da                	mov    %ebx,%edx$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	39 d1                	cmp    %edx,%ecx$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	74 24                	je     f01027c6 <mem_init+0x117c>$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	c7 44 24 0c 9c 6f 10 	movl   $0xf0106f9c,0xc(%esp)$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	f0 $/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	f0 $/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	c7 44 24 04 5f 04 00 	movl   $0x45f,0x4(%esp)$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	00 $/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	e8 7a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	74 24                	je     f01027f7 <mem_init+0x11ad>$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	c7 44 24 0c f6 76 10 	movl   $0xf01076f6,0xc(%esp)$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	f0 $/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	f0 $/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	c7 44 24 04 61 04 00 	movl   $0x461,0x4(%esp)$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	00 $/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	e8 49 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	e8 c4 ea ff ff       	call   f01012c9 <page_free>$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	00 $/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	00 $/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	e8 f3 ea ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	8b 0d 0c 1f 34 f0    	mov    0xf0341f0c,%ecx$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f010282e	obj/kern/kernel.asm	/^f010282e:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	8b 15 08 1f 34 f0    	mov    0xf0341f08,%edx$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	72 23                	jb     f0102874 <mem_init+0x122a>$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	f0 $/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	c7 44 24 04 68 04 00 	movl   $0x468,0x4(%esp)$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	00 $/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	e8 cc d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	39 d0                	cmp    %edx,%eax$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	74 24                	je     f01028a5 <mem_init+0x125b>$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	c7 44 24 0c 61 77 10 	movl   $0xf0107761,0xc(%esp)$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	f0 $/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	f0 $/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	c7 44 24 04 69 04 00 	movl   $0x469,0x4(%esp)$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	00 $/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	e8 9b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	89 d8                	mov    %ebx,%eax$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	89 c1                	mov    %eax,%ecx$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	77 20                	ja     f01028ea <mem_init+0x12a0>$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	f0 $/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	00 $/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	e8 56 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	00 $/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	00 $/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01028ff	obj/kern/kernel.asm	/^f01028ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	e8 98 30 00 00       	call   f010599f <memset>$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	e8 ba e9 ff ff       	call   f01012c9 <page_free>$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	00 $/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	00 $/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	e8 e9 e9 ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	89 da                	mov    %ebx,%edx$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	89 d0                	mov    %edx,%eax$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	72 20                	jb     f0102967 <mem_init+0x131d>$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	f0 $/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	00 $/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	e8 d9 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102970	obj/kern/kernel.asm	/^f0102970:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	75 11                	jne    f010298a <mem_init+0x1340>$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	74 24                	je     f01029ae <mem_init+0x1364>$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	c7 44 24 0c 79 77 10 	movl   $0xf0107779,0xc(%esp)$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	f0 $/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	f0 $/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	c7 44 24 04 73 04 00 	movl   $0x473,0x4(%esp)$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	00 $/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	e8 92 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	83 c0 04             	add    $0x4,%eax$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	39 d0                	cmp    %edx,%eax$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	75 d0                	jne    f0102985 <mem_init+0x133b>$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	89 0d 60 12 34 f0    	mov    %ecx,0xf0341260$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	e8 f2 e8 ff ff       	call   f01012c9 <page_free>$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	e8 ea e8 ff ff       	call   f01012c9 <page_free>$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	e8 e2 e8 ff ff       	call   f01012c9 <page_free>$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	c7 04 24 90 77 10 f0 	movl   $0xf0107790,(%esp)$/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	e8 e5 15 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	c7 04 24 a9 77 10 f0 	movl   $0xf01077a9,(%esp)$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	e8 d9 15 00 00       	call   f0103fd8 <cprintf>$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	a1 10 1f 34 f0       	mov    0xf0341f10,%eax$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	77 20                	ja     f0102a2b <mem_init+0x13e1>$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	f0 $/;"	l
f0102a17	obj/kern/kernel.asm	/^f0102a17:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	00 $/;"	l
f0102a1f	obj/kern/kernel.asm	/^f0102a1f:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	e8 15 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	8b 15 08 1f 34 f0    	mov    0xf0341f08,%edx$/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	00 $/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	e8 c6 e9 ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c7 04 24 b8 77 10 f0 	movl   $0xf01077b8,(%esp)$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	e8 6f 15 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	a1 6c 12 34 f0       	mov    0xf034126c,%eax$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	77 20                	ja     f0102a95 <mem_init+0x144b>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102a79	obj/kern/kernel.asm	/^f0102a79:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	f0 $/;"	l
f0102a81	obj/kern/kernel.asm	/^f0102a81:	c7 44 24 04 d9 00 00 	movl   $0xd9,0x4(%esp)$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	00 $/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	e8 ab d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	00 $/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	b9 00 00 02 00       	mov    $0x20000,%ecx$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	e8 6a e9 ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	c7 04 24 c7 77 10 f0 	movl   $0xf01077c7,(%esp)$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	e8 13 15 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	b8 00 e0 11 f0       	mov    $0xf011e000,%eax$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	77 20                	ja     f0102af1 <mem_init+0x14a7>$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	f0 $/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	c7 44 24 04 e8 00 00 	movl   $0xe8,0x4(%esp)$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	00 $/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	e8 4f d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	00 $/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	c7 04 24 00 e0 11 00 	movl   $0x11e000,(%esp)$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	e8 0f e9 ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	c7 04 24 d6 77 10 f0 	movl   $0xf01077d6,(%esp)$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	e8 b8 14 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	00 $/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	e8 e0 e8 ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0102b43	obj/kern/kernel.asm	/^f0102b43:	c7 04 24 e5 77 10 f0 	movl   $0xf01077e5,(%esp)$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	e8 89 14 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	c7 04 24 f3 77 10 f0 	movl   $0xf01077f3,(%esp)$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	e8 7d 14 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	00 $/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	c7 04 24 00 00 00 fe 	movl   $0xfe000000,(%esp)$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	b9 00 00 00 02       	mov    $0x2000000,%ecx$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	ba 00 00 00 fe       	mov    $0xfe000000,%edx$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	e8 a5 e8 ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	b8 00 30 34 f0       	mov    $0xf0343000,%eax$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	0f 87 87 08 00 00    	ja     f0103415 <mem_init+0x1dcb>$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	eb 0c                	jmp    f0102b9c <mem_init+0x1552>$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	89 d8                	mov    %ebx,%eax$/;"	l
f0102b92	obj/kern/kernel.asm	/^f0102b92:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	77 27                	ja     f0102bc1 <mem_init+0x1577>$/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	eb 05                	jmp    f0102ba1 <mem_init+0x1557>$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	b8 00 30 34 f0       	mov    $0xf0343000,%eax$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	f0 $/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	c7 44 24 04 34 01 00 	movl   $0x134,0x4(%esp)$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	00 $/;"	l
f0102bb5	obj/kern/kernel.asm	/^f0102bb5:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	e8 7f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	00 $/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	89 f2                	mov    %esi,%edx$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	e8 40 e8 ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	81 fe 00 80 b7 ef    	cmp    $0xefb78000,%esi$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	75 99                	jne    f0102b90 <mem_init+0x1546>$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	c7 04 24 0e 78 10 f0 	movl   $0xf010780e,(%esp)$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	e8 d5 13 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	8b 35 0c 1f 34 f0    	mov    0xf0341f0c,%esi$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	a1 08 1f 34 f0       	mov    0xf0341f08,%eax$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	8d 3c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%edi$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	0f 84 80 00 00 00    	je     f0102ca4 <mem_init+0x165a>$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	89 f0                	mov    %esi,%eax$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	e8 fd df ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	8b 15 10 1f 34 f0    	mov    0xf0341f10,%edx$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	77 20                	ja     f0102c64 <mem_init+0x161a>$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	f0 $/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	00 $/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	e8 dc d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	39 d0                	cmp    %edx,%eax$/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	74 24                	je     f0102c93 <mem_init+0x1649>$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	c7 44 24 0c b0 72 10 	movl   $0xf01072b0,0xc(%esp)$/;"	l
f0102c76	obj/kern/kernel.asm	/^f0102c76:	f0 $/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102c7e	obj/kern/kernel.asm	/^f0102c7e:	f0 $/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f0102c86	obj/kern/kernel.asm	/^f0102c86:	00 $/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102c8e	obj/kern/kernel.asm	/^f0102c8e:	e8 ad d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	39 df                	cmp    %ebx,%edi$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	77 8c                	ja     f0102c29 <mem_init+0x15df>$/;"	l
f0102c9d	obj/kern/kernel.asm	/^f0102c9d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	eb 05                	jmp    f0102ca9 <mem_init+0x165f>$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	89 f0                	mov    %esi,%eax$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	e8 7d df ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	8b 15 6c 12 34 f0    	mov    0xf034126c,%edx$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	77 20                	ja     f0102ce4 <mem_init+0x169a>$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	f0 $/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	00 $/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	e8 5c d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	39 d0                	cmp    %edx,%eax$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	74 24                	je     f0102d13 <mem_init+0x16c9>$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	c7 44 24 0c e4 72 10 	movl   $0xf01072e4,0xc(%esp)$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	f0 $/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	f0 $/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	00 $/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	e8 2d d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	81 fb 00 00 02 00    	cmp    $0x20000,%ebx$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	75 88                	jne    f0102ca9 <mem_init+0x165f>$/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	89 f0                	mov    %esi,%eax$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	e8 df de ff ff       	call   f0100c0c <check_va2pa_large>$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	85 c0                	test   %eax,%eax$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	74 0a                	je     f0102d3b <mem_init+0x16f1>$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	75 63                	jne    f0102d9c <mem_init+0x1752>$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	eb 5a                	jmp    f0102d95 <mem_init+0x174b>$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	75 37                	jne    f0102d7a <mem_init+0x1730>$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	eb 44                	jmp    f0102d89 <mem_init+0x173f>$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	8d 90 00 00 40 f0    	lea    -0xfc00000(%eax),%edx$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	89 f0                	mov    %esi,%eax$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	e8 ba de ff ff       	call   f0100c0c <check_va2pa_large>$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	74 29                	je     f0102d7f <mem_init+0x1735>$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	c7 44 24 0c 18 73 10 	movl   $0xf0107318,0xc(%esp)$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	f0 $/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	f0 $/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	00 $/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	e8 c6 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	8d 98 00 00 40 00    	lea    0x400000(%eax),%ebx$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	72 bc                	jb     f0102d45 <mem_init+0x16fb>$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	c7 04 24 28 78 10 f0 	movl   $0xf0107828,(%esp)$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	e8 43 12 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	eb 46                	jmp    f0102de2 <mem_init+0x1798>$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	89 f0                	mov    %esi,%eax$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	e8 85 de ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	74 24                	je     f0102dd6 <mem_init+0x178c>$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	c7 44 24 0c 44 73 10 	movl   $0xf0107344,0xc(%esp)$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	f0 $/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	f0 $/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	00 $/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	e8 6a d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	72 c1                	jb     f0102da1 <mem_init+0x1757>$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	eb b3                	jmp    f0102d95 <mem_init+0x174b>$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	89 da                	mov    %ebx,%edx$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	89 f0                	mov    %esi,%eax$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	e8 48 de ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	74 24                	je     f0102e13 <mem_init+0x17c9>$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	c7 44 24 0c 3f 78 10 	movl   $0xf010783f,0xc(%esp)$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	f0 $/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	f0 $/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	00 $/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	e8 2d d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e19	obj/kern/kernel.asm	/^f0102e19:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	75 c1                	jne    f0102de2 <mem_init+0x1798>$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	c7 45 cc 00 30 34 f0 	movl   $0xf0343000,-0x34(%ebp)$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	bf 00 00 bf ef       	mov    $0xefbf0000,%edi$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	8d 9f 00 80 00 00    	lea    0x8000(%edi),%ebx$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	89 d6                	mov    %edx,%esi$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	8d 8f 00 00 01 00    	lea    0x10000(%edi),%ecx$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	89 da                	mov    %ebx,%edx$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	e8 dc dd ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	77 23                	ja     f0102e83 <mem_init+0x1839>$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	f0 $/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	00 $/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	e8 bd d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	39 f0                	cmp    %esi,%eax$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	74 24                	je     f0102eab <mem_init+0x1861>$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	c7 44 24 0c 6c 73 10 	movl   $0xf010736c,0xc(%esp)$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	f0 $/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	f0 $/;"	l
f0102e97	obj/kern/kernel.asm	/^f0102e97:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	00 $/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	e8 95 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	0f 85 87 05 00 00    	jne    f0103447 <mem_init+0x1dfd>$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	89 f0                	mov    %esi,%eax$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	e8 61 dd ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	74 24                	je     f0102efb <mem_init+0x18b1>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	c7 44 24 0c b4 73 10 	movl   $0xf01073b4,0xc(%esp)$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	f0 $/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	f0 $/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	00 $/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	e8 45 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	75 bf                	jne    f0102ec8 <mem_init+0x187e>$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	81 ef 00 00 01 00    	sub    $0x10000,%edi$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	81 45 cc 00 80 00 00 	addl   $0x8000,-0x34(%ebp)$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	81 ff 00 00 b7 ef    	cmp    $0xefb70000,%edi$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	0f 85 0e ff ff ff    	jne    f0102e30 <mem_init+0x17e6>$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	77 2e                	ja     f0102f63 <mem_init+0x1919>$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	0f 85 aa 00 00 00    	jne    f0102fe9 <mem_init+0x199f>$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	c7 44 24 0c 5a 78 10 	movl   $0xf010785a,0xc(%esp)$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	f0 $/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	f0 $/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	00 $/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	e8 dd d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	76 55                	jbe    f0102fbf <mem_init+0x1975>$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0102f6d	obj/kern/kernel.asm	/^f0102f6d:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	75 24                	jne    f0102f96 <mem_init+0x194c>$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	c7 44 24 0c 5a 78 10 	movl   $0xf010785a,0xc(%esp)$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	f0 $/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	f0 $/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	00 $/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	e8 aa d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99:	75 4e                	jne    f0102fe9 <mem_init+0x199f>$/;"	l
f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	c7 44 24 0c 6b 78 10 	movl   $0xf010786b,0xc(%esp)$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	f0 $/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	f0 $/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	00 $/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	e8 81 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	74 24                	je     f0102fe9 <mem_init+0x199f>$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	c7 44 24 0c 7c 78 10 	movl   $0xf010787c,0xc(%esp)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	f0 $/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	f0 $/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	00 $/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	e8 57 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	40                   	inc    %eax$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	0f 85 35 ff ff ff    	jne    f0102f2a <mem_init+0x18e0>$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	c7 04 24 d8 73 10 f0 	movl   $0xf01073d8,(%esp)$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	e8 d7 0f 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	77 20                	ja     f010302d <mem_init+0x19e3>$/;"	l
f010300d	obj/kern/kernel.asm	/^f010300d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	f0 $/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	00 $/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	e8 13 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010303a	obj/kern/kernel.asm	/^f010303a:	e8 88 dd ff ff       	call   f0100dc7 <check_page_free_list>$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	e8 d8 e1 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	89 c6                	mov    %eax,%esi$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	85 c0                	test   %eax,%eax$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	75 24                	jne    f0103083 <mem_init+0x1a39>$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	c7 44 24 0c ce 75 10 	movl   $0xf01075ce,0xc(%esp)$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	f0 $/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	f0 $/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	c7 44 24 04 fb 04 00 	movl   $0x4fb,0x4(%esp)$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	00 $/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	e8 bd cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	e8 a2 e1 ff ff       	call   f0101231 <page_alloc>$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	89 c7                	mov    %eax,%edi$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	85 c0                	test   %eax,%eax$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	75 24                	jne    f01030b9 <mem_init+0x1a6f>$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	c7 44 24 0c e4 75 10 	movl   $0xf01075e4,0xc(%esp)$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	f0 $/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	f0 $/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	c7 44 24 04 fc 04 00 	movl   $0x4fc,0x4(%esp)$/;"	l
f01030ac	obj/kern/kernel.asm	/^f01030ac:	00 $/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	e8 87 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	e8 6c e1 ff ff       	call   f0101231 <page_alloc>$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	89 c3                	mov    %eax,%ebx$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	85 c0                	test   %eax,%eax$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	75 24                	jne    f01030ef <mem_init+0x1aa5>$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	c7 44 24 0c fa 75 10 	movl   $0xf01075fa,0xc(%esp)$/;"	l
f01030d2	obj/kern/kernel.asm	/^f01030d2:	f0 $/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01030da	obj/kern/kernel.asm	/^f01030da:	f0 $/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	c7 44 24 04 fd 04 00 	movl   $0x4fd,0x4(%esp)$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	00 $/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	e8 51 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	e8 d2 e1 ff ff       	call   f01012c9 <page_free>$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	89 f8                	mov    %edi,%eax$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	89 c2                	mov    %eax,%edx$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	72 20                	jb     f0103132 <mem_init+0x1ae8>$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	f0 $/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	00 $/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	e8 0e cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	00 $/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	00 $/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	e8 50 28 00 00       	call   f010599f <memset>$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	89 d8                	mov    %ebx,%eax$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	89 c2                	mov    %eax,%edx$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	72 20                	jb     f010318a <mem_init+0x1b40>$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	f0 $/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	00 $/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0103185	obj/kern/kernel.asm	/^f0103185:	e8 b6 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	00 $/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	00 $/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	e8 f8 27 00 00       	call   f010599f <memset>$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	00 $/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	00 $/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	e8 e5 e3 ff ff       	call   f01015ad <page_insert>$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	74 24                	je     f01031f3 <mem_init+0x1ba9>$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	c7 44 24 0c e5 76 10 	movl   $0xf01076e5,0xc(%esp)$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	f0 $/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	f0 $/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	c7 44 24 04 02 05 00 	movl   $0x502,0x4(%esp)$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	00 $/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	e8 4d ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	01 01 01 $/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	74 24                	je     f0103223 <mem_init+0x1bd9>$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	c7 44 24 0c f8 73 10 	movl   $0xf01073f8,0xc(%esp)$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	f0 $/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	f0 $/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	c7 44 24 04 03 05 00 	movl   $0x503,0x4(%esp)$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	00 $/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e:	e8 1d ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	00 $/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	00 $/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	e8 69 e3 ff ff       	call   f01015ad <page_insert>$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	02 02 02 $/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	74 24                	je     f0103274 <mem_init+0x1c2a>$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	c7 44 24 0c 1c 74 10 	movl   $0xf010741c,0xc(%esp)$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	f0 $/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	f0 $/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	c7 44 24 04 05 05 00 	movl   $0x505,0x4(%esp)$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	00 $/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	e8 cc cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	74 24                	je     f010329f <mem_init+0x1c55>$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	c7 44 24 0c 07 77 10 	movl   $0xf0107707,0xc(%esp)$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	f0 $/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	f0 $/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	c7 44 24 04 06 05 00 	movl   $0x506,0x4(%esp)$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	00 $/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	e8 a1 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	74 24                	je     f01032ca <mem_init+0x1c80>$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	c7 44 24 0c 50 77 10 	movl   $0xf0107750,0xc(%esp)$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	f0 $/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	f0 $/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	c7 44 24 04 07 05 00 	movl   $0x507,0x4(%esp)$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	00 $/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	e8 76 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	03 03 03 $/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	89 d8                	mov    %ebx,%eax$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	2b 05 10 1f 34 f0    	sub    0xf0341f10,%eax$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	89 c2                	mov    %eax,%edx$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	3b 15 08 1f 34 f0    	cmp    0xf0341f08,%edx$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	72 20                	jb     f010330f <mem_init+0x1cc5>$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	f0 $/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	00 $/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	e8 31 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	03 03 03 $/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	74 24                	je     f010333f <mem_init+0x1cf5>$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	c7 44 24 0c 40 74 10 	movl   $0xf0107440,0xc(%esp)$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	f0 $/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	f0 $/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	c7 44 24 04 09 05 00 	movl   $0x509,0x4(%esp)$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	00 $/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	e8 01 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	00 $/;"	l
f0103347	obj/kern/kernel.asm	/^f0103347:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	e8 10 e2 ff ff       	call   f0101564 <page_remove>$/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0103359	obj/kern/kernel.asm	/^f0103359:	74 24                	je     f010337f <mem_init+0x1d35>$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	c7 44 24 0c 3f 77 10 	movl   $0xf010773f,0xc(%esp)$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	f0 $/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	f0 $/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	c7 44 24 04 0b 05 00 	movl   $0x50b,0x4(%esp)$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	00 $/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	e8 c1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	89 f2                	mov    %esi,%edx$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	74 24                	je     f01033c2 <mem_init+0x1d78>$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	c7 44 24 0c 9c 6f 10 	movl   $0xf0106f9c,0xc(%esp)$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	f0 $/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	f0 $/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	c7 44 24 04 0e 05 00 	movl   $0x50e,0x4(%esp)$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	00 $/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	e8 7e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	74 24                	je     f01033f3 <mem_init+0x1da9>$/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	c7 44 24 0c f6 76 10 	movl   $0xf01076f6,0xc(%esp)$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	f0 $/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	f0 $/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	c7 44 24 04 10 05 00 	movl   $0x510,0x4(%esp)$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	00 $/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	c7 04 24 cd 74 10 f0 	movl   $0xf01074cd,(%esp)$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	e8 4d cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	e8 c8 de ff ff       	call   f01012c9 <page_free>$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	c7 04 24 6c 74 10 f0 	movl   $0xf010746c,(%esp)$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	e8 cb 0b 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	5b                   	pop    %ebx$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	5e                   	pop    %esi$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	5f                   	pop    %edi$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	5d                   	pop    %ebp$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	c3                   	ret    $/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	00 $/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	c7 04 24 00 30 34 00 	movl   $0x343000,(%esp)$/;"	l
f0103424	obj/kern/kernel.asm	/^f0103424:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0103433	obj/kern/kernel.asm	/^f0103433:	e8 eb df ff ff       	call   f0101423 <boot_map_region>$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	bb 00 b0 34 f0       	mov    $0xf034b000,%ebx$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	be 00 80 be ef       	mov    $0xefbe8000,%esi$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	e9 49 f7 ff ff       	jmp    f0102b90 <mem_init+0x1546>$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	89 da                	mov    %ebx,%edx$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	e8 e2 d7 ff ff       	call   f0100c33 <check_va2pa>$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	e9 2d fa ff ff       	jmp    f0102e83 <mem_init+0x1839>$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456 <user_mem_check>:$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	55                   	push   %ebp$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	89 e5                	mov    %esp,%ebp$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	57                   	push   %edi$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	56                   	push   %esi$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	53                   	push   %ebx$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	01 d8                	add    %ebx,%eax$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	83 cf 01             	or     $0x1,%edi$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	73 5c                	jae    f01034d3 <user_mem_check+0x7d>$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	76 17                	jbe    f0103496 <user_mem_check+0x40>$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	eb 08                	jmp    f0103489 <user_mem_check+0x33>$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	75 0d                	jne    f0103496 <user_mem_check+0x40>$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	89 1d 68 12 34 f0    	mov    %ebx,0xf0341268$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	eb 42                	jmp    f01034d8 <user_mem_check+0x82>$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	00 $/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	e8 68 de ff ff       	call   f0101315 <pgdir_walk>$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	89 fa                	mov    %edi,%edx$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	23 10                	and    (%eax),%edx$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	39 d7                	cmp    %edx,%edi$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	75 04                	jne    f01034b9 <user_mem_check+0x63>$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	85 c0                	test   %eax,%eax$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	75 0d                	jne    f01034c6 <user_mem_check+0x70>$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	89 1d 68 12 34 f0    	mov    %ebx,0xf0341268$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	eb 12                	jmp    f01034d8 <user_mem_check+0x82>$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	43                   	inc    %ebx$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	77 b5                	ja     f0103481 <user_mem_check+0x2b>$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	eb 05                	jmp    f01034d8 <user_mem_check+0x82>$/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	5b                   	pop    %ebx$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	5e                   	pop    %esi$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	5f                   	pop    %edi$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	5d                   	pop    %ebp$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	c3                   	ret    $/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0 <user_mem_assert>:$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	55                   	push   %ebp$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	53                   	push   %ebx$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	83 c8 04             	or     $0x4,%eax$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	e8 4c ff ff ff       	call   f0103456 <user_mem_check>$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	85 c0                	test   %eax,%eax$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	79 24                	jns    f0103532 <user_mem_assert+0x52>$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	a1 68 12 34 f0       	mov    0xf0341268,%eax$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	c7 04 24 98 74 10 f0 	movl   $0xf0107498,(%esp)$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	e8 ae 0a 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	e8 36 07 00 00       	call   f0103c68 <env_destroy>$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	5b                   	pop    %ebx$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	5d                   	pop    %ebp$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	c3                   	ret    $/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538 <envid2env>:$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	55                   	push   %ebp$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	89 e5                	mov    %esp,%ebp$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	57                   	push   %edi$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	56                   	push   %esi$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	53                   	push   %ebx$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	85 c0                	test   %eax,%eax$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	75 21                	jne    f010356c <envid2env+0x34>$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	e8 b0 2a 00 00       	call   f0106000 <cpunum>$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	29 c2                	sub    %eax,%edx$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	89 06                	mov    %eax,(%esi)$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	eb 7d                	jmp    f01035e9 <envid2env+0xb1>$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	89 c3                	mov    %eax,%ebx$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	03 1d 6c 12 34 f0    	add    0xf034126c,%ebx$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	74 05                	je     f0103588 <envid2env+0x50>$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	74 0d                	je     f0103595 <envid2env+0x5d>$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	eb 54                	jmp    f01035e9 <envid2env+0xb1>$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	74 47                	je     f01035e2 <envid2env+0xaa>$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	e8 60 2a 00 00       	call   f0106000 <cpunum>$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	29 c2                	sub    %eax,%edx$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	39 1c 85 28 20 34 f0 	cmp    %ebx,-0xfcbdfd8(,%eax,4)$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	74 2d                	je     f01035e2 <envid2env+0xaa>$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	e8 43 2a 00 00       	call   f0106000 <cpunum>$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	29 c2                	sub    %eax,%edx$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	74 0d                	je     f01035e2 <envid2env+0xaa>$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	eb 07                	jmp    f01035e9 <envid2env+0xb1>$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	5b                   	pop    %ebx$/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	5e                   	pop    %esi$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	5f                   	pop    %edi$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	5d                   	pop    %ebp$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	c3                   	ret    $/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1 <env_init_percpu>:$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	55                   	push   %ebp$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	b8 00 83 12 f0       	mov    $0xf0128300,%eax$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	8e e8                	mov    %eax,%gs$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	8e e0                	mov    %eax,%fs$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	b0 10                	mov    $0x10,%al$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	8e c0                	mov    %eax,%es$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	8e d8                	mov    %eax,%ds$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	8e d0                	mov    %eax,%ss$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	ea 14 36 10 f0 08 00 	ljmp   $0x8,$0xf0103614$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	b0 00                	mov    $0x0,%al$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	0f 00 d0             	lldt   %ax$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	5d                   	pop    %ebp$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	c3                   	ret    $/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b <env_init>:$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	55                   	push   %ebp$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	89 e5                	mov    %esp,%ebp$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	56                   	push   %esi$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	53                   	push   %ebx$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	00 $/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	c7 04 24 8c 78 10 f0 	movl   $0xf010788c,(%esp)$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	e8 a1 09 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	8b 35 6c 12 34 f0    	mov    0xf034126c,%esi$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	8b 0d 70 12 34 f0    	mov    0xf0341270,%ecx$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	8d 86 80 ff 01 00    	lea    0x1ff80(%esi),%eax$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	eb 02                	jmp    f0103652 <env_init+0x37>$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	89 c3                	mov    %eax,%ebx$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	4a                   	dec    %edx$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	75 f3                	jne    f0103650 <env_init+0x35>$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	89 35 70 12 34 f0    	mov    %esi,0xf0341270$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	c7 04 24 b4 78 10 f0 	movl   $0xf01078b4,(%esp)$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	e8 69 09 00 00       	call   f0103fd8 <cprintf>$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	e8 7d ff ff ff       	call   f01035f1 <env_init_percpu>$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	c7 04 24 25 79 10 f0 	movl   $0xf0107925,(%esp)$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	e8 58 09 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	5b                   	pop    %ebx$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	5e                   	pop    %esi$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	5d                   	pop    %ebp$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	c3                   	ret    $/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687 <env_alloc>:$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	55                   	push   %ebp$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	89 e5                	mov    %esp,%ebp$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	53                   	push   %ebx$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	8b 1d 70 12 34 f0    	mov    0xf0341270,%ebx$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	85 db                	test   %ebx,%ebx$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	0f 84 9f 01 00 00    	je     f010383b <env_alloc+0x1b4>$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	e8 89 db ff ff       	call   f0101231 <page_alloc>$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	85 c0                	test   %eax,%eax$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	0f 84 92 01 00 00    	je     f0103842 <env_alloc+0x1bb>$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	89 c2                	mov    %eax,%edx$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	2b 15 10 1f 34 f0    	sub    0xf0341f10,%edx$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	89 d1                	mov    %edx,%ecx$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	3b 0d 08 1f 34 f0    	cmp    0xf0341f08,%ecx$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	72 20                	jb     f01036eb <env_alloc+0x64>$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	f0 $/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	00 $/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	e8 55 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f01036f4	obj/kern/kernel.asm	/^f01036f4:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	8b 15 0c 1f 34 f0    	mov    0xf0341f0c,%edx$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	83 c0 04             	add    $0x4,%eax$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	75 e7                	jne    f01036fd <env_alloc+0x76>$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	77 20                	ja     f0103740 <env_alloc+0xb9>$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	f0 $/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	c7 44 24 04 d2 00 00 	movl   $0xd2,0x4(%esp)$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	00 $/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	e8 00 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	7f 05                	jg     f0103763 <env_alloc+0xdc>$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	89 da                	mov    %ebx,%edx$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	2b 15 6c 12 34 f0    	sub    0xf034126c,%edx$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	09 d0                	or     %edx,%eax$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	00 $/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	00 $/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	e8 f9 21 00 00       	call   f010599f <memset>$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	c7 43 6c 00 00 00 00 	movl   $0x0,0x6c(%ebx)$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	a3 70 12 34 f0       	mov    %eax,0xf0341270$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	89 18                	mov    %ebx,(%eax)$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	e8 18 28 00 00       	call   f0106000 <cpunum>$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	29 c2                	sub    %eax,%edx$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	83 3c 85 28 20 34 f0 	cmpl   $0x0,-0xfcbdfd8(,%eax,4)$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	00 $/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	74 1d                	je     f010381b <env_alloc+0x194>$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	e8 fd 27 00 00       	call   f0106000 <cpunum>$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	29 c2                	sub    %eax,%edx$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	eb 05                	jmp    f0103820 <env_alloc+0x199>$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	c7 04 24 42 79 10 f0 	movl   $0xf0107942,(%esp)$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	e8 a4 07 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	eb 0c                	jmp    f0103847 <env_alloc+0x1c0>$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	eb 05                	jmp    f0103847 <env_alloc+0x1c0>$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	83 c4 14             	add    $0x14,%esp$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	5b                   	pop    %ebx$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	5d                   	pop    %ebp$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	c3                   	ret    $/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d <region_alloc>:$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	55                   	push   %ebp$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	57                   	push   %edi$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	56                   	push   %esi$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	53                   	push   %ebx$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	89 c3                	mov    %eax,%ebx$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	89 c7                	mov    %eax,%edi$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	03 7d 10             	add    0x10(%ebp),%edi$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	81 c7 ff 0f 00 00    	add    $0xfff,%edi$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	73 51                	jae    f01038ca <region_alloc+0x7d>$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	e8 ac d9 ff ff       	call   f0101231 <page_alloc>$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	85 c0                	test   %eax,%eax$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	75 1c                	jne    f01038a5 <region_alloc+0x58>$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	c7 44 24 08 57 79 10 	movl   $0xf0107957,0x8(%esp)$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	f0 $/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	c7 44 24 04 41 01 00 	movl   $0x141,0x4(%esp)$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	00 $/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	e8 9b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	00 $/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	e8 ed dc ff ff       	call   f01015ad <page_insert>$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	39 df                	cmp    %ebx,%edi$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	77 af                	ja     f0103879 <region_alloc+0x2c>$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	5b                   	pop    %ebx$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	5e                   	pop    %esi$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	5f                   	pop    %edi$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	5d                   	pop    %ebp$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	c3                   	ret    $/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2 <env_create>:$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	55                   	push   %ebp$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	57                   	push   %edi$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	56                   	push   %esi$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	53                   	push   %ebx$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	00 $/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	e8 96 fd ff ff       	call   f0103687 <env_alloc>$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	85 c0                	test   %eax,%eax$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	79 20                	jns    f0103915 <env_create+0x43>$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	c7 44 24 08 6d 79 10 	movl   $0xf010796d,0x8(%esp)$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	f0 $/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	c7 44 24 04 af 01 00 	movl   $0x1af,0x4(%esp)$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	00 $/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	e8 2b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	89 46 50             	mov    %eax,0x50(%esi)$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	74 1c                	je     f0103942 <env_create+0x70>$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	c7 44 24 08 d8 78 10 	movl   $0xf01078d8,0x8(%esp)$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	f0 $/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	c7 44 24 04 86 01 00 	movl   $0x186,0x4(%esp)$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	00 $/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	e8 fe c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	8b 5f 1c             	mov    0x1c(%edi),%ebx$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	8b 57 2c             	mov    0x2c(%edi),%edx$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	77 20                	ja     f0103972 <env_create+0xa0>$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	f0 $/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	c7 44 24 04 8b 01 00 	movl   $0x18b,0x4(%esp)$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	00 $/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	e8 ce c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	01 fb                	add    %edi,%ebx$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	01 da                	add    %ebx,%edx$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	39 d3                	cmp    %edx,%ebx$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	73 58                	jae    f01039e3 <env_create+0x111>$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	75 4b                	jne    f01039db <env_create+0x109>$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	e8 a7 fe ff ff       	call   f010384d <region_alloc>$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	00 $/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	e8 df 1f 00 00       	call   f010599f <memset>$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	89 f8                	mov    %edi,%eax$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	e8 0e 20 00 00       	call   f01059e9 <memmove>$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	77 a8                	ja     f010398b <env_create+0xb9>$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	77 20                	ja     f0103a0f <env_create+0x13d>$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	f0 $/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	c7 44 24 04 94 01 00 	movl   $0x194,0x4(%esp)$/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	00 $/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	e8 31 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	00 $/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	c7 44 24 04 00 d0 bf 	movl   $0xeebfd000,0x4(%esp)$/;"	l
f0103a2c	obj/kern/kernel.asm	/^f0103a2c:	ee $/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	e8 18 fe ff ff       	call   f010384d <region_alloc>$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	c7 46 5c 00 d0 bf ee 	movl   $0xeebfd000,0x5c(%esi)$/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	5b                   	pop    %ebx$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	5e                   	pop    %esi$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	5f                   	pop    %edi$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	5d                   	pop    %ebp$/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	c3                   	ret    $/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44 <env_free>:$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	55                   	push   %ebp$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	57                   	push   %edi$/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	56                   	push   %esi$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	53                   	push   %ebx$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	e8 ab 25 00 00       	call   f0106000 <cpunum>$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	29 c2                	sub    %eax,%edx$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	39 3c 85 28 20 34 f0 	cmp    %edi,-0xfcbdfd8(,%eax,4)$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	75 34                	jne    f0103a9e <env_free+0x5a>$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	a1 0c 1f 34 f0       	mov    0xf0341f0c,%eax$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	77 20                	ja     f0103a96 <env_free+0x52>$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	f0 $/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	c7 44 24 04 c2 01 00 	movl   $0x1c2,0x4(%esp)$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	00 $/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	e8 aa c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0103aa1	obj/kern/kernel.asm	/^f0103aa1:	e8 5a 25 00 00       	call   f0106000 <cpunum>$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	29 c2                	sub    %eax,%edx$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	83 3c 85 28 20 34 f0 	cmpl   $0x0,-0xfcbdfd8(,%eax,4)$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	00 $/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	74 1d                	je     f0103ad9 <env_free+0x95>$/;"	l
f0103abc	obj/kern/kernel.asm	/^f0103abc:	e8 3f 25 00 00       	call   f0106000 <cpunum>$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	29 c2                	sub    %eax,%edx$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	eb 05                	jmp    f0103ade <env_free+0x9a>$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	c7 04 24 7c 79 10 f0 	movl   $0xf010797c,(%esp)$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	e8 e6 04 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	0f 84 b6 00 00 00    	je     f0103bcd <env_free+0x189>$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	89 f0                	mov    %esi,%eax$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	72 20                	jb     f0103b4d <env_free+0x109>$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	f0 $/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	c7 44 24 04 d1 01 00 	movl   $0x1d1,0x4(%esp)$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	00 $/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	e8 f3 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	01 $/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	74 17                	je     f0103b7c <env_free+0x138>$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	89 d8                	mov    %ebx,%eax$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	e8 e8 d9 ff ff       	call   f0101564 <page_remove>$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	43                   	inc    %ebx$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	75 d6                	jne    f0103b5b <env_free+0x117>$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	72 1c                	jb     f0103bb9 <env_free+0x175>$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	c7 44 24 08 20 6e 10 	movl   $0xf0106e20,0x8(%esp)$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	f0 $/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	00 $/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	e8 87 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	03 05 10 1f 34 f0    	add    0xf0341f10,%eax$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	e8 28 d7 ff ff       	call   f01012f5 <page_decref>$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	0f 85 1c ff ff ff    	jne    f0103af9 <env_free+0xb5>$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	77 20                	ja     f0103c07 <env_free+0x1c3>$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	f0 $/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	c7 44 24 04 df 01 00 	movl   $0x1df,0x4(%esp)$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	00 $/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	e8 39 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103c0e	obj/kern/kernel.asm	/^f0103c0e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	72 1c                	jb     f0103c3a <env_free+0x1f6>$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	c7 44 24 08 20 6e 10 	movl   $0xf0106e20,0x8(%esp)$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	f0 $/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	00 $/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	e8 06 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	03 05 10 1f 34 f0    	add    0xf0341f10,%eax$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	e8 aa d6 ff ff       	call   f01012f5 <page_decref>$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	a1 70 12 34 f0       	mov    0xf0341270,%eax$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	89 3d 70 12 34 f0    	mov    %edi,0xf0341270$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	5b                   	pop    %ebx$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	5e                   	pop    %esi$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	5f                   	pop    %edi$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	5d                   	pop    %ebp$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	c3                   	ret    $/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68 <env_destroy>:$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	55                   	push   %ebp$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	53                   	push   %ebx$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	75 23                	jne    f0103c9b <env_destroy+0x33>$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	e8 83 23 00 00       	call   f0106000 <cpunum>$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103c84	obj/kern/kernel.asm	/^f0103c84:	29 c2                	sub    %eax,%edx$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	39 1c 85 28 20 34 f0 	cmp    %ebx,-0xfcbdfd8(,%eax,4)$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	74 09                	je     f0103c9b <env_destroy+0x33>$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	eb 39                	jmp    f0103cd4 <env_destroy+0x6c>$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	e8 a1 fd ff ff       	call   f0103a44 <env_free>$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	e8 58 23 00 00       	call   f0106000 <cpunum>$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	29 c2                	sub    %eax,%edx$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	39 1c 85 28 20 34 f0 	cmp    %ebx,-0xfcbdfd8(,%eax,4)$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	75 17                	jne    f0103cd4 <env_destroy+0x6c>$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	e8 3e 23 00 00       	call   f0106000 <cpunum>$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	c7 80 28 20 34 f0 00 	movl   $0x0,-0xfcbdfd8(%eax)$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	00 00 00 $/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	e8 cc 0c 00 00       	call   f01049a0 <sched_yield>$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	5b                   	pop    %ebx$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	5d                   	pop    %ebp$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	c3                   	ret    $/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda <env_pop_tf>:$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	55                   	push   %ebp$/;"	l
f0103cdb	obj/kern/kernel.asm	/^f0103cdb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	53                   	push   %ebx$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	e8 1a 23 00 00       	call   f0106000 <cpunum>$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	29 c2                	sub    %eax,%edx$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	8b 1c 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%ebx$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	e8 02 23 00 00       	call   f0106000 <cpunum>$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	89 43 64             	mov    %eax,0x64(%ebx)$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	61                   	popa   $/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	07                   	pop    %es$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	1f                   	pop    %ds$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	cf                   	iret   $/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	c7 44 24 08 92 79 10 	movl   $0xf0107992,0x8(%esp)$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	f0 $/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	c7 44 24 04 15 02 00 	movl   $0x215,0x4(%esp)$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	00 $/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	e8 19 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27 <env_run>:$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	55                   	push   %ebp$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	53                   	push   %ebx$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	e8 ca 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	29 c2                	sub    %eax,%edx$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	39 1c 85 28 20 34 f0 	cmp    %ebx,-0xfcbdfd8(,%eax,4)$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	0f 84 0c 01 00 00    	je     f0103e5b <env_run+0x134>$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	e8 ac 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	29 c2                	sub    %eax,%edx$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	83 3c 85 28 20 34 f0 	cmpl   $0x0,-0xfcbdfd8(,%eax,4)$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	00 $/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	74 29                	je     f0103d93 <env_run+0x6c>$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	e8 91 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	75 15                	jne    f0103d93 <env_run+0x6c>$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	e8 7d 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	e8 68 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	29 c2                	sub    %eax,%edx$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	89 1c 85 28 20 34 f0 	mov    %ebx,-0xfcbdfd8(,%eax,4)$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	e8 50 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	29 c2                	sub    %eax,%edx$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	e8 31 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	29 c2                	sub    %eax,%edx$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	ff 40 58             	incl   0x58(%eax)$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	e8 16 22 00 00       	call   f0106000 <cpunum>$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	29 c2                	sub    %eax,%edx$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	c7 04 24 fc 78 10 f0 	movl   $0xf01078fc,(%esp)$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	e8 c7 01 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	e8 ea 21 00 00       	call   f0106000 <cpunum>$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	29 c2                	sub    %eax,%edx$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	77 20                	ja     f0103e53 <env_run+0x12c>$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	f0 $/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	c7 44 24 04 3b 02 00 	movl   $0x23b,0x4(%esp)$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	00 $/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	c7 04 24 37 79 10 f0 	movl   $0xf0107937,(%esp)$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	e8 ed c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	c7 04 24 9e 79 10 f0 	movl   $0xf010799e,(%esp)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	e8 71 01 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	e8 94 21 00 00       	call   f0106000 <cpunum>$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	29 c2                	sub    %eax,%edx$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	e8 53 fe ff ff       	call   f0103cda <env_pop_tf>$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88 <mc146818_read>:$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	55                   	push   %ebp$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	ee                   	out    %al,(%dx)$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	b2 71                	mov    $0x71,%dl$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	ec                   	in     (%dx),%al$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	5d                   	pop    %ebp$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	c3                   	ret    $/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c <mc146818_write>:$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	55                   	push   %ebp$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	ee                   	out    %al,(%dx)$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	b2 71                	mov    $0x71,%dl$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	ee                   	out    %al,(%dx)$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	5d                   	pop    %ebp$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	c3                   	ret    $/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0 <irq_setmask_8259A>:$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	55                   	push   %ebp$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	56                   	push   %esi$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	53                   	push   %ebx$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	89 c6                	mov    %eax,%esi$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	66 a3 88 83 12 f0    	mov    %ax,0xf0128388$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	83 3d 74 12 34 f0 00 	cmpl   $0x0,0xf0341274$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	74 51                	je     f0103f1d <irq_setmask_8259A+0x6d>$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	ee                   	out    %al,(%dx)$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	89 f0                	mov    %esi,%eax$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	ee                   	out    %al,(%dx)$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	c7 04 24 bc 79 10 f0 	movl   $0xf01079bc,(%esp)$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	e8 f1 00 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	f7 d6                	not    %esi$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	89 f0                	mov    %esi,%eax$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	88 d9                	mov    %bl,%cl$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	d3 f8                	sar    %cl,%eax$/;"	d
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	a8 01                	test   $0x1,%al$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	74 10                	je     f0103f0b <irq_setmask_8259A+0x5b>$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	c7 04 24 67 7f 10 f0 	movl   $0xf0107f67,(%esp)$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	e8 cd 00 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	43                   	inc    %ebx$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	75 e0                	jne    f0103ef1 <irq_setmask_8259A+0x41>$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	c7 04 24 a7 77 10 f0 	movl   $0xf01077a7,(%esp)$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	e8 bb 00 00 00       	call   f0103fd8 <cprintf>$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	5b                   	pop    %ebx$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	5e                   	pop    %esi$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	5d                   	pop    %ebp$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	c3                   	ret    $/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24 <pic_init>:$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	55                   	push   %ebp$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	c7 05 74 12 34 f0 01 	movl   $0x1,0xf0341274$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	00 00 00 $/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	b0 ff                	mov    $0xff,%al$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	ee                   	out    %al,(%dx)$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	ee                   	out    %al,(%dx)$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	b0 11                	mov    $0x11,%al$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	ee                   	out    %al,(%dx)$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	b2 21                	mov    $0x21,%dl$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	b0 20                	mov    $0x20,%al$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	ee                   	out    %al,(%dx)$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	b0 04                	mov    $0x4,%al$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	ee                   	out    %al,(%dx)$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	b0 03                	mov    $0x3,%al$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	ee                   	out    %al,(%dx)$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	b0 11                	mov    $0x11,%al$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	ee                   	out    %al,(%dx)$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	b0 28                	mov    $0x28,%al$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	ee                   	out    %al,(%dx)$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	b0 02                	mov    $0x2,%al$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	ee                   	out    %al,(%dx)$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	b0 01                	mov    $0x1,%al$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	ee                   	out    %al,(%dx)$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	b0 68                	mov    $0x68,%al$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	ee                   	out    %al,(%dx)$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	b0 0a                	mov    $0xa,%al$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	ee                   	out    %al,(%dx)$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	b0 68                	mov    $0x68,%al$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	ee                   	out    %al,(%dx)$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	b0 0a                	mov    $0xa,%al$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	ee                   	out    %al,(%dx)$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	66 a1 88 83 12 f0    	mov    0xf0128388,%ax$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	74 0b                	je     f0103f86 <pic_init+0x62>$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	e8 2a ff ff ff       	call   f0103eb0 <irq_setmask_8259A>$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	c9                   	leave  $/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	c3                   	ret    $/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88 <putch>:$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	55                   	push   %ebp$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	53                   	push   %ebx$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	e8 f4 c8 ff ff       	call   f0100891 <cputchar>$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	ff 03                	incl   (%ebx)$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	5b                   	pop    %ebx$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	5d                   	pop    %ebp$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	c3                   	ret    $/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5 <vcprintf>:$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	55                   	push   %ebp$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	c7 04 24 88 3f 10 f0 	movl   $0xf0103f88,(%esp)$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	e8 f2 12 00 00       	call   f01052c5 <vprintfmt>$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	c9                   	leave  $/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	c3                   	ret    $/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8 <cprintf>:$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	55                   	push   %ebp$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	e8 b5 ff ff ff       	call   f0103fa5 <vcprintf>$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	c9                   	leave  $/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	c3                   	ret    $/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4 <trap_init_percpu>:$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	55                   	push   %ebp$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	c7 05 84 1a 34 f0 00 	movl   $0xefc00000,0xf0341a84$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	00 c0 ef $/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	66 c7 05 88 1a 34 f0 	movw   $0x10,0xf0341a88$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	10 00 $/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	66 c7 05 48 83 12 f0 	movw   $0x68,0xf0128348$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	68 00 $/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	b8 80 1a 34 f0       	mov    $0xf0341a80,%eax$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	66 a3 4a 83 12 f0    	mov    %ax,0xf012834a$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	89 c2                	mov    %eax,%edx$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	88 15 4c 83 12 f0    	mov    %dl,0xf012834c$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	c6 05 4e 83 12 f0 40 	movb   $0x40,0xf012834e$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	a2 4f 83 12 f0       	mov    %al,0xf012834f$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	c6 05 4d 83 12 f0 89 	movb   $0x89,0xf012834d$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	0f 00 d8             	ltr    %ax$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	b8 8c 83 12 f0       	mov    $0xf012838c,%eax$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	0f 01 18             	lidtl  (%eax)$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	5d                   	pop    %ebp$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	c3                   	ret    $/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051 <trap_init>:$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	55                   	push   %ebp$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	89 e5                	mov    %esp,%ebp$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	b8 10 49 10 f0       	mov    $0xf0104910,%eax$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	66 a3 80 12 34 f0    	mov    %ax,0xf0341280$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	66 c7 05 82 12 34 f0 	movw   $0x8,0xf0341282$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	08 00 $/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	c6 05 84 12 34 f0 00 	movb   $0x0,0xf0341284$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	c6 05 85 12 34 f0 8e 	movb   $0x8e,0xf0341285$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	66 a3 86 12 34 f0    	mov    %ax,0xf0341286$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	b8 16 49 10 f0       	mov    $0xf0104916,%eax$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	66 a3 88 12 34 f0    	mov    %ax,0xf0341288$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	66 c7 05 8a 12 34 f0 	movw   $0x8,0xf034128a$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	08 00 $/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	c6 05 8c 12 34 f0 00 	movb   $0x0,0xf034128c$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	c6 05 8d 12 34 f0 8e 	movb   $0x8e,0xf034128d$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	66 a3 8e 12 34 f0    	mov    %ax,0xf034128e$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	b8 1c 49 10 f0       	mov    $0xf010491c,%eax$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	66 a3 90 12 34 f0    	mov    %ax,0xf0341290$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	66 c7 05 92 12 34 f0 	movw   $0x8,0xf0341292$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	08 00 $/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	c6 05 94 12 34 f0 00 	movb   $0x0,0xf0341294$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	c6 05 95 12 34 f0 8e 	movb   $0x8e,0xf0341295$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	66 a3 96 12 34 f0    	mov    %ax,0xf0341296$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	b8 22 49 10 f0       	mov    $0xf0104922,%eax$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	66 a3 98 12 34 f0    	mov    %ax,0xf0341298$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	66 c7 05 9a 12 34 f0 	movw   $0x8,0xf034129a$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	08 00 $/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	c6 05 9c 12 34 f0 00 	movb   $0x0,0xf034129c$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	c6 05 9d 12 34 f0 ee 	movb   $0xee,0xf034129d$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	66 a3 9e 12 34 f0    	mov    %ax,0xf034129e$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	b8 28 49 10 f0       	mov    $0xf0104928,%eax$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	66 a3 a0 12 34 f0    	mov    %ax,0xf03412a0$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	66 c7 05 a2 12 34 f0 	movw   $0x8,0xf03412a2$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	08 00 $/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	c6 05 a4 12 34 f0 00 	movb   $0x0,0xf03412a4$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	c6 05 a5 12 34 f0 8e 	movb   $0x8e,0xf03412a5$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	66 a3 a6 12 34 f0    	mov    %ax,0xf03412a6$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	b8 2e 49 10 f0       	mov    $0xf010492e,%eax$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	66 a3 a8 12 34 f0    	mov    %ax,0xf03412a8$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	66 c7 05 aa 12 34 f0 	movw   $0x8,0xf03412aa$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	08 00 $/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	c6 05 ac 12 34 f0 00 	movb   $0x0,0xf03412ac$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	c6 05 ad 12 34 f0 8e 	movb   $0x8e,0xf03412ad$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	66 a3 ae 12 34 f0    	mov    %ax,0xf03412ae$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	b8 34 49 10 f0       	mov    $0xf0104934,%eax$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	66 a3 b0 12 34 f0    	mov    %ax,0xf03412b0$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	66 c7 05 b2 12 34 f0 	movw   $0x8,0xf03412b2$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	08 00 $/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	c6 05 b4 12 34 f0 00 	movb   $0x0,0xf03412b4$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	c6 05 b5 12 34 f0 8e 	movb   $0x8e,0xf03412b5$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	66 a3 b6 12 34 f0    	mov    %ax,0xf03412b6$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	b8 3a 49 10 f0       	mov    $0xf010493a,%eax$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	66 a3 b8 12 34 f0    	mov    %ax,0xf03412b8$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	66 c7 05 ba 12 34 f0 	movw   $0x8,0xf03412ba$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	08 00 $/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	c6 05 bc 12 34 f0 00 	movb   $0x0,0xf03412bc$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	c6 05 bd 12 34 f0 8e 	movb   $0x8e,0xf03412bd$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	66 a3 be 12 34 f0    	mov    %ax,0xf03412be$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	b8 40 49 10 f0       	mov    $0xf0104940,%eax$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	66 a3 c0 12 34 f0    	mov    %ax,0xf03412c0$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	66 c7 05 c2 12 34 f0 	movw   $0x8,0xf03412c2$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	08 00 $/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	c6 05 c4 12 34 f0 00 	movb   $0x0,0xf03412c4$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	c6 05 c5 12 34 f0 8e 	movb   $0x8e,0xf03412c5$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	66 a3 c6 12 34 f0    	mov    %ax,0xf03412c6$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	b8 44 49 10 f0       	mov    $0xf0104944,%eax$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	66 a3 d0 12 34 f0    	mov    %ax,0xf03412d0$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	66 c7 05 d2 12 34 f0 	movw   $0x8,0xf03412d2$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	08 00 $/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	c6 05 d4 12 34 f0 00 	movb   $0x0,0xf03412d4$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	c6 05 d5 12 34 f0 8e 	movb   $0x8e,0xf03412d5$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	66 a3 d6 12 34 f0    	mov    %ax,0xf03412d6$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	b8 48 49 10 f0       	mov    $0xf0104948,%eax$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	66 a3 d8 12 34 f0    	mov    %ax,0xf03412d8$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	66 c7 05 da 12 34 f0 	movw   $0x8,0xf03412da$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	08 00 $/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	c6 05 dc 12 34 f0 00 	movb   $0x0,0xf03412dc$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	c6 05 dd 12 34 f0 8e 	movb   $0x8e,0xf03412dd$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	66 a3 de 12 34 f0    	mov    %ax,0xf03412de$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	b8 4c 49 10 f0       	mov    $0xf010494c,%eax$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	66 a3 e0 12 34 f0    	mov    %ax,0xf03412e0$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	66 c7 05 e2 12 34 f0 	movw   $0x8,0xf03412e2$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	08 00 $/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	c6 05 e4 12 34 f0 00 	movb   $0x0,0xf03412e4$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	c6 05 e5 12 34 f0 8e 	movb   $0x8e,0xf03412e5$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	66 a3 e6 12 34 f0    	mov    %ax,0xf03412e6$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	b8 50 49 10 f0       	mov    $0xf0104950,%eax$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	66 a3 e8 12 34 f0    	mov    %ax,0xf03412e8$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	66 c7 05 ea 12 34 f0 	movw   $0x8,0xf03412ea$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	08 00 $/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	c6 05 ec 12 34 f0 00 	movb   $0x0,0xf03412ec$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	c6 05 ed 12 34 f0 8e 	movb   $0x8e,0xf03412ed$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	66 a3 ee 12 34 f0    	mov    %ax,0xf03412ee$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	b8 54 49 10 f0       	mov    $0xf0104954,%eax$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	66 a3 f0 12 34 f0    	mov    %ax,0xf03412f0$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	66 c7 05 f2 12 34 f0 	movw   $0x8,0xf03412f2$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	08 00 $/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	c6 05 f4 12 34 f0 00 	movb   $0x0,0xf03412f4$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	c6 05 f5 12 34 f0 8e 	movb   $0x8e,0xf03412f5$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	66 a3 f6 12 34 f0    	mov    %ax,0xf03412f6$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	b8 58 49 10 f0       	mov    $0xf0104958,%eax$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	66 a3 00 13 34 f0    	mov    %ax,0xf0341300$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	66 c7 05 02 13 34 f0 	movw   $0x8,0xf0341302$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	08 00 $/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	c6 05 04 13 34 f0 00 	movb   $0x0,0xf0341304$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	c6 05 05 13 34 f0 8e 	movb   $0x8e,0xf0341305$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	66 a3 06 13 34 f0    	mov    %ax,0xf0341306$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	b8 5e 49 10 f0       	mov    $0xf010495e,%eax$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	66 a3 08 13 34 f0    	mov    %ax,0xf0341308$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	66 c7 05 0a 13 34 f0 	movw   $0x8,0xf034130a$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	08 00 $/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	c6 05 0c 13 34 f0 00 	movb   $0x0,0xf034130c$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	c6 05 0d 13 34 f0 8e 	movb   $0x8e,0xf034130d$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	66 a3 0e 13 34 f0    	mov    %ax,0xf034130e$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	b8 62 49 10 f0       	mov    $0xf0104962,%eax$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	66 a3 10 13 34 f0    	mov    %ax,0xf0341310$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	66 c7 05 12 13 34 f0 	movw   $0x8,0xf0341312$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	08 00 $/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	c6 05 14 13 34 f0 00 	movb   $0x0,0xf0341314$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	c6 05 15 13 34 f0 8e 	movb   $0x8e,0xf0341315$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	66 a3 16 13 34 f0    	mov    %ax,0xf0341316$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	b8 68 49 10 f0       	mov    $0xf0104968,%eax$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	66 a3 18 13 34 f0    	mov    %ax,0xf0341318$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	66 c7 05 1a 13 34 f0 	movw   $0x8,0xf034131a$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	08 00 $/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	c6 05 1c 13 34 f0 00 	movb   $0x0,0xf034131c$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	c6 05 1d 13 34 f0 8e 	movb   $0x8e,0xf034131d$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	66 a3 1e 13 34 f0    	mov    %ax,0xf034131e$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	b8 6e 49 10 f0       	mov    $0xf010496e,%eax$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	66 a3 00 14 34 f0    	mov    %ax,0xf0341400$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	66 c7 05 02 14 34 f0 	movw   $0x8,0xf0341402$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	08 00 $/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	c6 05 04 14 34 f0 00 	movb   $0x0,0xf0341404$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	c6 05 05 14 34 f0 ee 	movb   $0xee,0xf0341405$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	66 a3 06 14 34 f0    	mov    %ax,0xf0341406$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104392	obj/kern/kernel.asm	/^f0104392:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	0f 30                	wrmsr  $/;"	l
f0104399	obj/kern/kernel.asm	/^f0104399:	b8 00 00 c0 ef       	mov    $0xefc00000,%eax$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	b1 75                	mov    $0x75,%cl$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	0f 30                	wrmsr  $/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	b8 74 49 10 f0       	mov    $0xf0104974,%eax$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	b1 76                	mov    $0x76,%cl$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	0f 30                	wrmsr  $/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	e8 44 fc ff ff       	call   f0103ff4 <trap_init_percpu>$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	c7 04 24 d0 79 10 f0 	movl   $0xf01079d0,(%esp)$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	e8 1c fc ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	c9                   	leave  $/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	c3                   	ret    $/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be <print_regs>:$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	55                   	push   %ebp$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	53                   	push   %ebx$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	c7 04 24 e1 79 10 f0 	movl   $0xf01079e1,(%esp)$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	e8 fe fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	c7 04 24 f0 79 10 f0 	movl   $0xf01079f0,(%esp)$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	e8 eb fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	c7 04 24 ff 79 10 f0 	movl   $0xf01079ff,(%esp)$/;"	l
f01043fb	obj/kern/kernel.asm	/^f01043fb:	e8 d8 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	c7 04 24 0e 7a 10 f0 	movl   $0xf0107a0e,(%esp)$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	e8 c5 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	c7 04 24 1d 7a 10 f0 	movl   $0xf0107a1d,(%esp)$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	e8 b2 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	c7 04 24 2c 7a 10 f0 	movl   $0xf0107a2c,(%esp)$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	e8 9f fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	c7 04 24 3b 7a 10 f0 	movl   $0xf0107a3b,(%esp)$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	e8 8c fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010444f	obj/kern/kernel.asm	/^f010444f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	c7 04 24 4a 7a 10 f0 	movl   $0xf0107a4a,(%esp)$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	e8 79 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	5b                   	pop    %ebx$/;"	l
f0104463	obj/kern/kernel.asm	/^f0104463:	5d                   	pop    %ebp$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	c3                   	ret    $/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465 <print_trapframe>:$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	55                   	push   %ebp$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	89 e5                	mov    %esp,%ebp$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	53                   	push   %ebx$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	e8 8c 1b 00 00       	call   f0106000 <cpunum>$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	c7 04 24 ae 7a 10 f0 	movl   $0xf0107aae,(%esp)$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	e8 50 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	e8 2e ff ff ff       	call   f01043be <print_regs>$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	c7 04 24 cc 7a 10 f0 	movl   $0xf0107acc,(%esp)$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	e8 34 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	c7 04 24 df 7a 10 f0 	movl   $0xf0107adf,(%esp)$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	e8 20 fb ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	77 09                	ja     f01044c9 <print_trapframe+0x64>$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	8b 14 85 20 7e 10 f0 	mov    -0xfef81e0(,%eax,4),%edx$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	eb 20                	jmp    f01044e9 <print_trapframe+0x84>$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	74 0f                	je     f01044dd <print_trapframe+0x78>$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	77 0e                	ja     f01044e4 <print_trapframe+0x7f>$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	ba 65 7a 10 f0       	mov    $0xf0107a65,%edx$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	eb 0c                	jmp    f01044e9 <print_trapframe+0x84>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	ba 59 7a 10 f0       	mov    $0xf0107a59,%edx$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	eb 05                	jmp    f01044e9 <print_trapframe+0x84>$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	ba 78 7a 10 f0       	mov    $0xf0107a78,%edx$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	c7 04 24 f2 7a 10 f0 	movl   $0xf0107af2,(%esp)$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	e8 db fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	3b 1d e8 1a 34 f0    	cmp    0xf0341ae8,%ebx$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	75 19                	jne    f010451e <print_trapframe+0xb9>$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	75 13                	jne    f010451e <print_trapframe+0xb9>$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	c7 04 24 04 7b 10 f0 	movl   $0xf0107b04,(%esp)$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	e8 ba fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	c7 04 24 13 7b 10 f0 	movl   $0xf0107b13,(%esp)$/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	e8 a7 fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	75 4d                	jne    f0104584 <print_trapframe+0x11f>$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	a8 01                	test   $0x1,%al$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	74 07                	je     f0104545 <print_trapframe+0xe0>$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	b9 87 7a 10 f0       	mov    $0xf0107a87,%ecx$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	eb 05                	jmp    f010454a <print_trapframe+0xe5>$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	b9 92 7a 10 f0       	mov    $0xf0107a92,%ecx$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	a8 02                	test   $0x2,%al$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	74 07                	je     f0104555 <print_trapframe+0xf0>$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	ba 9e 7a 10 f0       	mov    $0xf0107a9e,%edx$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	eb 05                	jmp    f010455a <print_trapframe+0xf5>$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	ba a4 7a 10 f0       	mov    $0xf0107aa4,%edx$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	a8 04                	test   $0x4,%al$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	74 07                	je     f0104565 <print_trapframe+0x100>$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	b8 a9 7a 10 f0       	mov    $0xf0107aa9,%eax$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	eb 05                	jmp    f010456a <print_trapframe+0x105>$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	b8 61 7c 10 f0       	mov    $0xf0107c61,%eax$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	c7 04 24 21 7b 10 f0 	movl   $0xf0107b21,(%esp)$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	e8 56 fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	eb 0c                	jmp    f0104590 <print_trapframe+0x12b>$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	c7 04 24 a7 77 10 f0 	movl   $0xf01077a7,(%esp)$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	e8 48 fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	c7 04 24 30 7b 10 f0 	movl   $0xf0107b30,(%esp)$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	e8 35 fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	c7 04 24 3f 7b 10 f0 	movl   $0xf0107b3f,(%esp)$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	e8 21 fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	c7 04 24 52 7b 10 f0 	movl   $0xf0107b52,(%esp)$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	e8 0e fa ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	74 27                	je     f01045f7 <print_trapframe+0x192>$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	c7 04 24 61 7b 10 f0 	movl   $0xf0107b61,(%esp)$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	e8 f5 f9 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	c7 04 24 70 7b 10 f0 	movl   $0xf0107b70,(%esp)$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	e8 e1 f9 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	5b                   	pop    %ebx$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	5d                   	pop    %ebp$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	c3                   	ret    $/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd <page_fault_handler>:$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	55                   	push   %ebp$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	57                   	push   %edi$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	56                   	push   %esi$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	53                   	push   %ebx$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	75 1c                	jne    f010462e <page_fault_handler+0x31>$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	c7 44 24 08 83 7b 10 	movl   $0xf0107b83,0x8(%esp)$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	f0 $/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	00 $/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	c7 04 24 96 7b 10 f0 	movl   $0xf0107b96,(%esp)$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	e8 12 ba ff ff       	call   f0100040 <_panic>$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	8b 7e 30             	mov    0x30(%esi),%edi$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	e8 ca 19 00 00       	call   f0106000 <cpunum>$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	29 c2                	sub    %eax,%edx$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	c7 04 24 ac 7d 10 f0 	movl   $0xf0107dac,(%esp)$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	e8 74 f9 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	e8 f9 fd ff ff       	call   f0104465 <print_trapframe>$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	e8 8f 19 00 00       	call   f0106000 <cpunum>$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	29 c2                	sub    %eax,%edx$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	e8 dc f5 ff ff       	call   f0103c68 <env_destroy>$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	5b                   	pop    %ebx$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	5e                   	pop    %esi$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	5f                   	pop    %edi$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	5d                   	pop    %ebp$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	c3                   	ret    $/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694 <trap>:$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	55                   	push   %ebp$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	89 e5                	mov    %esp,%ebp$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	57                   	push   %edi$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	56                   	push   %esi$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	fc                   	cld    $/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	83 3d 00 1f 34 f0 00 	cmpl   $0x0,0xf0341f00$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	74 01                	je     f01046aa <trap+0x16>$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	f4                   	hlt    $/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	9c                   	pushf  $/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	58                   	pop    %eax$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	74 24                	je     f01046d5 <trap+0x41>$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	c7 44 24 0c a2 7b 10 	movl   $0xf0107ba2,0xc(%esp)$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	f0 $/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	f0 $/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	00 $/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	c7 04 24 96 7b 10 f0 	movl   $0xf0107b96,(%esp)$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	e8 6b b9 ff ff       	call   f0100040 <_panic>$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	c7 04 24 bb 7b 10 f0 	movl   $0xf0107bbb,(%esp)$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	e8 f3 f8 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	83 e0 03             	and    $0x3,%eax$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	0f 85 9b 00 00 00    	jne    f0104790 <trap+0xfc>$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	e8 06 19 00 00       	call   f0106000 <cpunum>$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	83 b8 28 20 34 f0 00 	cmpl   $0x0,-0xfcbdfd8(%eax)$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	75 24                	jne    f010472a <trap+0x96>$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	c7 44 24 0c d6 7b 10 	movl   $0xf0107bd6,0xc(%esp)$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	f0 $/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	c7 44 24 08 f3 74 10 	movl   $0xf01074f3,0x8(%esp)$/;"	l
f0104715	obj/kern/kernel.asm	/^f0104715:	f0 $/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	c7 44 24 04 37 01 00 	movl   $0x137,0x4(%esp)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	00 $/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	c7 04 24 96 7b 10 f0 	movl   $0xf0107b96,(%esp)$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	e8 16 b9 ff ff       	call   f0100040 <_panic>$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	e8 d1 18 00 00       	call   f0106000 <cpunum>$/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	75 2d                	jne    f010476b <trap+0xd7>$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	e8 bd 18 00 00       	call   f0106000 <cpunum>$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	e8 f0 f2 ff ff       	call   f0103a44 <env_free>$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	e8 a7 18 00 00       	call   f0106000 <cpunum>$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	c7 80 28 20 34 f0 00 	movl   $0x0,-0xfcbdfd8(%eax)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	00 00 00 $/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	e8 35 02 00 00       	call   f01049a0 <sched_yield>$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	e8 90 18 00 00       	call   f0106000 <cpunum>$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	89 c7                	mov    %eax,%edi$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	e8 79 18 00 00       	call   f0106000 <cpunum>$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	8b b0 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%esi$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	89 35 e8 1a 34 f0    	mov    %esi,0xf0341ae8$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	74 3a                	je     f01047d8 <trap+0x144>$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	77 0f                	ja     f01047b2 <trap+0x11e>$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	85 c0                	test   %eax,%eax$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	74 20                	je     f01047c7 <trap+0x133>$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	0f 85 b0 00 00 00    	jne    f0104860 <trap+0x1cc>$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	eb 3f                	jmp    f01047f1 <trap+0x15d>$/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	74 61                	je     f0104818 <trap+0x184>$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	74 72                	je     f010482e <trap+0x19a>$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	0f 85 9b 00 00 00    	jne    f0104860 <trap+0x1cc>$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	eb 43                	jmp    f010480a <trap+0x176>$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	c7 04 24 dd 7b 10 f0 	movl   $0xf0107bdd,(%esp)$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	e8 05 f8 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	e9 98 00 00 00       	jmp    f0104870 <trap+0x1dc>$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	c7 04 24 fa 7b 10 f0 	movl   $0xf0107bfa,(%esp)$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	e8 f4 f7 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	e8 db c2 ff ff       	call   f0100ac7 <monitor>$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	e9 dc 00 00 00       	jmp    f01048cd <trap+0x239>$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	c7 04 24 d0 7d 10 f0 	movl   $0xf0107dd0,(%esp)$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	e8 db f7 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	e8 c2 c2 ff ff       	call   f0100ac7 <monitor>$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	e9 c3 00 00 00       	jmp    f01048cd <trap+0x239>$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	c7 04 24 f0 7d 10 f0 	movl   $0xf0107df0,(%esp)$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	e8 c2 f7 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	eb 58                	jmp    f0104870 <trap+0x1dc>$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	e8 dd fd ff ff       	call   f01045fd <page_fault_handler>$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	c7 04 24 14 7c 10 f0 	movl   $0xf0107c14,(%esp)$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	e8 ac f7 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	eb 42                	jmp    f0104870 <trap+0x1dc>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	8b 06                	mov    (%esi),%eax$/;"	l
f0104837	obj/kern/kernel.asm	/^f0104837:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104850	obj/kern/kernel.asm	/^f0104850:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	e8 dd 01 00 00       	call   f0104a38 <syscall>$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	eb 6d                	jmp    f01048cd <trap+0x239>$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	c7 04 24 26 7c 10 f0 	movl   $0xf0107c26,(%esp)$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	e8 68 f7 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	83 7e 28 27          	cmpl   $0x27,0x28(%esi)$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	75 16                	jne    f010488c <trap+0x1f8>$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	c7 04 24 32 7c 10 f0 	movl   $0xf0107c32,(%esp)$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	e8 56 f7 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	e8 db fb ff ff       	call   f0104465 <print_trapframe>$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	eb 41                	jmp    f01048cd <trap+0x239>$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	e8 d1 fb ff ff       	call   f0104465 <print_trapframe>$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	75 1c                	jne    f01048b7 <trap+0x223>$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	c7 44 24 08 4f 7c 10 	movl   $0xf0107c4f,0x8(%esp)$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	f0 $/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	00 $/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	c7 04 24 96 7b 10 f0 	movl   $0xf0107b96,(%esp)$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	e8 89 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	e8 44 17 00 00       	call   f0106000 <cpunum>$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	e8 9b f3 ff ff       	call   f0103c68 <env_destroy>$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	e8 2e 17 00 00       	call   f0106000 <cpunum>$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048d5	obj/kern/kernel.asm	/^f01048d5:	83 b8 28 20 34 f0 00 	cmpl   $0x0,-0xfcbdfd8(%eax)$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	74 2a                	je     f0104908 <trap+0x274>$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	e8 1d 17 00 00       	call   f0106000 <cpunum>$/;"	l
f01048e3	obj/kern/kernel.asm	/^f01048e3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f01048ec	obj/kern/kernel.asm	/^f01048ec:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	75 16                	jne    f0104908 <trap+0x274>$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	e8 09 17 00 00       	call   f0106000 <cpunum>$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	8b 80 28 20 34 f0    	mov    -0xfcbdfd8(%eax),%eax$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	e8 1f f4 ff ff       	call   f0103d27 <env_run>$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	e8 93 00 00 00       	call   f01049a0 <sched_yield>$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	00 00                	add    %al,(%eax)$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910 <entry0>:$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	6a 00                	push   $0x0$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	6a 00                	push   $0x0$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	eb 6e                	jmp    f0104984 <_alltraps>$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916 <entry1>:$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	6a 00                	push   $0x0$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	6a 01                	push   $0x1$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	eb 68                	jmp    f0104984 <_alltraps>$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c <entry2>:$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	6a 00                	push   $0x0$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	6a 02                	push   $0x2$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	eb 62                	jmp    f0104984 <_alltraps>$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922 <entry3>:$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	6a 00                	push   $0x0$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	6a 03                	push   $0x3$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	eb 5c                	jmp    f0104984 <_alltraps>$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928 <entry4>:$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	6a 00                	push   $0x0$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	6a 04                	push   $0x4$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	eb 56                	jmp    f0104984 <_alltraps>$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e <entry5>:$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	6a 00                	push   $0x0$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	6a 05                	push   $0x5$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	eb 50                	jmp    f0104984 <_alltraps>$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934 <entry6>:$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	6a 00                	push   $0x0$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	6a 06                	push   $0x6$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	eb 4a                	jmp    f0104984 <_alltraps>$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a <entry7>:$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	6a 00                	push   $0x0$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	6a 07                	push   $0x7$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	eb 44                	jmp    f0104984 <_alltraps>$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940 <entry8>:$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	6a 08                	push   $0x8$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	eb 40                	jmp    f0104984 <_alltraps>$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944 <entry10>:$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	6a 0a                	push   $0xa$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	eb 3c                	jmp    f0104984 <_alltraps>$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948 <entry11>:$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	6a 0b                	push   $0xb$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	eb 38                	jmp    f0104984 <_alltraps>$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c <entry12>:$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	6a 0c                	push   $0xc$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	eb 34                	jmp    f0104984 <_alltraps>$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950 <entry13>:$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	6a 0d                	push   $0xd$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	eb 30                	jmp    f0104984 <_alltraps>$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954 <entry14>:$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	6a 0e                	push   $0xe$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	eb 2c                	jmp    f0104984 <_alltraps>$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958 <entry16>:$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	6a 00                	push   $0x0$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	6a 10                	push   $0x10$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	eb 26                	jmp    f0104984 <_alltraps>$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e <entry17>:$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	6a 11                	push   $0x11$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	eb 22                	jmp    f0104984 <_alltraps>$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962 <entry18>:$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	6a 00                	push   $0x0$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	6a 12                	push   $0x12$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	eb 1c                	jmp    f0104984 <_alltraps>$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968 <entry19>:$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	6a 00                	push   $0x0$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	6a 13                	push   $0x13$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	eb 16                	jmp    f0104984 <_alltraps>$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e <entry48>:$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	6a 00                	push   $0x0$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	6a 30                	push   $0x30$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	eb 10                	jmp    f0104984 <_alltraps>$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974 <sysenter_handler>:$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	57                   	push   %edi$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	53                   	push   %ebx$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	51                   	push   %ecx$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	52                   	push   %edx$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	50                   	push   %eax$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	e8 ba 00 00 00       	call   f0104a38 <syscall>$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	89 f2                	mov    %esi,%edx$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	0f 35                	sysexit $/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984 <_alltraps>:$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	66 6a 00             	pushw  $0x0$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	66 1e                	pushw  %ds$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	66 6a 00             	pushw  $0x0$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	66 06                	pushw  %es$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	60                   	pusha  $/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	8e d8                	mov    %eax,%ds$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	8e c0                	mov    %eax,%es$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	54                   	push   %esp$/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	e8 f6 fc ff ff       	call   f0104694 <trap>$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0 <sched_yield>:$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	55                   	push   %ebp$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	53                   	push   %ebx$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	8b 1d 6c 12 34 f0    	mov    0xf034126c,%ebx$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	8d 43 50             	lea    0x50(%ebx),%eax$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	83 38 01             	cmpl   $0x1,(%eax)$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	74 0b                	je     f01049c5 <sched_yield+0x25>$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	76 0e                	jbe    f01049d3 <sched_yield+0x33>$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	42                   	inc    %edx$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	75 e4                	jne    f01049b5 <sched_yield+0x15>$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	eb 08                	jmp    f01049db <sched_yield+0x3b>$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	75 1a                	jne    f01049f5 <sched_yield+0x55>$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	c7 04 24 70 7e 10 f0 	movl   $0xf0107e70,(%esp)$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	e8 f1 f5 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	e8 d4 c0 ff ff       	call   f0100ac7 <monitor>$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	eb f2                	jmp    f01049e7 <sched_yield+0x47>$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	e8 06 16 00 00       	call   f0106000 <cpunum>$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	01 c3                	add    %eax,%ebx$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	76 25                	jbe    f0104a2f <sched_yield+0x8f>$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	e8 f1 15 00 00       	call   f0106000 <cpunum>$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	c7 44 24 08 90 7e 10 	movl   $0xf0107e90,0x8(%esp)$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	f0 $/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	00 $/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	c7 04 24 ad 7e 10 f0 	movl   $0xf0107ead,(%esp)$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	e8 11 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	e8 f0 f2 ff ff       	call   f0103d27 <env_run>$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38 <syscall>:$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	55                   	push   %ebp$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	56                   	push   %esi$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	53                   	push   %ebx$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	0f 87 55 02 00 00    	ja     f0104ca7 <syscall+0x26f>$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	ff 24 85 04 7f 10 f0 	jmp    *-0xfef80fc(,%eax,4)$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	e8 a2 15 00 00       	call   f0106000 <cpunum>$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	00 $/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	29 c2                	sub    %eax,%edx$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	e8 57 ea ff ff       	call   f01034e0 <user_mem_assert>$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	c7 04 24 ba 7e 10 f0 	movl   $0xf0107eba,(%esp)$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	e8 3b f5 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	e9 05 02 00 00       	jmp    f0104cac <syscall+0x274>$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	e8 ab bc ff ff       	call   f0100757 <cons_getc>$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	e9 fb 01 00 00       	jmp    f0104cac <syscall+0x274>$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	e8 4a 15 00 00       	call   f0106000 <cpunum>$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	29 c2                	sub    %eax,%edx$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	e9 db 01 00 00       	jmp    f0104cac <syscall+0x274>$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	00 $/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	e8 50 ea ff ff       	call   f0103538 <envid2env>$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	85 c0                	test   %eax,%eax$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	0f 88 bc 01 00 00    	js     f0104cac <syscall+0x274>$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	e8 0b 15 00 00       	call   f0106000 <cpunum>$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	29 c1                	sub    %eax,%ecx$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	8d 04 88             	lea    (%eax,%ecx,4),%eax$/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	39 14 85 28 20 34 f0 	cmp    %edx,-0xfcbdfd8(,%eax,4)$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	75 2d                	jne    f0104b3a <syscall+0x102>$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	e8 ee 14 00 00       	call   f0106000 <cpunum>$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	29 c2                	sub    %eax,%edx$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	c7 04 24 bf 7e 10 f0 	movl   $0xf0107ebf,(%esp)$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	e8 a0 f4 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	eb 32                	jmp    f0104b6c <syscall+0x134>$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	e8 be 14 00 00       	call   f0106000 <cpunum>$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	29 c2                	sub    %eax,%edx$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104b52	obj/kern/kernel.asm	/^f0104b52:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	c7 04 24 da 7e 10 f0 	movl   $0xf0107eda,(%esp)$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	e8 6c f4 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	e8 f1 f0 ff ff       	call   f0103c68 <env_destroy>$/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	e9 2b 01 00 00       	jmp    f0104cac <syscall+0x274>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	77 20                	ja     f0104ba9 <syscall+0x171>$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	c7 44 24 08 04 67 10 	movl   $0xf0106704,0x8(%esp)$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	f0 $/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	00 $/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	c7 04 24 f2 7e 10 f0 	movl   $0xf0107ef2,(%esp)$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	e8 97 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	3b 1d 08 1f 34 f0    	cmp    0xf0341f08,%ebx$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	72 1c                	jb     f0104bd6 <syscall+0x19e>$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	c7 44 24 08 20 6e 10 	movl   $0xf0106e20,0x8(%esp)$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	f0 $/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	00 $/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	c7 04 24 d9 74 10 f0 	movl   $0xf01074d9,(%esp)$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	e8 6a b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	03 1d 10 1f 34 f0    	add    0xf0341f10,%ebx$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	74 38                	je     f0104c19 <syscall+0x1e1>$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	e8 1a 14 00 00       	call   f0106000 <cpunum>$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	00 $/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	29 c2                	sub    %eax,%edx$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c0f	obj/kern/kernel.asm	/^f0104c0f:	e8 99 c9 ff ff       	call   f01015ad <page_insert>$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	e9 93 00 00 00       	jmp    f0104cac <syscall+0x274>$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	e9 89 00 00 00       	jmp    f0104cac <syscall+0x274>$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	e8 d8 13 00 00       	call   f0106000 <cpunum>$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	29 c2                	sub    %eax,%edx$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	8b 70 5c             	mov    0x5c(%eax),%esi$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	29 de                	sub    %ebx,%esi$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	e8 bb 13 00 00       	call   f0106000 <cpunum>$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	29 c2                	sub    %eax,%edx$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	e8 e5 eb ff ff       	call   f010384d <region_alloc>$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	e8 93 13 00 00       	call   f0106000 <cpunum>$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	29 c2                	sub    %eax,%edx$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	8b 34 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%esi$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	e8 7b 13 00 00       	call   f0106000 <cpunum>$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	29 c2                	sub    %eax,%edx$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	29 d8                	sub    %ebx,%eax$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	89 46 5c             	mov    %eax,0x5c(%esi)$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	eb 05                	jmp    f0104cac <syscall+0x274>$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	5b                   	pop    %ebx$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	5e                   	pop    %esi$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	5d                   	pop    %ebp$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	c3                   	ret    $/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4 <stab_binsearch>:$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	55                   	push   %ebp$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	57                   	push   %edi$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	56                   	push   %esi$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	53                   	push   %ebx$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104cc0	obj/kern/kernel.asm	/^f0104cc0:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	0f 8f 97 00 00 00    	jg     f0104d6f <stab_binsearch+0xbb>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	01 d8                	add    %ebx,%eax$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	89 c7                	mov    %eax,%edi$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	01 c7                	add    %eax,%edi$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	d1 ff                	sar    %edi$/;"	d
f0104ced	obj/kern/kernel.asm	/^f0104ced:	39 df                	cmp    %ebx,%edi$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	7c 31                	jl     f0104d22 <stab_binsearch+0x6e>$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	39 f0                	cmp    %esi,%eax$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	0f 84 b3 00 00 00    	je     f0104db7 <stab_binsearch+0x103>$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	89 f8                	mov    %edi,%eax$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	48                   	dec    %eax$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	7c 0f                	jl     f0104d22 <stab_binsearch+0x6e>$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	39 f1                	cmp    %esi,%ecx$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	75 f1                	jne    f0104d0e <stab_binsearch+0x5a>$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	e9 97 00 00 00       	jmp    f0104db9 <stab_binsearch+0x105>$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	eb 39                	jmp    f0104d60 <stab_binsearch+0xac>$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	89 02                	mov    %eax,(%edx)$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	eb 28                	jmp    f0104d60 <stab_binsearch+0xac>$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	76 12                	jbe    f0104d4f <stab_binsearch+0x9b>$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	48                   	dec    %eax$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	eb 11                	jmp    f0104d60 <stab_binsearch+0xac>$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	89 02                	mov    %eax,(%edx)$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	89 c3                	mov    %eax,%ebx$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	0f 8d 76 ff ff ff    	jge    f0104cdf <stab_binsearch+0x2b>$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	75 0d                	jne    f0104d7c <stab_binsearch+0xc8>$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	8b 02                	mov    (%edx),%eax$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	48                   	dec    %eax$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	eb 55                	jmp    f0104dd1 <stab_binsearch+0x11d>$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	7d 26                	jge    f0104db0 <stab_binsearch+0xfc>$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	39 f2                	cmp    %esi,%edx$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	74 17                	je     f0104db0 <stab_binsearch+0xfc>$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	48                   	dec    %eax$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	7d 0a                	jge    f0104db0 <stab_binsearch+0xfc>$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	75 f1                	jne    f0104da1 <stab_binsearch+0xed>$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	89 02                	mov    %eax,(%edx)$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	eb 1a                	jmp    f0104dd1 <stab_binsearch+0x11d>$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	89 f8                	mov    %edi,%eax$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	0f 82 5b ff ff ff    	jb     f0104d27 <stab_binsearch+0x73>$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	e9 67 ff ff ff       	jmp    f0104d38 <stab_binsearch+0x84>$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	5b                   	pop    %ebx$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	5e                   	pop    %esi$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	5f                   	pop    %edi$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	5d                   	pop    %ebp$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	c3                   	ret    $/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9 <debuginfo_eip>:$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	55                   	push   %ebp$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	57                   	push   %edi$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	56                   	push   %esi$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	53                   	push   %ebx$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	c7 03 40 7f 10 f0    	movl   $0xf0107f40,(%ebx)$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	c7 43 08 40 7f 10 f0 	movl   $0xf0107f40,0x8(%ebx)$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	0f 87 0f 01 00 00    	ja     f0104f28 <debuginfo_eip+0x14f>$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	e8 e2 11 00 00       	call   f0106000 <cpunum>$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	00 $/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	00 $/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	00 $/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	29 c2                	sub    %eax,%edx$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	e8 05 e6 ff ff       	call   f0103456 <user_mem_check>$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	85 c0                	test   %eax,%eax$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	0f 88 c6 02 00 00    	js     f010511f <debuginfo_eip+0x346>$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	e8 82 11 00 00       	call   f0106000 <cpunum>$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	00 $/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	89 fa                	mov    %edi,%edx$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	8d 0c 92             	lea    (%edx,%edx,4),%ecx$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	8d 14 4a             	lea    (%edx,%ecx,2),%edx$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	29 c2                	sub    %eax,%edx$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	e8 78 e5 ff ff       	call   f0103456 <user_mem_check>$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	85 c0                	test   %eax,%eax$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	0f 88 40 02 00 00    	js     f0105126 <debuginfo_eip+0x34d>$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	e8 15 11 00 00       	call   f0106000 <cpunum>$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	00 $/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	29 c2                	sub    %eax,%edx$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	8b 04 85 28 20 34 f0 	mov    -0xfcbdfd8(,%eax,4),%eax$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	e8 37 e5 ff ff       	call   f0103456 <user_mem_check>$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	85 c0                	test   %eax,%eax$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	79 1f                	jns    f0104f42 <debuginfo_eip+0x169>$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	e9 05 02 00 00       	jmp    f010512d <debuginfo_eip+0x354>$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	c7 45 bc d7 de 11 f0 	movl   $0xf011ded7,-0x44(%ebp)$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	c7 45 b8 fd 34 11 f0 	movl   $0xf01134fd,-0x48(%ebp)$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	bf fc 34 11 f0       	mov    $0xf01134fc,%edi$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	c7 45 c4 14 84 10 f0 	movl   $0xf0108414,-0x3c(%ebp)$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	0f 83 e6 01 00 00    	jae    f0105134 <debuginfo_eip+0x35b>$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	0f 85 e3 01 00 00    	jne    f010513b <debuginfo_eip+0x362>$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	89 f8                	mov    %edi,%eax$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	2b 45 c4             	sub    -0x3c(%ebp),%eax$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	89 d1                	mov    %edx,%ecx$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	01 ca                	add    %ecx,%edx$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	89 d1                	mov    %edx,%ecx$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	01 ca                	add    %ecx,%edx$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	e8 16 fd ff ff       	call   f0104cb4 <stab_binsearch>$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	85 c0                	test   %eax,%eax$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	0f 84 99 01 00 00    	je     f0105142 <debuginfo_eip+0x369>$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	e8 e9 fc ff ff       	call   f0104cb4 <stab_binsearch>$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	39 d0                	cmp    %edx,%eax$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	7f 32                	jg     f0105007 <debuginfo_eip+0x22e>$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	8b 39                	mov    (%ecx),%edi$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	73 09                	jae    f0104ff7 <debuginfo_eip+0x21e>$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	03 7d b8             	add    -0x48(%ebp),%edi$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	29 ce                	sub    %ecx,%esi$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	eb 0f                	jmp    f0105016 <debuginfo_eip+0x23d>$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	00 $/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	e8 54 09 00 00       	call   f010597d <strfind>$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f010503d	obj/kern/kernel.asm	/^f010503d:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	e8 6c fc ff ff       	call   f0104cb4 <stab_binsearch>$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	0f 8f f5 00 00 00    	jg     f0105149 <debuginfo_eip+0x370>$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	39 f8                	cmp    %edi,%eax$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	7c 70                	jl     f01050df <debuginfo_eip+0x306>$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	89 f7                	mov    %esi,%edi$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	8d 34 96             	lea    (%esi,%edx,4),%esi$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	8a 4e 04             	mov    0x4(%esi),%cl$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	74 43                	je     f01050c2 <debuginfo_eip+0x2e9>$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	89 c7                	mov    %eax,%edi$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	eb 1c                	jmp    f01050ac <debuginfo_eip+0x2d3>$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	48                   	dec    %eax$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	7f 47                	jg     f01050dc <debuginfo_eip+0x303>$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	89 d6                	mov    %edx,%esi$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	8a 4a 10             	mov    0x10(%edx),%cl$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	75 08                	jne    f01050aa <debuginfo_eip+0x2d1>$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	eb 18                	jmp    f01050c2 <debuginfo_eip+0x2e9>$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	89 c7                	mov    %eax,%edi$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	75 df                	jne    f0105090 <debuginfo_eip+0x2b7>$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	74 d9                	je     f0105090 <debuginfo_eip+0x2b7>$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f01050bd	obj/kern/kernel.asm	/^f01050bd:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	7c 1d                	jl     f01050df <debuginfo_eip+0x306>$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	39 d0                	cmp    %edx,%eax$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	73 0a                	jae    f01050df <debuginfo_eip+0x306>$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	03 45 b8             	add    -0x48(%ebp),%eax$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	89 03                	mov    %eax,(%ebx)$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	eb 03                	jmp    f01050df <debuginfo_eip+0x306>$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	39 ca                	cmp    %ecx,%edx$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	7d 67                	jge    f0105150 <debuginfo_eip+0x377>$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	39 c1                	cmp    %eax,%ecx$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	7e 64                	jle    f0105157 <debuginfo_eip+0x37e>$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	8d 34 40             	lea    (%eax,%eax,2),%esi$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	80 7c b7 04 a0       	cmpb   $0xa0,0x4(%edi,%esi,4)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	75 5e                	jne    f010515e <debuginfo_eip+0x385>$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	8d 54 97 1c          	lea    0x1c(%edi,%edx,4),%edx$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	ff 43 14             	incl   0x14(%ebx)$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	40                   	inc    %eax$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	39 c1                	cmp    %eax,%ecx$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	7e 56                	jle    f0105165 <debuginfo_eip+0x38c>$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	80 7a f4 a0          	cmpb   $0xa0,-0xc(%edx)$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	74 ef                	je     f0105107 <debuginfo_eip+0x32e>$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	eb 4b                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	eb 44                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	eb 3d                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	eb 36                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	eb 2f                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	eb 28                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	eb 21                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	eb 1a                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	eb 13                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	eb 0c                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	eb 05                	jmp    f010516a <debuginfo_eip+0x391>$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	5b                   	pop    %ebx$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	5e                   	pop    %esi$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	5f                   	pop    %edi$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	5d                   	pop    %ebp$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	c3                   	ret    $/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174 <printnum>:$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	55                   	push   %ebp$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	89 e5                	mov    %esp,%ebp$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	57                   	push   %edi$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	56                   	push   %esi$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	53                   	push   %ebx$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	89 d7                	mov    %edx,%edi$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	72 0f                	jb     f01051ad <printnum+0x39>$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	76 07                	jbe    f01051ad <printnum+0x39>$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	4b                   	dec    %ebx$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	85 db                	test   %ebx,%ebx$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	7f 4f                	jg     f01051fa <printnum+0x86>$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	eb 5a                	jmp    f0105207 <printnum+0x93>$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	4b                   	dec    %ebx$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	00 $/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	e8 ad 12 00 00       	call   f010648c <__udivdi3>$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	89 fa                	mov    %edi,%edx$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	e8 7c ff ff ff       	call   f0105174 <printnum>$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	eb 0d                	jmp    f0105207 <printnum+0x93>$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	4b                   	dec    %ebx$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	75 f3                	jne    f01051fa <printnum+0x86>$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	00 $/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	e8 7c 13 00 00       	call   f01065ac <__umoddi3>$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	0f be 80 4a 7f 10 f0 	movsbl -0xfef80b6(%eax),%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	5b                   	pop    %ebx$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	5e                   	pop    %esi$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	5f                   	pop    %edi$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	5d                   	pop    %ebp$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	c3                   	ret    $/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249 <getuint>:$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	55                   	push   %ebp$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	89 e5                	mov    %esp,%ebp$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	7e 0e                	jle    f010525f <getuint+0x16>$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	8b 10                	mov    (%eax),%edx$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	8b 02                	mov    (%edx),%eax$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	eb 22                	jmp    f0105281 <getuint+0x38>$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	85 d2                	test   %edx,%edx$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	74 10                	je     f0105273 <getuint+0x2a>$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	8b 10                	mov    (%eax),%edx$/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	89 08                	mov    %ecx,(%eax)$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	8b 02                	mov    (%edx),%eax$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	eb 0e                	jmp    f0105281 <getuint+0x38>$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	8b 10                	mov    (%eax),%edx$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	89 08                	mov    %ecx,(%eax)$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	8b 02                	mov    (%edx),%eax$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	5d                   	pop    %ebp$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	c3                   	ret    $/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283 <sprintputch>:$/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283:	55                   	push   %ebp$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	89 e5                	mov    %esp,%ebp$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	ff 40 08             	incl   0x8(%eax)$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	8b 10                	mov    (%eax),%edx$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	73 08                	jae    f010529b <sprintputch+0x18>$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	42                   	inc    %edx$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	89 10                	mov    %edx,(%eax)$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	5d                   	pop    %ebp$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	c3                   	ret    $/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d <printfmt>:$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	55                   	push   %ebp$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	89 e5                	mov    %esp,%ebp$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	e8 02 00 00 00       	call   f01052c5 <vprintfmt>$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	c9                   	leave  $/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	c3                   	ret    $/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5 <vprintfmt>:$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	55                   	push   %ebp$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	57                   	push   %edi$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	56                   	push   %esi$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	53                   	push   %ebx$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	eb 17                	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	85 c0                	test   %eax,%eax$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	0f 84 93 03 00 00    	je     f0105671 <vprintfmt+0x3ac>$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	eb 03                	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	46                   	inc    %esi$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	75 e0                	jne    f01052d6 <vprintfmt+0x11>$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	eb 26                	jmp    f010533a <vprintfmt+0x75>$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	eb 1d                	jmp    f010533a <vprintfmt+0x75>$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	eb 14                	jmp    f010533a <vprintfmt+0x75>$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	eb 08                	jmp    f010533a <vprintfmt+0x75>$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	0f b6 16             	movzbl (%esi),%edx$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	8d 46 01             	lea    0x1(%esi),%eax$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	8a 06                	mov    (%esi),%al$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	3c 55                	cmp    $0x55,%al$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	0f 87 fd 02 00 00    	ja     f010564d <vprintfmt+0x388>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	ff 24 85 00 80 10 f0 	jmp    *-0xfef8000(,%eax,4)$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	8d 7a d0             	lea    -0x30(%edx),%edi$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	77 3f                	ja     f01053a8 <vprintfmt+0xe3>$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	46                   	inc    %esi$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	76 ed                	jbe    f010536c <vprintfmt+0xa7>$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	eb 2a                	jmp    f01053ab <vprintfmt+0xe6>$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	8b 38                	mov    (%eax),%edi$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	eb 1a                	jmp    f01053ab <vprintfmt+0xe6>$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	78 8f                	js     f0105326 <vprintfmt+0x61>$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	eb 9e                	jmp    f010533a <vprintfmt+0x75>$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	eb 92                	jmp    f010533a <vprintfmt+0x75>$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	79 89                	jns    f010533a <vprintfmt+0x75>$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	e9 7c ff ff ff       	jmp    f0105332 <vprintfmt+0x6d>$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	41                   	inc    %ecx$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	e9 7b ff ff ff       	jmp    f010533a <vprintfmt+0x75>$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	8b 00                	mov    (%eax),%eax$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	e9 11 ff ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	8b 00                	mov    (%eax),%eax$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	85 c0                	test   %eax,%eax$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	79 02                	jns    f01053ed <vprintfmt+0x128>$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	f7 d8                	neg    %eax$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	89 c2                	mov    %eax,%edx$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	7f 0b                	jg     f01053ff <vprintfmt+0x13a>$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	8b 04 85 60 81 10 f0 	mov    -0xfef7ea0(,%eax,4),%eax$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	85 c0                	test   %eax,%eax$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	75 23                	jne    f0105422 <vprintfmt+0x15d>$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	c7 44 24 08 62 7f 10 	movl   $0xf0107f62,0x8(%esp)$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	f0 $/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010540f	obj/kern/kernel.asm	/^f010540f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	e8 83 fe ff ff       	call   f010529d <printfmt>$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	e9 cb fe ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	c7 44 24 08 05 75 10 	movl   $0xf0107505,0x8(%esp)$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	f0 $/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	e8 60 fe ff ff       	call   f010529d <printfmt>$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	e9 a8 fe ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	89 f9                	mov    %edi,%ecx$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	8b 00                	mov    (%eax),%eax$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	85 c0                	test   %eax,%eax$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	75 07                	jne    f0105463 <vprintfmt+0x19e>$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	c7 45 d4 5b 7f 10 f0 	movl   $0xf0107f5b,-0x2c(%ebp)$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	85 f6                	test   %esi,%esi$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	7e 3b                	jle    f01054a2 <vprintfmt+0x1dd>$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	74 35                	je     f01054a2 <vprintfmt+0x1dd>$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	e8 6c 03 00 00       	call   f01057e8 <strnlen>$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	29 c6                	sub    %eax,%esi$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	85 f6                	test   %esi,%esi$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	7e 1d                	jle    f01054a2 <vprintfmt+0x1dd>$/;"	l
f0105485	obj/kern/kernel.asm	/^f0105485:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	89 7d d8             	mov    %edi,-0x28(%ebp)$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	4f                   	dec    %edi$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	75 f3                	jne    f010548f <vprintfmt+0x1ca>$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	0f be 02             	movsbl (%edx),%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	85 c0                	test   %eax,%eax$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	75 43                	jne    f01054ef <vprintfmt+0x22a>$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	eb 33                	jmp    f01054e1 <vprintfmt+0x21c>$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	74 18                	je     f01054cc <vprintfmt+0x207>$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	76 10                	jbe    f01054cc <vprintfmt+0x207>$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	eb 0a                	jmp    f01054d6 <vprintfmt+0x211>$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	0f be 06             	movsbl (%esi),%eax$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	46                   	inc    %esi$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	85 c0                	test   %eax,%eax$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	75 12                	jne    f01054f3 <vprintfmt+0x22e>$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	7f 15                	jg     f01054fc <vprintfmt+0x237>$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	e9 fe fd ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	46                   	inc    %esi$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	85 ff                	test   %edi,%edi$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	78 b7                	js     f01054ae <vprintfmt+0x1e9>$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	4f                   	dec    %edi$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	79 b4                	jns    f01054ae <vprintfmt+0x1e9>$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	eb e5                	jmp    f01054e1 <vprintfmt+0x21c>$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	ff d7                	call   *%edi$/;"	l
f010550f	obj/kern/kernel.asm	/^f010550f:	4e                   	dec    %esi$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	75 f0                	jne    f0105502 <vprintfmt+0x23d>$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	e9 d3 fd ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	7e 10                	jle    f010552f <vprintfmt+0x26a>$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	8b 30                	mov    (%eax),%esi$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	eb 26                	jmp    f0105555 <vprintfmt+0x290>$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	85 c9                	test   %ecx,%ecx$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	74 12                	je     f0105545 <vprintfmt+0x280>$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	8b 30                	mov    (%eax),%esi$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	89 f7                	mov    %esi,%edi$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	eb 10                	jmp    f0105555 <vprintfmt+0x290>$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	8b 30                	mov    (%eax),%esi$/;"	l
f0105550	obj/kern/kernel.asm	/^f0105550:	89 f7                	mov    %esi,%edi$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	85 ff                	test   %edi,%edi$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	78 0e                	js     f0105567 <vprintfmt+0x2a2>$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	89 f0                	mov    %esi,%eax$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	89 fa                	mov    %edi,%edx$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	e9 a8 00 00 00       	jmp    f010560f <vprintfmt+0x34a>$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	89 f0                	mov    %esi,%eax$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	89 fa                	mov    %edi,%edx$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	f7 d8                	neg    %eax$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	83 d2 00             	adc    $0x0,%edx$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	f7 da                	neg    %edx$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	e9 85 00 00 00       	jmp    f010560f <vprintfmt+0x34a>$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	89 ca                	mov    %ecx,%edx$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	e8 b5 fc ff ff       	call   f0105249 <getuint>$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	eb 74                	jmp    f010560f <vprintfmt+0x34a>$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	e9 20 fd ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01055ec	obj/kern/kernel.asm	/^f01055ec:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	8b 00                	mov    (%eax),%eax$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	eb 0f                	jmp    f010560f <vprintfmt+0x34a>$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	89 ca                	mov    %ecx,%edx$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	e8 3f fc ff ff       	call   f0105249 <getuint>$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	0f be 4d d8          	movsbl -0x28(%ebp),%ecx$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	89 da                	mov    %ebx,%edx$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	e8 41 fb ff ff       	call   f0105174 <printnum>$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	e9 b2 fc ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	e9 a0 fc ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	0f 84 88 fc ff ff    	je     f01052ed <vprintfmt+0x28>$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	4e                   	dec    %esi$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	75 f9                	jne    f0105665 <vprintfmt+0x3a0>$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c:	e9 7c fc ff ff       	jmp    f01052ed <vprintfmt+0x28>$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	5b                   	pop    %ebx$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	5e                   	pop    %esi$/;"	l
f0105676	obj/kern/kernel.asm	/^f0105676:	5f                   	pop    %edi$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	5d                   	pop    %ebp$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	c3                   	ret    $/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679 <vsnprintf>:$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	55                   	push   %ebp$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	89 e5                	mov    %esp,%ebp$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	85 c0                	test   %eax,%eax$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	74 30                	je     f01056ca <vsnprintf+0x51>$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	85 d2                	test   %edx,%edx$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	7e 33                	jle    f01056d1 <vsnprintf+0x58>$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	c7 04 24 83 52 10 f0 	movl   $0xf0105283,(%esp)$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	e8 06 fc ff ff       	call   f01052c5 <vprintfmt>$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	eb 0c                	jmp    f01056d6 <vsnprintf+0x5d>$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	eb 05                	jmp    f01056d6 <vsnprintf+0x5d>$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	c9                   	leave  $/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	c3                   	ret    $/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8 <snprintf>:$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	55                   	push   %ebp$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	e8 7b ff ff ff       	call   f0105679 <vsnprintf>$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	c9                   	leave  $/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	c3                   	ret    $/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700 <readline>:$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	55                   	push   %ebp$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	89 e5                	mov    %esp,%ebp$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	57                   	push   %edi$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	56                   	push   %esi$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	53                   	push   %ebx$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	85 c0                	test   %eax,%eax$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	74 10                	je     f0105720 <readline+0x20>$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	c7 04 24 05 75 10 f0 	movl   $0xf0107505,(%esp)$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	e8 b8 e8 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	e8 86 b1 ff ff       	call   f01008b2 <iscons>$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	89 c7                	mov    %eax,%edi$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	e8 69 b1 ff ff       	call   f01008a1 <getchar>$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	89 c3                	mov    %eax,%ebx$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	85 c0                	test   %eax,%eax$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	79 17                	jns    f0105755 <readline+0x55>$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	c7 04 24 84 81 10 f0 	movl   $0xf0108184,(%esp)$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	e8 8a e8 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	eb 69                	jmp    f01057be <readline+0xbe>$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	74 05                	je     f010575f <readline+0x5f>$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	75 17                	jne    f0105776 <readline+0x76>$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	85 f6                	test   %esi,%esi$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	7e 13                	jle    f0105776 <readline+0x76>$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	85 ff                	test   %edi,%edi$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	74 0c                	je     f0105773 <readline+0x73>$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	e8 1e b1 ff ff       	call   f0100891 <cputchar>$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	4e                   	dec    %esi$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	eb bd                	jmp    f0105733 <readline+0x33>$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	7e 1d                	jle    f0105798 <readline+0x98>$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	7f 15                	jg     f0105798 <readline+0x98>$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	85 ff                	test   %edi,%edi$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	74 08                	je     f010578f <readline+0x8f>$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	e8 02 b1 ff ff       	call   f0100891 <cputchar>$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	88 9e 00 1b 34 f0    	mov    %bl,-0xfcbe500(%esi)$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	46                   	inc    %esi$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	eb 9b                	jmp    f0105733 <readline+0x33>$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	74 05                	je     f01057a2 <readline+0xa2>$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	75 91                	jne    f0105733 <readline+0x33>$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	85 ff                	test   %edi,%edi$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	74 0c                	je     f01057b2 <readline+0xb2>$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	e8 df b0 ff ff       	call   f0100891 <cputchar>$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	c6 86 00 1b 34 f0 00 	movb   $0x0,-0xfcbe500(%esi)$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	b8 00 1b 34 f0       	mov    $0xf0341b00,%eax$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	5b                   	pop    %ebx$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	5e                   	pop    %esi$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	5f                   	pop    %edi$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	5d                   	pop    %ebp$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	c3                   	ret    $/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8 <strlen>:$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	55                   	push   %ebp$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	74 0e                	je     f01057e1 <strlen+0x19>$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	40                   	inc    %eax$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	75 f9                	jne    f01057d8 <strlen+0x10>$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	eb 05                	jmp    f01057e6 <strlen+0x1e>$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	5d                   	pop    %ebp$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	c3                   	ret    $/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8 <strnlen>:$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	55                   	push   %ebp$/;"	l
f01057e9	obj/kern/kernel.asm	/^f01057e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	53                   	push   %ebx$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	85 c9                	test   %ecx,%ecx$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	74 1a                	je     f0105810 <strnlen+0x28>$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	74 1c                	je     f0105817 <strnlen+0x2f>$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	89 d0                	mov    %edx,%eax$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	74 16                	je     f010581c <strnlen+0x34>$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	42                   	inc    %edx$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	75 f2                	jne    f0105800 <strnlen+0x18>$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	eb 0c                	jmp    f010581c <strnlen+0x34>$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	eb 05                	jmp    f010581c <strnlen+0x34>$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	5b                   	pop    %ebx$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	5d                   	pop    %ebp$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	c3                   	ret    $/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f <strcpy>:$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	55                   	push   %ebp$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	89 e5                	mov    %esp,%ebp$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	53                   	push   %ebx$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	42                   	inc    %edx$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	84 c9                	test   %cl,%cl$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	75 f5                	jne    f010582e <strcpy+0xf>$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	5b                   	pop    %ebx$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	5d                   	pop    %ebp$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	c3                   	ret    $/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c <strcat>:$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	55                   	push   %ebp$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	89 e5                	mov    %esp,%ebp$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	53                   	push   %ebx$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	e8 7a ff ff ff       	call   f01057c8 <strlen>$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	01 d8                	add    %ebx,%eax$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	e8 c0 ff ff ff       	call   f010581f <strcpy>$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	89 d8                	mov    %ebx,%eax$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	5b                   	pop    %ebx$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	5d                   	pop    %ebp$/;"	l
f0105866	obj/kern/kernel.asm	/^f0105866:	c3                   	ret    $/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867 <strncpy>:$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	55                   	push   %ebp$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	89 e5                	mov    %esp,%ebp$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	56                   	push   %esi$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	53                   	push   %ebx$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	85 f6                	test   %esi,%esi$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	74 15                	je     f010588e <strncpy+0x27>$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	8a 1a                	mov    (%edx),%bl$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	41                   	inc    %ecx$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	39 f1                	cmp    %esi,%ecx$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	75 f0                	jne    f010587e <strncpy+0x17>$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	5b                   	pop    %ebx$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	5e                   	pop    %esi$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	5d                   	pop    %ebp$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	c3                   	ret    $/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892 <strlcpy>:$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	55                   	push   %ebp$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	89 e5                	mov    %esp,%ebp$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	57                   	push   %edi$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	56                   	push   %esi$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	53                   	push   %ebx$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010589b	obj/kern/kernel.asm	/^f010589b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	85 f6                	test   %esi,%esi$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	74 31                	je     f01058d6 <strlcpy+0x44>$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	74 21                	je     f01058cb <strlcpy+0x39>$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	8a 0b                	mov    (%ebx),%cl$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	84 c9                	test   %cl,%cl$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	74 1f                	je     f01058cf <strlcpy+0x3d>$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	83 ee 02             	sub    $0x2,%esi$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	89 f8                	mov    %edi,%eax$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	88 08                	mov    %cl,(%eax)$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	40                   	inc    %eax$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	39 f2                	cmp    %esi,%edx$/;"	l
f01058bf	obj/kern/kernel.asm	/^f01058bf:	74 10                	je     f01058d1 <strlcpy+0x3f>$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	42                   	inc    %edx$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5:	84 c9                	test   %cl,%cl$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	75 f1                	jne    f01058ba <strlcpy+0x28>$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	eb 06                	jmp    f01058d1 <strlcpy+0x3f>$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	89 f8                	mov    %edi,%eax$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	eb 02                	jmp    f01058d1 <strlcpy+0x3f>$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	89 f8                	mov    %edi,%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	eb 02                	jmp    f01058d8 <strlcpy+0x46>$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	89 f8                	mov    %edi,%eax$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	29 f8                	sub    %edi,%eax$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	5b                   	pop    %ebx$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	5e                   	pop    %esi$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	5f                   	pop    %edi$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	5d                   	pop    %ebp$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	c3                   	ret    $/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df <strcmp>:$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	55                   	push   %ebp$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	8a 01                	mov    (%ecx),%al$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	84 c0                	test   %al,%al$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	74 11                	je     f01058ff <strcmp+0x20>$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	3a 02                	cmp    (%edx),%al$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	75 0d                	jne    f01058ff <strcmp+0x20>$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	42                   	inc    %edx$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	8a 41 01             	mov    0x1(%ecx),%al$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	84 c0                	test   %al,%al$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	74 05                	je     f01058ff <strcmp+0x20>$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	41                   	inc    %ecx$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	3a 02                	cmp    (%edx),%al$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	74 f3                	je     f01058f2 <strcmp+0x13>$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	29 d0                	sub    %edx,%eax$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	5d                   	pop    %ebp$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	c3                   	ret    $/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909 <strncmp>:$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	55                   	push   %ebp$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	89 e5                	mov    %esp,%ebp$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	53                   	push   %ebx$/;"	l
f010590d	obj/kern/kernel.asm	/^f010590d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	85 c0                	test   %eax,%eax$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	74 1b                	je     f0105935 <strncmp+0x2c>$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	8a 1a                	mov    (%edx),%bl$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	84 db                	test   %bl,%bl$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	74 24                	je     f0105944 <strncmp+0x3b>$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	75 20                	jne    f0105944 <strncmp+0x3b>$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	48                   	dec    %eax$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	74 15                	je     f010593c <strncmp+0x33>$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	42                   	inc    %edx$/;"	l
f0105928	obj/kern/kernel.asm	/^f0105928:	41                   	inc    %ecx$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	8a 1a                	mov    (%edx),%bl$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	84 db                	test   %bl,%bl$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	74 15                	je     f0105944 <strncmp+0x3b>$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	74 f1                	je     f0105924 <strncmp+0x1b>$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	eb 0f                	jmp    f0105944 <strncmp+0x3b>$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	eb 05                	jmp    f0105941 <strncmp+0x38>$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	5b                   	pop    %ebx$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	5d                   	pop    %ebp$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	c3                   	ret    $/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	29 d0                	sub    %edx,%eax$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	eb f3                	jmp    f0105941 <strncmp+0x38>$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e <strchr>:$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	55                   	push   %ebp$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	8a 10                	mov    (%eax),%dl$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	84 d2                	test   %dl,%dl$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	74 19                	je     f0105976 <strchr+0x28>$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	38 ca                	cmp    %cl,%dl$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	75 07                	jne    f0105968 <strchr+0x1a>$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	eb 18                	jmp    f010597b <strchr+0x2d>$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	40                   	inc    %eax$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	38 ca                	cmp    %cl,%dl$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	74 13                	je     f010597b <strchr+0x2d>$/;"	l
f0105968	obj/kern/kernel.asm	/^f0105968:	8a 50 01             	mov    0x1(%eax),%dl$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	84 d2                	test   %dl,%dl$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	75 f4                	jne    f0105963 <strchr+0x15>$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	eb 05                	jmp    f010597b <strchr+0x2d>$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	5d                   	pop    %ebp$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	c3                   	ret    $/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d <strfind>:$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	55                   	push   %ebp$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	8a 10                	mov    (%eax),%dl$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	84 d2                	test   %dl,%dl$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	74 11                	je     f010599d <strfind+0x20>$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	38 ca                	cmp    %cl,%dl$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	75 06                	jne    f0105996 <strfind+0x19>$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	eb 0b                	jmp    f010599d <strfind+0x20>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	38 ca                	cmp    %cl,%dl$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	74 07                	je     f010599d <strfind+0x20>$/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	40                   	inc    %eax$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	8a 10                	mov    (%eax),%dl$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	84 d2                	test   %dl,%dl$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	75 f5                	jne    f0105992 <strfind+0x15>$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	5d                   	pop    %ebp$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	c3                   	ret    $/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f <memset>:$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	55                   	push   %ebp$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	57                   	push   %edi$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	56                   	push   %esi$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	53                   	push   %ebx$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	85 c9                	test   %ecx,%ecx$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	74 30                	je     f01059e2 <memset+0x43>$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	75 25                	jne    f01059df <memset+0x40>$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	75 20                	jne    f01059df <memset+0x40>$/;"	l
f01059bf	obj/kern/kernel.asm	/^f01059bf:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	89 d3                	mov    %edx,%ebx$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	89 d6                	mov    %edx,%esi$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	89 d0                	mov    %edx,%eax$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	09 f0                	or     %esi,%eax$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	09 d0                	or     %edx,%eax$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	09 d8                	or     %ebx,%eax$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	fc                   	cld    $/;"	l
f01059db	obj/kern/kernel.asm	/^f01059db:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	eb 03                	jmp    f01059e2 <memset+0x43>$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	fc                   	cld    $/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	89 f8                	mov    %edi,%eax$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	5b                   	pop    %ebx$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	5e                   	pop    %esi$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	5f                   	pop    %edi$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	5d                   	pop    %ebp$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	c3                   	ret    $/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9 <memmove>:$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	55                   	push   %ebp$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	57                   	push   %edi$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	56                   	push   %esi$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	39 c6                	cmp    %eax,%esi$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	73 34                	jae    f0105a2f <memmove+0x46>$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	39 d0                	cmp    %edx,%eax$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	73 2d                	jae    f0105a2f <memmove+0x46>$/;"	l
f0105a02	obj/kern/kernel.asm	/^f0105a02:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	75 1b                	jne    f0105a25 <memmove+0x3c>$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	75 13                	jne    f0105a25 <memmove+0x3c>$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	75 0e                	jne    f0105a25 <memmove+0x3c>$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	fd                   	std    $/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	eb 07                	jmp    f0105a2c <memmove+0x43>$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	4f                   	dec    %edi$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	fd                   	std    $/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	fc                   	cld    $/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	eb 20                	jmp    f0105a4f <memmove+0x66>$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	75 13                	jne    f0105a4a <memmove+0x61>$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	a8 03                	test   $0x3,%al$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	75 0f                	jne    f0105a4a <memmove+0x61>$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	75 0a                	jne    f0105a4a <memmove+0x61>$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	89 c7                	mov    %eax,%edi$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	fc                   	cld    $/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	eb 05                	jmp    f0105a4f <memmove+0x66>$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	89 c7                	mov    %eax,%edi$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	fc                   	cld    $/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	5e                   	pop    %esi$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	5f                   	pop    %edi$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	5d                   	pop    %ebp$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	c3                   	ret    $/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53 <memcpy>:$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	55                   	push   %ebp$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	e8 77 ff ff ff       	call   f01059e9 <memmove>$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	c9                   	leave  $/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	c3                   	ret    $/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74 <memcmp>:$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	55                   	push   %ebp$/;"	l
f0105a75	obj/kern/kernel.asm	/^f0105a75:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	57                   	push   %edi$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	56                   	push   %esi$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	53                   	push   %ebx$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	85 ff                	test   %edi,%edi$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	74 31                	je     f0105ab8 <memcmp+0x44>$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	8a 03                	mov    (%ebx),%al$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	8a 0e                	mov    (%esi),%cl$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	38 c8                	cmp    %cl,%al$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	74 18                	je     f0105aa7 <memcmp+0x33>$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	eb 0c                	jmp    f0105a9d <memcmp+0x29>$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	8a 44 13 01          	mov    0x1(%ebx,%edx,1),%al$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	42                   	inc    %edx$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	8a 0c 16             	mov    (%esi,%edx,1),%cl$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	38 c8                	cmp    %cl,%al$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	74 10                	je     f0105aad <memcmp+0x39>$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	29 c8                	sub    %ecx,%eax$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	eb 16                	jmp    f0105abd <memcmp+0x49>$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	4f                   	dec    %edi$/;"	l
f0105aa8	obj/kern/kernel.asm	/^f0105aa8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	39 fa                	cmp    %edi,%edx$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	75 e0                	jne    f0105a91 <memcmp+0x1d>$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	eb 05                	jmp    f0105abd <memcmp+0x49>$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	5b                   	pop    %ebx$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	5e                   	pop    %esi$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	5f                   	pop    %edi$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	5d                   	pop    %ebp$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	c3                   	ret    $/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2 <memfind>:$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	55                   	push   %ebp$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	89 c2                	mov    %eax,%edx$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	39 d0                	cmp    %edx,%eax$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	73 12                	jae    f0105ae3 <memfind+0x21>$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	75 06                	jne    f0105ade <memfind+0x1c>$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	eb 09                	jmp    f0105ae3 <memfind+0x21>$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	74 05                	je     f0105ae3 <memfind+0x21>$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	40                   	inc    %eax$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	39 d0                	cmp    %edx,%eax$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	75 f7                	jne    f0105ada <memfind+0x18>$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	5d                   	pop    %ebp$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	c3                   	ret    $/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5 <strtol>:$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	55                   	push   %ebp$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	57                   	push   %edi$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	56                   	push   %esi$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	53                   	push   %ebx$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	eb 01                	jmp    f0105af4 <strtol+0xf>$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	42                   	inc    %edx$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	8a 02                	mov    (%edx),%al$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	3c 20                	cmp    $0x20,%al$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	74 f9                	je     f0105af3 <strtol+0xe>$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	3c 09                	cmp    $0x9,%al$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	74 f5                	je     f0105af3 <strtol+0xe>$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	75 08                	jne    f0105b0a <strtol+0x25>$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	42                   	inc    %edx$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	eb 13                	jmp    f0105b1d <strtol+0x38>$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	75 0a                	jne    f0105b18 <strtol+0x33>$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	eb 05                	jmp    f0105b1d <strtol+0x38>$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	85 db                	test   %ebx,%ebx$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	74 05                	je     f0105b26 <strtol+0x41>$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	75 28                	jne    f0105b4e <strtol+0x69>$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	8a 02                	mov    (%edx),%al$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	3c 30                	cmp    $0x30,%al$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	75 10                	jne    f0105b3c <strtol+0x57>$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	75 0a                	jne    f0105b3c <strtol+0x57>$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	83 c2 02             	add    $0x2,%edx$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	eb 12                	jmp    f0105b4e <strtol+0x69>$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	85 db                	test   %ebx,%ebx$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	75 0e                	jne    f0105b4e <strtol+0x69>$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	3c 30                	cmp    $0x30,%al$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	75 05                	jne    f0105b49 <strtol+0x64>$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	42                   	inc    %edx$/;"	l
f0105b45	obj/kern/kernel.asm	/^f0105b45:	b3 08                	mov    $0x8,%bl$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	eb 05                	jmp    f0105b4e <strtol+0x69>$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	89 de                	mov    %ebx,%esi$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	8a 0a                	mov    (%edx),%cl$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	77 08                	ja     f0105b67 <strtol+0x82>$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	eb 1e                	jmp    f0105b85 <strtol+0xa0>$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	77 08                	ja     f0105b77 <strtol+0x92>$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	eb 0e                	jmp    f0105b85 <strtol+0xa0>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	77 12                	ja     f0105b91 <strtol+0xac>$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	7d 0c                	jge    f0105b95 <strtol+0xb0>$/;"	l
f0105b89	obj/kern/kernel.asm	/^f0105b89:	42                   	inc    %edx$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	0f af c6             	imul   %esi,%eax$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	01 c8                	add    %ecx,%eax$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	eb c4                	jmp    f0105b55 <strtol+0x70>$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	89 c1                	mov    %eax,%ecx$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	eb 02                	jmp    f0105b97 <strtol+0xb2>$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	89 c1                	mov    %eax,%ecx$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	74 05                	je     f0105ba2 <strtol+0xbd>$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	89 13                	mov    %edx,(%ebx)$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	85 ff                	test   %edi,%edi$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	74 04                	je     f0105baa <strtol+0xc5>$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	89 c8                	mov    %ecx,%eax$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	f7 d8                	neg    %eax$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	5b                   	pop    %ebx$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	5e                   	pop    %esi$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	5f                   	pop    %edi$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	5d                   	pop    %ebp$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	c3                   	ret    $/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0 <mpentry_start>:$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	fa                   	cli    $/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	31 c0                	xor    %eax,%eax$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	8e d8                	mov    %eax,%ds$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	8e c0                	mov    %eax,%es$/;"	l
f0105bb7	obj/kern/kernel.asm	/^f0105bb7:	8e d0                	mov    %eax,%ss$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	74 70                	je     f0105c2e <sum+0x2>$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	08 00                	or     %al,(%eax)$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0 <start32>:$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	8e d8                	mov    %eax,%ds$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	8e c0                	mov    %eax,%es$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	8e d0                	mov    %eax,%ss$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	8e e0                	mov    %eax,%fs$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	8e e8                	mov    %eax,%gs$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	b8 00 60 12 00       	mov    $0x126000,%eax$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	8b 25 04 1f 34 f0    	mov    0xf0341f04,%esp$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	ff d0                	call   *%eax$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07 <spin>:$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	eb fe                	jmp    f0105c07 <spin>$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c <gdt>:$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	ff                   	(bad)  $/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	ff 00                	incl   (%eax)$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	00 00                	add    %al,(%eax)$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24 <gdtdesc>:$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	17                   	pop    %ss$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a <mpentry_end>:$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	90                   	nop$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c <sum>:$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	55                   	push   %ebp$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	56                   	push   %esi$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	53                   	push   %ebx$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	85 d2                	test   %edx,%edx$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	7e 17                	jle    f0105c4c <sum+0x20>$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	01 f3                	add    %esi,%ebx$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	41                   	inc    %ecx$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	75 f5                	jne    f0105c3f <sum+0x13>$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	eb 05                	jmp    f0105c51 <sum+0x25>$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	88 d8                	mov    %bl,%al$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	5b                   	pop    %ebx$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	5e                   	pop    %esi$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	5d                   	pop    %ebp$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	c3                   	ret    $/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57 <mpsearch1>:$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	55                   	push   %ebp$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	56                   	push   %esi$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	53                   	push   %ebx$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	8b 0d 08 1f 34 f0    	mov    0xf0341f08,%ecx$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	72 20                	jb     f0105c8e <mpsearch1+0x37>$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	f0 $/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	00 $/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	c7 04 24 21 83 10 f0 	movl   $0xf0108321,(%esp)$/;"	l
f0105c89	obj/kern/kernel.asm	/^f0105c89:	e8 b2 a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	89 f2                	mov    %esi,%edx$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	77 20                	ja     f0105cba <mpsearch1+0x63>$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	f0 $/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	00 $/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	c7 04 24 21 83 10 f0 	movl   $0xf0108321,(%esp)$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	e8 86 a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	73 3a                	jae    f0105d04 <mpsearch1+0xad>$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	00 $/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	c7 44 24 04 31 83 10 	movl   $0xf0108331,0x4(%esp)$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	f0 $/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	e8 92 fd ff ff       	call   f0105a74 <memcmp>$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	85 c0                	test   %eax,%eax$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	75 10                	jne    f0105cf6 <mpsearch1+0x9f>$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	e8 3a ff ff ff       	call   f0105c2c <sum>$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	84 c0                	test   %al,%al$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	74 13                	je     f0105d09 <mpsearch1+0xb2>$/;"	l
f0105cf6	obj/kern/kernel.asm	/^f0105cf6:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	72 cd                	jb     f0105cca <mpsearch1+0x73>$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	eb 05                	jmp    f0105d09 <mpsearch1+0xb2>$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	89 d8                	mov    %ebx,%eax$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	5b                   	pop    %ebx$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	5e                   	pop    %esi$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	5d                   	pop    %ebp$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	c3                   	ret    $/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12 <mp_init>:$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	55                   	push   %ebp$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	57                   	push   %edi$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	56                   	push   %esi$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	53                   	push   %ebx$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	c7 05 c0 23 34 f0 20 	movl   $0xf0342020,0xf03423c0$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	20 34 f0 $/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	83 3d 08 1f 34 f0 00 	cmpl   $0x0,0xf0341f08$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	75 24                	jne    f0105d52 <mp_init+0x40>$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	00 $/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	f0 $/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	00 $/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	c7 04 24 21 83 10 f0 	movl   $0xf0108321,(%esp)$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	e8 ee a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105d52	obj/kern/kernel.asm	/^f0105d52:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	85 c0                	test   %eax,%eax$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	74 16                	je     f0105d73 <mp_init+0x61>$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	e8 ed fe ff ff       	call   f0105c57 <mpsearch1>$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	85 c0                	test   %eax,%eax$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	75 3c                	jne    f0105dad <mp_init+0x9b>$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	eb 20                	jmp    f0105d93 <mp_init+0x81>$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	e8 cb fe ff ff       	call   f0105c57 <mpsearch1>$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	85 c0                	test   %eax,%eax$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	75 1a                	jne    f0105dad <mp_init+0x9b>$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	e8 b5 fe ff ff       	call   f0105c57 <mpsearch1>$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	85 c0                	test   %eax,%eax$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	0f 84 30 02 00 00    	je     f0105fdd <mp_init+0x2cb>$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	85 db                	test   %ebx,%ebx$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	74 06                	je     f0105dbd <mp_init+0xab>$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	74 11                	je     f0105dce <mp_init+0xbc>$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	c7 04 24 94 81 10 f0 	movl   $0xf0108194,(%esp)$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	e8 0f e2 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	e9 0f 02 00 00       	jmp    f0105fdd <mp_init+0x2cb>$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	89 d8                	mov    %ebx,%eax$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	3b 05 08 1f 34 f0    	cmp    0xf0341f08,%eax$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	72 20                	jb     f0105dfb <mp_init+0xe9>$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	f0 $/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	00 $/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	c7 04 24 21 83 10 f0 	movl   $0xf0108321,(%esp)$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	e8 45 a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	00 $/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	c7 44 24 04 36 83 10 	movl   $0xf0108336,0x4(%esp)$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	f0 $/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	e8 5b fc ff ff       	call   f0105a74 <memcmp>$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	85 c0                	test   %eax,%eax$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	74 11                	je     f0105e2e <mp_init+0x11c>$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	c7 04 24 c4 81 10 f0 	movl   $0xf01081c4,(%esp)$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	e8 af e1 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	e9 af 01 00 00       	jmp    f0105fdd <mp_init+0x2cb>$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	66 8b 73 04          	mov    0x4(%ebx),%si$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	0f b7 d6             	movzwl %si,%edx$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	e8 f0 fd ff ff       	call   f0105c2c <sum>$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	84 c0                	test   %al,%al$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	74 11                	je     f0105e51 <mp_init+0x13f>$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	c7 04 24 f8 81 10 f0 	movl   $0xf01081f8,(%esp)$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	e8 8c e1 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	e9 8c 01 00 00       	jmp    f0105fdd <mp_init+0x2cb>$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	8a 43 06             	mov    0x6(%ebx),%al$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	3c 01                	cmp    $0x1,%al$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	74 1c                	je     f0105e74 <mp_init+0x162>$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	3c 04                	cmp    $0x4,%al$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	74 18                	je     f0105e74 <mp_init+0x162>$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	c7 04 24 1c 82 10 f0 	movl   $0xf010821c,(%esp)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	e8 69 e1 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	e9 69 01 00 00       	jmp    f0105fdd <mp_init+0x2cb>$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	0f b7 53 28          	movzwl 0x28(%ebx),%edx$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	0f b7 c6             	movzwl %si,%eax$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	01 d8                	add    %ebx,%eax$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	e8 aa fd ff ff       	call   f0105c2c <sum>$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	3a 43 2a             	cmp    0x2a(%ebx),%al$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	74 11                	je     f0105e98 <mp_init+0x186>$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	c7 04 24 3c 82 10 f0 	movl   $0xf010823c,(%esp)$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	e8 45 e1 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	e9 45 01 00 00       	jmp    f0105fdd <mp_init+0x2cb>$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	85 db                	test   %ebx,%ebx$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	0f 84 3d 01 00 00    	je     f0105fdd <mp_init+0x2cb>$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	c7 05 00 20 34 f0 01 	movl   $0x1,0xf0342000$/;"	l
f0105ea7	obj/kern/kernel.asm	/^f0105ea7:	00 00 00 $/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	a3 00 30 38 f0       	mov    %eax,0xf0383000$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	66 83 7b 22 00       	cmpw   $0x0,0x22(%ebx)$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	0f 84 a8 00 00 00    	je     f0105f65 <mp_init+0x253>$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	8d 73 2c             	lea    0x2c(%ebx),%esi$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	8a 06                	mov    (%esi),%al$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	84 c0                	test   %al,%al$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	74 06                	je     f0105ed1 <mp_init+0x1bf>$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	3c 04                	cmp    $0x4,%al$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	77 68                	ja     f0105f37 <mp_init+0x225>$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	eb 61                	jmp    f0105f32 <mp_init+0x220>$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	74 1d                	je     f0105ef4 <mp_init+0x1e2>$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	a1 c4 23 34 f0       	mov    0xf03423c4,%eax$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	29 c2                	sub    %eax,%edx$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	a3 c0 23 34 f0       	mov    %eax,0xf03423c0$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	a1 c4 23 34 f0       	mov    0xf03423c4,%eax$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	7f 1b                	jg     f0105f19 <mp_init+0x207>$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	29 c2                	sub    %eax,%edx$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	88 04 95 20 20 34 f0 	mov    %al,-0xfcbdfe0(,%edx,4)$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	40                   	inc    %eax$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	a3 c4 23 34 f0       	mov    %eax,0xf03423c4$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	eb 14                	jmp    f0105f2d <mp_init+0x21b>$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	c7 04 24 6c 82 10 f0 	movl   $0xf010826c,(%esp)$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	e8 ab e0 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	83 c6 14             	add    $0x14,%esi$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	eb 26                	jmp    f0105f58 <mp_init+0x246>$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	83 c6 08             	add    $0x8,%esi$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	eb 21                	jmp    f0105f58 <mp_init+0x246>$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	c7 04 24 94 82 10 f0 	movl   $0xf0108294,(%esp)$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	e8 8e e0 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	c7 05 00 20 34 f0 00 	movl   $0x0,0xf0342000$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	00 00 00 $/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	0f b7 7b 22          	movzwl 0x22(%ebx),%edi$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	47                   	inc    %edi$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	39 f8                	cmp    %edi,%eax$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	0f 87 60 ff ff ff    	ja     f0105ec5 <mp_init+0x1b3>$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	a1 c0 23 34 f0       	mov    0xf03423c0,%eax$/;"	l
f0105f6a	obj/kern/kernel.asm	/^f0105f6a:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	83 3d 00 20 34 f0 00 	cmpl   $0x0,0xf0342000$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	75 22                	jne    f0105f9c <mp_init+0x28a>$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	c7 05 c4 23 34 f0 01 	movl   $0x1,0xf03423c4$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	00 00 00 $/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	c7 05 00 30 38 f0 00 	movl   $0x0,0xf0383000$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	00 00 00 $/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	c7 04 24 b4 82 10 f0 	movl   $0xf01082b4,(%esp)$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	e8 3e e0 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	eb 41                	jmp    f0105fdd <mp_init+0x2cb>$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	8b 15 c4 23 34 f0    	mov    0xf03423c4,%edx$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	c7 04 24 3b 83 10 f0 	movl   $0xf010833b,(%esp)$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	e8 1f e0 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	74 1b                	je     f0105fdd <mp_init+0x2cb>$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	c7 04 24 e0 82 10 f0 	movl   $0xf01082e0,(%esp)$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	e8 0a e0 ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	b0 70                	mov    $0x70,%al$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	ee                   	out    %al,(%dx)$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	b2 23                	mov    $0x23,%dl$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	ec                   	in     (%dx),%al$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	ee                   	out    %al,(%dx)$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	5b                   	pop    %ebx$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	5e                   	pop    %esi$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	5f                   	pop    %edi$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	5d                   	pop    %ebp$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	c3                   	ret    $/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	00 00                	add    %al,(%eax)$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8 <lapicw>:$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	55                   	push   %ebp$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	03 05 00 30 38 f0    	add    0xf0383000,%eax$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	89 10                	mov    %edx,(%eax)$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	a1 00 30 38 f0       	mov    0xf0383000,%eax$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	5d                   	pop    %ebp$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	c3                   	ret    $/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000 <cpunum>:$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	55                   	push   %ebp$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	89 e5                	mov    %esp,%ebp$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	a1 00 30 38 f0       	mov    0xf0383000,%eax$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	85 c0                	test   %eax,%eax$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	74 08                	je     f0106014 <cpunum+0x14>$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	eb 05                	jmp    f0106019 <cpunum+0x19>$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	5d                   	pop    %ebp$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	c3                   	ret    $/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b <lapic_init>:$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	55                   	push   %ebp$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	89 e5                	mov    %esp,%ebp$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	83 3d 00 30 38 f0 00 	cmpl   $0x0,0xf0383000$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	0f 84 12 01 00 00    	je     f010613d <lapic_init+0x122>$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	e8 ae ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	e8 9f ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	e8 90 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	e8 81 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	e8 94 ff ff ff       	call   f0106000 <cpunum>$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	29 c2                	sub    %eax,%edx$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	39 05 c0 23 34 f0    	cmp    %eax,0xf03423c0$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	74 0f                	je     f0106096 <lapic_init+0x7b>$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	e8 52 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	e8 43 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	a1 00 30 38 f0       	mov    0xf0383000,%eax$/;"	l
f01060aa	obj/kern/kernel.asm	/^f01060aa:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	3c 03                	cmp    $0x3,%al$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	76 0f                	jbe    f01060c3 <lapic_init+0xa8>$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	e8 25 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	e8 16 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	e8 07 ff ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	e8 f8 fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	e8 e9 fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	e8 da fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	e8 cb fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	8b 15 00 30 38 f0    	mov    0xf0383000,%edx$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	f6 c4 10             	test   $0x10,%ah$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	75 f5                	jne    f0106123 <lapic_init+0x108>$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	e8 ab fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	5d                   	pop    %ebp$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	c3                   	ret    $/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f <lapic_eoi>:$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	55                   	push   %ebp$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	89 e5                	mov    %esp,%ebp$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	83 3d 00 30 38 f0 00 	cmpl   $0x0,0xf0383000$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	74 0f                	je     f010615a <lapic_eoi+0x1b>$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	e8 8e fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	5d                   	pop    %ebp$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	c3                   	ret    $/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c <lapic_startap>:$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	55                   	push   %ebp$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	89 e5                	mov    %esp,%ebp$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	56                   	push   %esi$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	53                   	push   %ebx$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	8a 5d 08             	mov    0x8(%ebp),%bl$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	b0 0f                	mov    $0xf,%al$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	ee                   	out    %al,(%dx)$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	b2 71                	mov    $0x71,%dl$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	b0 0a                	mov    $0xa,%al$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	ee                   	out    %al,(%dx)$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	83 3d 08 1f 34 f0 00 	cmpl   $0x0,0xf0341f08$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	75 24                	jne    f01061a4 <lapic_startap+0x48>$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	00 $/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	c7 44 24 08 28 67 10 	movl   $0xf0106728,0x8(%esp)$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	f0 $/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	00 $/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	c7 04 24 58 83 10 f0 	movl   $0xf0108358,(%esp)$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	e8 9c 9e ff ff       	call   f0100040 <_panic>$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	00 00 $/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	89 f0                	mov    %esi,%eax$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01061b8	obj/kern/kernel.asm	/^f01061b8:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	89 da                	mov    %ebx,%edx$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	e8 21 fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01061cc	obj/kern/kernel.asm	/^f01061cc:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	e8 12 fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	e8 03 fe ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01061e8	obj/kern/kernel.asm	/^f01061e8:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	89 da                	mov    %ebx,%edx$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	e8 ee fd ff ff       	call   f0105fe8 <lapicw>$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	89 f2                	mov    %esi,%edx$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	e8 e2 fd ff ff       	call   f0105fe8 <lapicw>$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	89 da                	mov    %ebx,%edx$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	e8 d6 fd ff ff       	call   f0105fe8 <lapicw>$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	89 f2                	mov    %esi,%edx$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	e8 ca fd ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	5b                   	pop    %ebx$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	5e                   	pop    %esi$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	5d                   	pop    %ebp$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	c3                   	ret    $/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225 <lapic_ipi>:$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	55                   	push   %ebp$/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	89 e5                	mov    %esp,%ebp$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	e8 ad fd ff ff       	call   f0105fe8 <lapicw>$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	8b 15 00 30 38 f0    	mov    0xf0383000,%edx$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	f6 c4 10             	test   $0x10,%ah$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	75 f5                	jne    f0106241 <lapic_ipi+0x1c>$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	5d                   	pop    %ebp$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	c3                   	ret    $/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250 <holding>:$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	55                   	push   %ebp$/;"	l
f0106251	obj/kern/kernel.asm	/^f0106251:	89 e5                	mov    %esp,%ebp$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	53                   	push   %ebx$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	74 25                	je     f0106281 <holding+0x31>$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	e8 9c fd ff ff       	call   f0106000 <cpunum>$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	29 c2                	sub    %eax,%edx$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	0f 94 c0             	sete   %al$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	eb 05                	jmp    f0106286 <holding+0x36>$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	5b                   	pop    %ebx$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	5d                   	pop    %ebp$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	c3                   	ret    $/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c <__spin_initlock>:$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	55                   	push   %ebp$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	89 e5                	mov    %esp,%ebp$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	5d                   	pop    %ebp$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	c3                   	ret    $/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7 <spin_lock>:$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	55                   	push   %ebp$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	53                   	push   %ebx$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	83 ec 24             	sub    $0x24,%esp$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	89 d8                	mov    %ebx,%eax$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	e8 98 ff ff ff       	call   f0106250 <holding>$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	85 c0                	test   %eax,%eax$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	75 0d                	jne    f01062c9 <spin_lock+0x22>$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	89 da                	mov    %ebx,%edx$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	b0 01                	mov    $0x1,%al$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	85 c0                	test   %eax,%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	75 2e                	jne    f01062f5 <spin_lock+0x4e>$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	eb 3c                	jmp    f0106305 <spin_lock+0x5e>$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	e8 2f fd ff ff       	call   f0106000 <cpunum>$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	c7 44 24 08 68 83 10 	movl   $0xf0108368,0x8(%esp)$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	f0 $/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	c7 44 24 04 59 00 00 	movl   $0x59,0x4(%esp)$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	00 $/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	c7 04 24 cc 83 10 f0 	movl   $0xf01083cc,(%esp)$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	e8 4b 9d ff ff       	call   f0100040 <_panic>$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	f3 90                	pause  $/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	89 c8                	mov    %ecx,%eax$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	85 c0                	test   %eax,%eax$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	75 f5                	jne    f01062fa <spin_lock+0x53>$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	e8 f6 fc ff ff       	call   f0106000 <cpunum>$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	29 c2                	sub    %eax,%edx$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	8d 04 85 20 20 34 f0 	lea    -0xfcbdfe0(,%eax,4),%eax$/;"	l
f010631d	obj/kern/kernel.asm	/^f010631d:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	89 e8                	mov    %ebp,%eax$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	76 36                	jbe    f0106369 <spin_lock+0xc2>$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	eb 2d                	jmp    f0106362 <spin_lock+0xbb>$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	8d 9a 00 00 80 10    	lea    0x10800000(%edx),%ebx$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	81 fb ff ff 7f 0e    	cmp    $0xe7fffff,%ebx$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	77 10                	ja     f0106353 <spin_lock+0xac>$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	8b 12                	mov    (%edx),%edx$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	40                   	inc    %eax$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	75 e4                	jne    f0106335 <spin_lock+0x8e>$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	eb 25                	jmp    f0106378 <spin_lock+0xd1>$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	40                   	inc    %eax$/;"	l
f010635b	obj/kern/kernel.asm	/^f010635b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	7e f3                	jle    f0106353 <spin_lock+0xac>$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	eb 16                	jmp    f0106378 <spin_lock+0xd1>$/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	eb ea                	jmp    f0106353 <spin_lock+0xac>$/;"	l
f0106369	obj/kern/kernel.asm	/^f0106369:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	8b 10                	mov    (%eax),%edx$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	eb bd                	jmp    f0106335 <spin_lock+0x8e>$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	83 c4 24             	add    $0x24,%esp$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	5b                   	pop    %ebx$/;"	l
f010637c	obj/kern/kernel.asm	/^f010637c:	5d                   	pop    %ebp$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	c3                   	ret    $/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e <spin_unlock>:$/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	55                   	push   %ebp$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	57                   	push   %edi$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	56                   	push   %esi$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	53                   	push   %ebx$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	89 d8                	mov    %ebx,%eax$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	e8 bf fe ff ff       	call   f0106250 <holding>$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	85 c0                	test   %eax,%eax$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	0f 85 d4 00 00 00    	jne    f010646d <spin_unlock+0xef>$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	00 $/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	e8 36 f6 ff ff       	call   f01059e9 <memmove>$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	e8 3f fc ff ff       	call   f0106000 <cpunum>$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	c7 04 24 94 83 10 f0 	movl   $0xf0108394,(%esp)$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	e8 ff db ff ff       	call   f0103fd8 <cprintf>$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	85 c0                	test   %eax,%eax$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	74 71                	je     f0106451 <spin_unlock+0xd3>$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	e8 e4 e9 ff ff       	call   f0104dd9 <debuginfo_eip>$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	85 c0                	test   %eax,%eax$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	78 39                	js     f0106432 <spin_unlock+0xb4>$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	89 c2                	mov    %eax,%edx$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	c7 04 24 dc 83 10 f0 	movl   $0xf01083dc,(%esp)$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	e8 a8 db ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	eb 12                	jmp    f0106444 <spin_unlock+0xc6>$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	c7 04 24 f3 83 10 f0 	movl   $0xf01083f3,(%esp)$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	e8 94 db ff ff       	call   f0103fd8 <cprintf>$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	39 fb                	cmp    %edi,%ebx$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	74 09                	je     f0106451 <spin_unlock+0xd3>$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	8b 03                	mov    (%ebx),%eax$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	85 c0                	test   %eax,%eax$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	75 98                	jne    f01063e9 <spin_unlock+0x6b>$/;"	l
f0106451	obj/kern/kernel.asm	/^f0106451:	c7 44 24 08 fb 83 10 	movl   $0xf01083fb,0x8(%esp)$/;"	l
f0106458	obj/kern/kernel.asm	/^f0106458:	f0 $/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	c7 44 24 04 84 00 00 	movl   $0x84,0x4(%esp)$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	00 $/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	c7 04 24 cc 83 10 f0 	movl   $0xf01083cc,(%esp)$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	e8 d3 9b ff ff       	call   f0100040 <_panic>$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f010647b	obj/kern/kernel.asm	/^f010647b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	5b                   	pop    %ebx$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	5e                   	pop    %esi$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	5f                   	pop    %edi$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	5d                   	pop    %ebp$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	c3                   	ret    $/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c <__udivdi3>:$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	55                   	push   %ebp$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	57                   	push   %edi$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	56                   	push   %esi$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	89 cd                	mov    %ecx,%ebp$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f01064a8	obj/kern/kernel.asm	/^f01064a8:	85 c0                	test   %eax,%eax$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	75 2c                	jne    f01064d8 <__udivdi3+0x4c>$/;"	l
f01064ac	obj/kern/kernel.asm	/^f01064ac:	39 f9                	cmp    %edi,%ecx$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	77 68                	ja     f0106518 <__udivdi3+0x8c>$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	85 c9                	test   %ecx,%ecx$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	75 0b                	jne    f01064bf <__udivdi3+0x33>$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	31 d2                	xor    %edx,%edx$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	f7 f1                	div    %ecx$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	89 c1                	mov    %eax,%ecx$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	31 d2                	xor    %edx,%edx$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	89 f8                	mov    %edi,%eax$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	f7 f1                	div    %ecx$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	89 c7                	mov    %eax,%edi$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	89 f0                	mov    %esi,%eax$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	f7 f1                	div    %ecx$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	89 c6                	mov    %eax,%esi$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	89 f0                	mov    %esi,%eax$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	89 fa                	mov    %edi,%edx$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	5e                   	pop    %esi$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	5f                   	pop    %edi$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	5d                   	pop    %ebp$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	c3                   	ret    $/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	39 f8                	cmp    %edi,%eax$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	77 2c                	ja     f0106508 <__udivdi3+0x7c>$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	0f bd f0             	bsr    %eax,%esi$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	75 4c                	jne    f0106530 <__udivdi3+0xa4>$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	39 f8                	cmp    %edi,%eax$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	72 0a                	jb     f01064f7 <__udivdi3+0x6b>$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	0f 87 ad 00 00 00    	ja     f01065a4 <__udivdi3+0x118>$/;"	l
f01064f7	obj/kern/kernel.asm	/^f01064f7:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	89 f0                	mov    %esi,%eax$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	89 fa                	mov    %edi,%edx$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	5e                   	pop    %esi$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	5f                   	pop    %edi$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	5d                   	pop    %ebp$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	c3                   	ret    $/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	90                   	nop$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	31 ff                	xor    %edi,%edi$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	31 f6                	xor    %esi,%esi$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	89 f0                	mov    %esi,%eax$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	89 fa                	mov    %edi,%edx$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	5e                   	pop    %esi$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	5f                   	pop    %edi$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	5d                   	pop    %ebp$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	c3                   	ret    $/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	90                   	nop$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	89 fa                	mov    %edi,%edx$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	89 f0                	mov    %esi,%eax$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	f7 f1                	div    %ecx$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	89 c6                	mov    %eax,%esi$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	31 ff                	xor    %edi,%edi$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	89 f0                	mov    %esi,%eax$/;"	l
f0106524	obj/kern/kernel.asm	/^f0106524:	89 fa                	mov    %edi,%edx$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	5e                   	pop    %esi$/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	5f                   	pop    %edi$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	5d                   	pop    %ebp$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	c3                   	ret    $/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106530	obj/kern/kernel.asm	/^f0106530:	89 f1                	mov    %esi,%ecx$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	d3 e0                	shl    %cl,%eax$/;"	d
f0106534	obj/kern/kernel.asm	/^f0106534:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	29 f0                	sub    %esi,%eax$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	89 ea                	mov    %ebp,%edx$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	88 c1                	mov    %al,%cl$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	d3 ea                	shr    %cl,%edx$/;"	d
f0106545	obj/kern/kernel.asm	/^f0106545:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	09 ca                	or     %ecx,%edx$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	89 f1                	mov    %esi,%ecx$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106553	obj/kern/kernel.asm	/^f0106553:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	89 fd                	mov    %edi,%ebp$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	88 c1                	mov    %al,%cl$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	d3 ed                	shr    %cl,%ebp$/;"	d
f010655d	obj/kern/kernel.asm	/^f010655d:	89 fa                	mov    %edi,%edx$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	89 f1                	mov    %esi,%ecx$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	d3 e2                	shl    %cl,%edx$/;"	d
f0106563	obj/kern/kernel.asm	/^f0106563:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	88 c1                	mov    %al,%cl$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	d3 ef                	shr    %cl,%edi$/;"	d
f010656b	obj/kern/kernel.asm	/^f010656b:	09 d7                	or     %edx,%edi$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	89 f8                	mov    %edi,%eax$/;"	l
f010656f	obj/kern/kernel.asm	/^f010656f:	89 ea                	mov    %ebp,%edx$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	89 d1                	mov    %edx,%ecx$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	89 c7                	mov    %eax,%edi$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	39 d1                	cmp    %edx,%ecx$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	72 17                	jb     f0106598 <__udivdi3+0x10c>$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	74 09                	je     f010658c <__udivdi3+0x100>$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	89 fe                	mov    %edi,%esi$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	31 ff                	xor    %edi,%edi$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	e9 41 ff ff ff       	jmp    f01064cd <__udivdi3+0x41>$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	89 f1                	mov    %esi,%ecx$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	d3 e2                	shl    %cl,%edx$/;"	d
f0106594	obj/kern/kernel.asm	/^f0106594:	39 c2                	cmp    %eax,%edx$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	73 eb                	jae    f0106583 <__udivdi3+0xf7>$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	31 ff                	xor    %edi,%edi$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	e9 2b ff ff ff       	jmp    f01064cd <__udivdi3+0x41>$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	66 90                	xchg   %ax,%ax$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	31 f6                	xor    %esi,%esi$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	e9 22 ff ff ff       	jmp    f01064cd <__udivdi3+0x41>$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac <__umoddi3>:$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac:	55                   	push   %ebp$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	57                   	push   %edi$/;"	l
f01065ae	obj/kern/kernel.asm	/^f01065ae:	56                   	push   %esi$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01065b2	obj/kern/kernel.asm	/^f01065b2:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01065c6	obj/kern/kernel.asm	/^f01065c6:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	89 c7                	mov    %eax,%edi$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	89 f2                	mov    %esi,%edx$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	85 ed                	test   %ebp,%ebp$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	75 16                	jne    f01065e8 <__umoddi3+0x3c>$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	39 f1                	cmp    %esi,%ecx$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	0f 86 a6 00 00 00    	jbe    f0106680 <__umoddi3+0xd4>$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	f7 f1                	div    %ecx$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	89 d0                	mov    %edx,%eax$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	31 d2                	xor    %edx,%edx$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	83 c4 20             	add    $0x20,%esp$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	5e                   	pop    %esi$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	5f                   	pop    %edi$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	5d                   	pop    %ebp$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	c3                   	ret    $/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	90                   	nop$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	39 f5                	cmp    %esi,%ebp$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	0f 87 ac 00 00 00    	ja     f010669c <__umoddi3+0xf0>$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01065fa	obj/kern/kernel.asm	/^f01065fa:	0f 84 a8 00 00 00    	je     f01066a8 <__umoddi3+0xfc>$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106606	obj/kern/kernel.asm	/^f0106606:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	89 f9                	mov    %edi,%ecx$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	d3 e8                	shr    %cl,%eax$/;"	d
f0106617	obj/kern/kernel.asm	/^f0106617:	09 e8                	or     %ebp,%eax$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	d3 e0                	shl    %cl,%eax$/;"	d
f0106627	obj/kern/kernel.asm	/^f0106627:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	89 f2                	mov    %esi,%edx$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	d3 e2                	shl    %cl,%edx$/;"	d
f010662f	obj/kern/kernel.asm	/^f010662f:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	d3 e0                	shl    %cl,%eax$/;"	d
f0106635	obj/kern/kernel.asm	/^f0106635:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	89 f9                	mov    %edi,%ecx$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	d3 e8                	shr    %cl,%eax$/;"	d
f0106641	obj/kern/kernel.asm	/^f0106641:	09 d0                	or     %edx,%eax$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	d3 ee                	shr    %cl,%esi$/;"	d
f0106645	obj/kern/kernel.asm	/^f0106645:	89 f2                	mov    %esi,%edx$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f010664b	obj/kern/kernel.asm	/^f010664b:	89 d6                	mov    %edx,%esi$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	89 c5                	mov    %eax,%ebp$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	89 d1                	mov    %edx,%ecx$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	39 d6                	cmp    %edx,%esi$/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	72 67                	jb     f01066c0 <__umoddi3+0x114>$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	74 75                	je     f01066d0 <__umoddi3+0x124>$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	29 e8                	sub    %ebp,%eax$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	d3 e8                	shr    %cl,%eax$/;"	d
f0106669	obj/kern/kernel.asm	/^f0106669:	89 f2                	mov    %esi,%edx$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	89 f9                	mov    %edi,%ecx$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	d3 e2                	shl    %cl,%edx$/;"	d
f010666f	obj/kern/kernel.asm	/^f010666f:	09 d0                	or     %edx,%eax$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	89 f2                	mov    %esi,%edx$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	d3 ea                	shr    %cl,%edx$/;"	d
f0106679	obj/kern/kernel.asm	/^f0106679:	83 c4 20             	add    $0x20,%esp$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	5e                   	pop    %esi$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	5f                   	pop    %edi$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	5d                   	pop    %ebp$/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f:	c3                   	ret    $/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	85 c9                	test   %ecx,%ecx$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	75 0b                	jne    f010668f <__umoddi3+0xe3>$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	31 d2                	xor    %edx,%edx$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	f7 f1                	div    %ecx$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	89 c1                	mov    %eax,%ecx$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	89 f0                	mov    %esi,%eax$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	31 d2                	xor    %edx,%edx$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	f7 f1                	div    %ecx$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	89 f8                	mov    %edi,%eax$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	e9 3e ff ff ff       	jmp    f01065da <__umoddi3+0x2e>$/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c:	89 f2                	mov    %esi,%edx$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	83 c4 20             	add    $0x20,%esp$/;"	l
f01066a1	obj/kern/kernel.asm	/^f01066a1:	5e                   	pop    %esi$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	5f                   	pop    %edi$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	5d                   	pop    %ebp$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	c3                   	ret    $/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	39 f5                	cmp    %esi,%ebp$/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa:	72 04                	jb     f01066b0 <__umoddi3+0x104>$/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac:	39 f9                	cmp    %edi,%ecx$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	77 06                	ja     f01066b6 <__umoddi3+0x10a>$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	89 f2                	mov    %esi,%edx$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	29 cf                	sub    %ecx,%edi$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	19 ea                	sbb    %ebp,%edx$/;"	l
f01066b6	obj/kern/kernel.asm	/^f01066b6:	89 f8                	mov    %edi,%eax$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	83 c4 20             	add    $0x20,%esp$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	5e                   	pop    %esi$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	5f                   	pop    %edi$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	5d                   	pop    %ebp$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	c3                   	ret    $/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	90                   	nop$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	89 d1                	mov    %edx,%ecx$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	89 c5                	mov    %eax,%ebp$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f01066c8	obj/kern/kernel.asm	/^f01066c8:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	eb 8d                	jmp    f010665b <__umoddi3+0xaf>$/;"	l
f01066ce	obj/kern/kernel.asm	/^f01066ce:	66 90                	xchg   %ax,%ax$/;"	l
f01066d0	obj/kern/kernel.asm	/^f01066d0:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	72 ea                	jb     f01066c0 <__umoddi3+0x114>$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	89 f1                	mov    %esi,%ecx$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	eb 81                	jmp    f010665b <__umoddi3+0xaf>$/;"	l
fail	grade-functions.sh	/^fail () {$/;"	f
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt	obj/user/evilhello2.asm	/^	gdt = (struct Segdesc *)(base+offset);$/;"	d
gdt	user/evilhello2.c	/^struct Segdesc *gdt;$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int mon_c(int argc, char **argv, struct Trapframe *tf){$/;"	l
int	obj/kern/kernel.asm	/^int mon_si(int argc, char **argv, struct Trapframe *tf){$/;"	l
int	obj/kern/kernel.asm	/^int mon_x(int argc, char **argv, struct Trapframe *tf){$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sbrktest.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interval	obj/kern/kernel.asm	/^		interval = 0;$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sbrktest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sbrktest.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_c	kern/monitor.c	/^int mon_c(int argc, char **argv, struct Trapframe *tf){$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_si	kern/monitor.c	/^int mon_si(int argc, char **argv, struct Trapframe *tf){$/;"	f
mon_x	kern/monitor.c	/^int mon_x(int argc, char **argv, struct Trapframe *tf){$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/badsegment.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/badsegment.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/breakpoint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/breakpoint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/divzero.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/divzero.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/dumbfork.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/dumbfork.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/fairness.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/fairness.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultalloc.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultalloc.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultallocbad.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultallocbad.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultbadhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultbadhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultdie.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultdie.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultevilhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultevilhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultnostack.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultnostack.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultread.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultread.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultreadkernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultreadkernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultregs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultregs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwrite.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwrite.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwritekernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwritekernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/forktree.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/forktree.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/hello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/hello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/idle.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/idle.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpong.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpong.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpongs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpongs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/primes.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/primes.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/sbrktest.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/sbrktest.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/softint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/softint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/spin.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/spin.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/stresssched.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/stresssched.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/testbss.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/testbss.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/yield.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/yield.asm	/^  n0 = nn.s.low;$/;"	d
n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/badsegment.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/badsegment.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/breakpoint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/breakpoint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/divzero.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/divzero.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/dumbfork.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/dumbfork.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/fairness.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/fairness.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultalloc.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultalloc.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultallocbad.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultallocbad.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultbadhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultbadhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultdie.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultdie.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultevilhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultevilhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultnostack.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultnostack.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultread.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultread.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultreadkernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultreadkernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultregs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultregs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwrite.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwrite.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwritekernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwritekernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/forktree.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/forktree.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/hello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/hello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/idle.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/idle.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpong.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpong.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpongs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpongs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/primes.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/primes.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/sbrktest.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/sbrktest.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/softint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/softint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/spin.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/spin.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/stresssched.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/stresssched.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/testbss.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/testbss.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/yield.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/yield.asm	/^  n1 = nn.s.high;$/;"	d
n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/badsegment.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/breakpoint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/divzero.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/dumbfork.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/fairness.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultalloc.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultallocbad.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultbadhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultdie.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultevilhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultnostack.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultread.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultreadkernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultregs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwrite.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwritekernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/forktree.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/hello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/idle.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpong.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpongs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/primes.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/sbrktest.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/softint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/spin.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/stresssched.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/testbss.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/yield.asm	/^	      n2 = n1 >> b;$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP(nextfree, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sbrktest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sbrktest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/evilhello2.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sbrktest.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
old	obj/user/evilhello2.asm	/^	old = *entry;$/;"	d
old	user/evilhello2.c	/^struct Segdesc old;$/;"	v	typeref:struct:Segdesc
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sbrktest.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '-';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc_npages	kern/pmap.c	/^page_alloc_npages(int alloc_flags, int n)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_npages	kern/pmap.c	/^page_free_npages(struct Page *pp, int n)$/;"	f
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_realloc_npages	kern/pmap.c	/^page_realloc_npages(struct Page *pp, int old_n, int new_n)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npages*page_size);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde	obj/kern/kernel.asm	/^	pde = pgdir + PDX(va);$/;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)elf+elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sbrktest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sbrktest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sbrktest.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sbrktest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^			pt = page2kva(pp);$/;"	d
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pt	obj/kern/kernel.asm	/^	  pt = KADDR(PTE_ADDR(*pde));$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (void *)va, 1);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/badsegment.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/breakpoint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/divzero.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/dumbfork.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/fairness.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultalloc.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultallocbad.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultbadhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultdie.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultevilhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultnostack.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultread.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultreadkernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultregs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwrite.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwritekernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/forktree.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/hello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/idle.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpong.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpongs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/primes.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/sbrktest.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/softint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/spin.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/stresssched.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/testbss.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/yield.asm	/^		  q0 = 1;$/;"	d
q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/badsegment.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/breakpoint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/divzero.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/dumbfork.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/fairness.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultalloc.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultallocbad.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultbadhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultdie.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultevilhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultnostack.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultread.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultreadkernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultregs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwrite.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwritekernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/forktree.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/hello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/idle.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpong.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpongs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/primes.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/sbrktest.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/softint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/spin.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/stresssched.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/testbss.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/yield.asm	/^	      q1 = 0;$/;"	d
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sbrktest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	6;"	d
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
result	obj/kern/kernel.asm	/^	result = KADDR(PADDR(nextfree));$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sbrktest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sbrktest.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f
ring0_call_func	obj/user/evilhello2.asm	/^    ring0_call_func = fun_ptr;$/;"	d
ring0_call_func	user/evilhello2.c	/^static void (*ring0_call_func)(void) = NULL;$/;"	v	file:
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runexpect	grade-functions.sh	/^runexpect () {$/;"	f
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
runtest2	grade-functions.sh	/^runtest2 () {$/;"	f
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sbrktest.asm	/^	s = (char *) start;$/;"	d
s	obj/user/sbrktest.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
sfork	lib/fork.c	/^sfork(void)$/;"	f
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sbrktest.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	37;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock_test	kern/init.c	/^void spinlock_test()$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/user/sbrktest.asm	/^	start = sys_sbrk(0);$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static volatile int test_ctr = 0;$/;"	l
static	obj/user/badsegment.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static __inline void$/;"	l
static	obj/user/evilhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello2.asm	/^static long long$/;"	l
static	obj/user/evilhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello2.asm	/^static void (*ring0_call_func)(void) = NULL;$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sbrktest.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/sbrktest.asm	/^static inline int32_t$/;"	l
static	obj/user/sbrktest.asm	/^static long long$/;"	l
static	obj/user/sbrktest.asm	/^static unsigned long long$/;"	l
static	obj/user/sbrktest.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_sbrk	kern/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f	file:
sys_sbrk	lib/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
sysenter_handler	obj/kern/kernel.asm	/^sysenter_handler:$/;"	l
test_ctr	kern/init.c	/^static volatile int test_ctr = 0;$/;"	v	file:
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	37;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sbrktest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sbrktest.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned read_eip();$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = va_p;$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vaddr	user/evilhello2.c	/^char vaddr[PGSIZE];$/;"	v
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void spinlock_test()$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void call_fun_ptr()$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sbrktest.asm	/^void *$/;"	l
void	obj/user/sbrktest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sbrktest.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sbrktest.asm	/^				width = 0;$/;"	d
width	obj/user/sbrktest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sbrktest.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrmsr	inc/x86.h	14;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
